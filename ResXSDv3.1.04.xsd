<!--
	Copyright (c) 2023. Residential Energy Services Network (RESNET)
	Version 3.1.03
	Last Modified: August 11, 2023 
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" elementFormDefault="qualified"
	attributeFormDefault="unqualified" vc:minVersion="1.1" xmlns:xerces="http://xerces.apache.org">
	<xs:element name="Project">
		<xs:complexType>
			<xs:all>
				<xs:element name="Revisions" minOccurs="0" maxOccurs="1">
					<xs:annotation>
						<xs:documentation>If your are submitting revision of Ratings or IECC reports then this section is used.
							Please select the revision type for every revision. No duplicate revisions are allowed.
						</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Revision" minOccurs="1" maxOccurs="100">
								<xs:complexType>
									<xs:all>
										<xs:element ref="RegistryID" minOccurs="0"/>
										<xs:element ref="PermitID" minOccurs="0"/>
										<xs:element name="DateCompleted" type="xs:date"
											minOccurs="0">
											<xs:annotation>
												<xs:documentation>Date Completed in YYYY-MM-DD format</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element ref="ReportNo" minOccurs="0"/>
										<xs:element ref="H2OID" minOccurs="0"/>
										<xs:element name="RevisionReason" type="xs:string"
											minOccurs="1">
											<xs:annotation>
												<xs:documentation>Enter the Revision reason
									</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="RevisionType" type="RevisionType">
											<xs:annotation>
												<xs:documentation>Select the RevisionType
									</xs:documentation>
											</xs:annotation>
										</xs:element>
									</xs:all>
									<xs:assert test="
											if (RevisionType[contains(text(), 'Permit')]) then
												(exists(PermitID) and exists(DateCompleted))
											else
												not(PermitID)"
										xerces:message="If 'Permit' needs to be revised then Permit ID and DateCompleted are mandatory or else it should not exist."/>
									<xs:assert test="
											if (RevisionType[contains(text(), 'Ratings')]) then
												exists(RegistryID)
											else
												not(RegistryID)"
										xerces:message="If 'Ratings' needs to be revised then RegistryID is mandatory or else it should not exist."/>
									<xs:assert test="
											if (RevisionType[contains(text(), 'Certificate')]) then
												(exists(ReportNo) and exists(DateCompleted))
											else
												not(ReportNo)"
										xerces:message="If 'Certificate' needs to be revised then ReportNo and DateCompleted are mandatory or else it should not exist."/>
									<xs:assert test="
											if (RevisionType[contains(text(), 'HERS H2O')]) then
												exists(H2OID)
											else
												not(H2OID)"
										xerces:message="If 'HERS H2O' needs to be revised then H2OID is mandatory or else it should not exist."
									/>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
					<xs:key name="idKey">
						<xs:selector xpath="Revision"/>
						<xs:field xpath="RevisionType"/>
					</xs:key>
				</xs:element>
				<xs:element name="Building">
					<xs:complexType>
						<xs:all>
							<xs:group ref="BuilderGroup"/>
							<xs:element ref="ClimateZoneNo"/>
							<xs:element ref="ClimateZoneNo2021"/>
							<xs:element name="CheckGovernmentSubsidized" type="xs:boolean"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>Check Government Subsidized? (true/false)</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Community" type="xs:string" minOccurs="0"/>
							<xs:element name="PlanName" type="xs:string" minOccurs="0"/>
							<xs:element name="Model" type="xs:string" minOccurs="0"/>
							<xs:element name="Development" type="xs:string" minOccurs="0"/>
							<xs:element name="ConstructionYear" maxOccurs="1" minOccurs="0">
								<xs:simpleType>
									<xs:annotation>
										<xs:documentation>4-digit Year</xs:documentation>
									</xs:annotation>
									<xs:restriction base="xs:string">
										<xs:pattern value="[0-9]{4}"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element name="PermitDate" type="xs:date" minOccurs="1">
								<xs:annotation>
									<xs:documentation>Enter Building Permit Date as YYYY-MM-DD</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="DwellingUnitID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Enter Dwelling Unit Unique Identifier for ZERH program</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Characteristics" minOccurs="0" maxOccurs="1">
								<xs:annotation>
									<xs:documentation>Building Characteristics</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:group ref="CharacteristicsGroup"/>
								</xs:complexType>
							</xs:element>
						</xs:all>
					</xs:complexType>
				</xs:element>
				<xs:element ref="Provider" maxOccurs="1"/>
				<xs:element name="Verifiers" minOccurs="1" maxOccurs="1">
					<xs:annotation>
						<xs:documentation>
							Enter all verifiers.
						</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Verifier" minOccurs="1" maxOccurs="100">
								<xs:complexType>
									<xs:all>
										<xs:element name="Name" type="xs:string"/>
										<xs:element name="ID" type="xs:string">
											<xs:annotation>
												<xs:documentation/>
											</xs:annotation>
										</xs:element>
										<xs:element name="Type" type="VerifierType">
											<xs:annotation>
												<xs:documentation/>
											</xs:annotation>
										</xs:element>
									</xs:all>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:group ref="RaterGroup"/>
				<xs:element name="Ratings" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Ratings</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:all>
							<xs:element name="Confirmed" minOccurs="0">
								<xs:complexType>
									<xs:all>
										<xs:element name="RatingType" minOccurs="0"
											default="Confirmed">
											<xs:simpleType>
												<xs:restriction base="xs:string">
												<xs:enumeration value="Confirmed"/>
												<xs:enumeration value="Confirmed Threshold"/>
												<xs:enumeration value="Sampled"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<xs:element name="IECCcomplianceERI" minOccurs="0"
											maxOccurs="1">
											<xs:complexType>
												<xs:sequence>
												<xs:element name="IECCversion">
												<xs:simpleType>
												<xs:annotation>
												<xs:documentation>Enter 4-digit year of IECC code</xs:documentation>
												</xs:annotation>
												<xs:restriction base="xs:string">
												<xs:pattern value="[0-9]{4}"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="ERIscore">
												<xs:simpleType>
												<xs:annotation>
												<xs:documentation>Enter ERI score</xs:documentation>
												</xs:annotation>
												<xs:restriction base="xs:integer">
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="Registry">
											<xs:complexType>
												<xs:all>
												<xs:element ref="RegistryID" minOccurs="0"/>
												<xs:element name="ProviderSampleSetID"
												default="00000000">
												<xs:simpleType>
												<xs:annotation>
												<xs:documentation>ProviderSampleSetID in the form XXXXXXXX</xs:documentation>
												</xs:annotation>
												<xs:restriction base="xs:string">
												<xs:pattern value="[A-Z0-9]{4,8}"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="DateRated" type="xs:date">
												<xs:annotation>
												<xs:documentation>"Date Rated shall be the date of the final inspection in YYYY-MM-DD format"</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element ref="Status"/>
												<xs:element ref="HomeTypeID"/>
												<xs:element ref="ConditionedArea"/>
												<xs:element ref="ConditionedVolume"/>
												<xs:element ref="NumberBedrooms"/>
												<xs:element ref="ConditionedBasementArea"/>
												<xs:element ref="UnconditionedBasementArea"/>
												<xs:element ref="Software"/>
												<xs:element ref="SoftwareVersion"/>
												<xs:element name="EPAAppID" type="xs:string"
												minOccurs="0">
												<xs:annotation>
												<xs:documentation>Optional EPA Rater Pro App ID as assigned by the EPA App</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="Standard301Version"
												minOccurs="1">
												<xs:annotation>
												<xs:documentation>Publication Year of RESNET/ICC 301 Standard used to determine the HERS Rating</xs:documentation>
												</xs:annotation>
												<xs:simpleType>
												<xs:restriction base="xs:string">
												<xs:enumeration value="2014"/>
												<xs:enumeration value="2019"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="InputFile" type="xs:string">
												<xs:annotation>
												<xs:documentation>CDATA tag must be used to enclose the InputFile string</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="Notes" type="xs:string"/>
												</xs:all>
											</xs:complexType>
										</xs:element>
										<xs:element name="Rating">
											<xs:complexType>
												<xs:sequence>
												<xs:element name="HERSIndex" type="xs:integer"/>
												<xs:element name="CO2eIndex" type="xs:integer"/>
												<xs:element name="AnnualElectricity"
												type="xs:float" default="0"/>
												<xs:element name="AnnualGas" type="xs:float"
												default="0"/>
												<xs:element name="AnnualOil" type="xs:float"
												default="0"/>
												<xs:element name="AnnualPropane" type="xs:float"
												default="0"/>
												<xs:element name="AnnualOPP" type="xs:float"
												default="0"/>
												<xs:element name="AnnualOther" type="xs:float"
												default="0"/>
												<xs:element ref="PriceElectricity"/>
												<xs:element ref="PriceGas"/>
												<xs:element name="PriceOil" type="xs:float"
												nillable="true"/>
												<xs:element name="PricePropane" type="xs:float"
												nillable="true"/>
												<xs:element name="CostHeating" type="xs:float"
												default="0"/>
												<xs:element name="CostCooling" type="xs:float"
												default="0"/>
												<xs:element name="CostHotWater" type="xs:float"
												default="0"/>
												<xs:element name="CostLighting" type="xs:float"
												default="0"/>
												<xs:element name="CostAppliances" type="xs:float"
												default="0"/>
												<xs:element name="CostOPP" default="0">
												<xs:simpleType>
												<xs:restriction base="xs:float">
												<xs:maxInclusive value="0"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="CostTotal" type="xs:float"
												default="0"/>
												<xs:element name="RateECHeating" type="xs:float">
												<xs:annotation>
												<xs:documentation>Heating Energy Consumption (EC_x) in Rated Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="RateECCooling" type="xs:float">
												<xs:annotation>
												<xs:documentation>Cooling Energy Consumption (EC_x) in Rated Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="RateECHotWater" type="xs:float">
												<xs:annotation>
												<xs:documentation>Hot Water Energy Consumption (EC_x) in Rated Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="RateECLgtApl" type="xs:float">
												<xs:annotation>
												<xs:documentation>Lighting and Appliance Energy Consumption (EULLA) in the Rated Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="nMEULHeating" type="xs:float">
												<xs:annotation>
												<xs:documentation>Heating normalized Modified End Use Load (nMEUL) in Rated Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="nMEULCooling" type="xs:float">
												<xs:annotation>
												<xs:documentation>Cooling normalized Modified End Use Load (nMEUL) in Rated Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="nMEULHotWater" type="xs:float">
												<xs:annotation>
												<xs:documentation>Hot Water normalized Modified End Use Load (nMEUL) in Rated Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="nMEULLgtApl" type="xs:float">
												<xs:annotation>
												<xs:documentation>Lighting and Appliance load (EULLA) in Rated Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="nECHeating" type="xs:float">
												<xs:annotation>
												<xs:documentation>normalized Heating Energy Consumption (nEC_x) in Rated Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="nECCooling" type="xs:float">
												<xs:annotation>
												<xs:documentation>normalized Cooling Energy Consumption (nEC_x) in Rated Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="nECHotWater" type="xs:float">
												<xs:annotation>
												<xs:documentation>normalized Hot Water Energy Consumption (nEC_x) in Rated Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="nECLgtApl" type="xs:float">
												<xs:annotation>
												<xs:documentation>Lighting and Appliance Energy Consumption (EULLA) in Rated Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="CO2" type="xs:float"/>
												<xs:element name="SOx" type="xs:float"/>
												<xs:element name="NOx" type="xs:float"/>
												<xs:element name="RefCostHeating" type="xs:float"/>
												<xs:element name="RefCostCooling" type="xs:float"/>
												<xs:element name="RefCostHotWater" type="xs:float"/>
												<xs:element name="RefCostLighting" type="xs:float"/>
												<xs:element name="RefCostAppliances"
												type="xs:float"/>
												<xs:element name="RefCostTotal" type="xs:float"/>
												<xs:element name="RefEULHeating" type="xs:float">
												<xs:annotation>
												<xs:documentation>Heating Load (REUL) in Reference Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="RefEULCooling" type="xs:float">
												<xs:annotation>
												<xs:documentation>Cooling Load (REUL) in Reference Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="RefEULHotWater" type="xs:float">
												<xs:annotation>
												<xs:documentation>Hot Water Load (REUL) in Reference Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="RefEULLgtApl" type="xs:float">
												<xs:annotation>
												<xs:documentation>Lighting and Appliance Load (REULLA) in Reference Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="RefECHeating" type="xs:float">
												<xs:annotation>
												<xs:documentation>Heating Energy Consumption (EC_r) in Reference Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="RefECCooling" type="xs:float">
												<xs:annotation>
												<xs:documentation>Cooling Energy Consumption (EC_r) in Reference Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="RefECHotWater" type="xs:float">
												<xs:annotation>
												<xs:documentation>Hot Water Energy Consumption (EC_r) in Reference Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="RefECLgtApl" type="xs:float">
												<xs:annotation>
												<xs:documentation>Lighting and Appliance Energy Consumption (REULLA) in Reference Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="RefCO2" type="xs:float"/>
												<xs:element name="RefSOx" type="xs:float"/>
												<xs:element name="RefNOx" type="xs:float"/>
												<xs:element name="OPPNet" type="xs:float"/>
												<xs:element name="PEfrac" type="xs:float"/>
												<xs:element name="IADsave" type="xs:float"
												minOccurs="0"/>
												<xs:element name="CO2eIndex" type="xs:integer"
												minOccurs="0"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="TaxCredit" minOccurs="0">
											<xs:complexType>
												<xs:sequence>
												<xs:element name="QualUseHeating" type="xs:float"/>
												<xs:element name="QualUseCooling" type="xs:float"/>
												<xs:element name="QualUseTotal" type="xs:float"/>
												<xs:element name="QualLoadHeating" type="xs:float"/>
												<xs:element name="QualLoadCooling" type="xs:float"/>
												<xs:element name="QualLoadTotal" type="xs:float"/>
												<xs:element name="RefUseHeating" type="xs:float"/>
												<xs:element name="RefUseCooling" type="xs:float"/>
												<xs:element name="RefUseTotal" type="xs:float"/>
												<xs:element name="RefLoadHeating" type="xs:float"/>
												<xs:element name="RefLoadCooling" type="xs:float"/>
												<xs:element name="RefLoadTotal" type="xs:float"/>
												<xs:element name="UseSavings" type="xs:float"/>
												<xs:element name="LoadSavings" type="xs:float"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="EEM" minOccurs="0">
											<xs:complexType>
												<xs:sequence>
												<xs:element name="MonthlyEnergySavings"
												type="xs:float" default="0"/>
												<xs:element name="EnergyValue" type="xs:float"
												default="0"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="EEP">
											<xs:complexType>
												<xs:sequence>
												<xs:element name="EEPQualified" type="xs:boolean"
												default="false" minOccurs="1">
												<xs:annotation>
												<xs:documentation>Energy Efficiency Program Qualified?</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="ProgramType" minOccurs="0">
												<xs:complexType>
												<xs:all>
												<xs:element name="EPA" type="EPAEstarType"
												minOccurs="0" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>ENERGY STAR program qualification</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="DOE" type="DOEZERHType"
												minOccurs="0" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>DOE Zero Energy Ready Home qualification</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="IAP" type="IAPType"
												minOccurs="0" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>Indoor Air-Plus qualification</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="OPQ" type="OPQType"
												minOccurs="0" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>Other Program qualification</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="PHIUS" type="PHIUSType"
												minOccurs="0" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>PHIUS Program qualifiation</xs:documentation>
												</xs:annotation>
												</xs:element>
												</xs:all>
												</xs:complexType>
												</xs:element>
												</xs:sequence>
												<xs:assert
												test="(((EEPQualified = false()) and not(ProgramType)) or ((EEPQualified = true()) and exists(ProgramType) and (count(./ProgramType/*) gt 0)))"
												/>
											</xs:complexType>
										</xs:element>
										<xs:element name="HomeEnergyPerformance">
											<xs:complexType>
												<xs:sequence>
												<xs:element name="Enclosure" minOccurs="1"
												maxOccurs="1">
												<xs:complexType>
												<xs:sequence minOccurs="1">
												<xs:element name="AboveGradeFloorA"
												type="xs:float">
												<xs:annotation>
												<xs:documentation>[A = ∑ Ai  for i = 1, n]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="AboveGradeFloorUo"
												type="xs:float" minOccurs="0">
												<xs:annotation>
												<xs:documentation>[Uo = (∑ (Ui * Ai)) / A  for i = 1, n]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="GroundContactFloorA"
												type="xs:float">
												<xs:annotation>
												<xs:documentation>[A = ∑ Ai  for i = 1, n]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="GroundContactFloorUo"
												type="xs:float" minOccurs="0">
												<xs:annotation>
												<xs:documentation>[Uo = (∑ (Ui * Ai)) / A  for i = 1, n] [exterior film coeff = 0]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="CeilingA" type="xs:float">
												<xs:annotation>
												<xs:documentation>[A = ∑ Ai  for i = 1, n]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="CeilingUo" type="xs:float"
												minOccurs="0">
												<xs:annotation>
												<xs:documentation>[Uo = (∑ (Ui * Ai)) / A  for i = 1, n]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="AboveGradeWallA" type="xs:float">
												<xs:annotation>
												<xs:documentation>[A = ∑ Ai  for i = 1, n]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="AboveGradeWallUo"
												type="xs:float" minOccurs="0">
												<xs:annotation>
												<xs:documentation>[Uo = (∑ (Ui * Ai)) / A  for i = 1, n]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="GroundContactWallA"
												type="xs:float">
												<xs:annotation>
												<xs:documentation>[A = ∑ Ai  for i = 1, n]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="GroundContactWallUo"
												type="xs:float" minOccurs="0">
												<xs:annotation>
												<xs:documentation>[Uo = (∑ (Ui * Ai)) / A  for i = 1, n]  [exterior film coeff = 0]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="WindowA" type="xs:float">
												<xs:annotation>
												<xs:documentation>[A = ∑ Ai  for i = 1, n]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element ref="WindowUo"/>
												<xs:element ref="WindowSHGC"/>
												<xs:element name="DoorA" type="xs:float">
												<xs:annotation>
												<xs:documentation>[A = ∑ Ai  for i = 1, n]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="DoorUo" type="xs:float"
												minOccurs="0">
												<xs:annotation>
												<xs:documentation>[Uo = (∑ (Ui * Ai)) / A  for i = 1, n]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="OverallEnclosureUA"
												type="xs:float">
												<xs:annotation>
												<xs:documentation>[Enclosure UA = AG Floor (Uo*A) + Ceiling (Uo*A) + AG Wall (Uo*A) + Window (Uo*A) + Door (Uo*A)]</xs:documentation>
												</xs:annotation>
												</xs:element>
												</xs:sequence>
												<xs:assert
												test="((AboveGradeFloorA[text()] = 0 and not(AboveGradeFloorUo)) or (AboveGradeFloorA[text()] gt 0 and exists(AboveGradeFloorUo)))"/>
												<xs:assert
												test="((GroundContactFloorA[text()] = 0 and not(GroundContactFloorUo)) or (GroundContactFloorA[text()] gt 0 and exists(GroundContactFloorUo)))"/>
												<xs:assert
												test="((CeilingA[text()] = 0 and not(CeilingUo)) or (CeilingA[text()] gt 0 and exists(CeilingUo)))"/>
												<xs:assert
												test="((AboveGradeWallA[text()] = 0 and not(AboveGradeWallUo)) or (AboveGradeWallA[text()] gt 0 and exists(AboveGradeWallUo)))"/>
												<xs:assert
												test="((GroundContactWallA[text()] = 0 and not(GroundContactWallUo)) or (GroundContactWallA[text()] gt 0 and exists(GroundContactWallUo)))"/>
												<xs:assert
												test="((WindowA[text()] = 0 and not(WindowUo) and not(WindowSHGC)) or (WindowA[text()] gt 0 and exists(WindowUo) and exists(WindowSHGC)))"/>
												<xs:assert
												test="((DoorA[text()] = 0 and not(DoorUo)) or (DoorA[text()] gt 0 and exists(DoorUo)))"/>
												<xs:assert test="OverallEnclosureUA[text()] gt 0"
												/>
												</xs:complexType>
												</xs:element>
												<xs:element ref="HVACHeatingSystems"/>
												<xs:element ref="HVACCoolingSystems"/>
												<xs:element ref="HVACMechVentSystems"/>
												<xs:element name="HVACDehumidificationSystems"
												minOccurs="1" maxOccurs="1">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="System" minOccurs="0"
												maxOccurs="100">
												<xs:complexType>
												<xs:all>
												<xs:element name="Type">
												<xs:simpleType>
												<xs:restriction base="xs:string">
												<xs:enumeration value="none"/>
												<xs:enumeration value="standard"/>
												<xs:enumeration value="eStar"/>
												<xs:enumeration value="other"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="Capacity" type="xs:float">
												<xs:annotation>
												<xs:documentation>Capacity in liters per day</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="Efficiency" type="xs:float">
												<xs:annotation>
												<xs:documentation>Efficiency in liters per kWh</xs:documentation>
												</xs:annotation>
												</xs:element>
												</xs:all>
												</xs:complexType>
												</xs:element>
												</xs:sequence>
												<xs:attribute
												name="NumHVACDehumidificationSystems"
												type="xs:int" use="required"/>
												<xs:assert
												test="(@NumHVACDehumidificationSystems = count(System))"
												/>
												</xs:complexType>
												</xs:element>
												<xs:element name="LightingAppliances"
												minOccurs="1" maxOccurs="1">
												<xs:complexType>
												<xs:sequence minOccurs="0">
												<xs:element name="QualifyingLightingLtX"
												type="xs:float" minOccurs="0">
												<xs:annotation>
												<xs:documentation>percent lumens/watt less than 50</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="QualifyingLightingGeX"
												type="xs:float" minOccurs="0">
												<xs:annotation>
												<xs:documentation>percent fluorescent lighting</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="QualifyingLightingLED"
												type="xs:float" minOccurs="0">
												<xs:annotation>
												<xs:documentation>percent LED lighting</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="InteriorLightingFL"
												type="xs:float">
												<xs:annotation>
												<xs:documentation>float faction for qualifying interior fluorescent lighting (Tier I)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="InteriorLightingLED"
												type="xs:float">
												<xs:annotation>
												<xs:documentation>float fraction for qualifying interior LED lighting (Tier II)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="ExteriorLightingFL"
												type="xs:float">
												<xs:annotation>
												<xs:documentation>float fraction for qualifying exterior fluorescent lighting (Tier I)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="ExteriorLightingLED"
												type="xs:float">
												<xs:annotation>
												<xs:documentation>float fraction for qualifying exterior LED lighting (Tier II)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="GarageLightingFL"
												type="xs:float" minOccurs="0">
												<xs:annotation>
												<xs:documentation>float fraction for qualifying garage fluorescent lighting (Tier I)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="GarageLightingLED"
												type="xs:float" minOccurs="0">
												<xs:annotation>
												<xs:documentation>float fraction qualifying garage LED lighting (Tier II)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="Refrigerator" default="standard">
												<xs:simpleType>
												<xs:restriction base="xs:string">
												<xs:enumeration value="standard"/>
												<xs:enumeration value="eStar"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="DishWasher" default="standard">
												<xs:simpleType>
												<xs:restriction base="xs:string">
												<xs:enumeration value="standard"/>
												<xs:enumeration value="eStar"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="ClothesWasher"
												default="standard">
												<xs:simpleType>
												<xs:restriction base="xs:string">
												<xs:enumeration value="standard"/>
												<xs:enumeration value="eStar"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="ClothesDryer" default="standard">
												<xs:simpleType>
												<xs:restriction base="xs:string">
												<xs:enumeration value="standard"/>
												<xs:enumeration value="eStar"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="CeilingFans" default="none">
												<xs:simpleType>
												<xs:restriction base="xs:string">
												<xs:enumeration value="none"/>
												<xs:enumeration value="standard"/>
												<xs:enumeration value="eStar"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												</xs:sequence>
												</xs:complexType>
												</xs:element>
												<xs:element ref="HotWaterSystems"/>
												<xs:element name="MeasuredEnclosureTightness"
												minOccurs="1" maxOccurs="1">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="MeasurementType">
												<xs:annotation>
												<xs:documentation>All Ratings using Threshold Analysis, including all Sampled and Threshold Ratings, must use this "Threshold Type"</xs:documentation>
												</xs:annotation>
												<xs:simpleType>
												<xs:restriction base="xs:string">
												<xs:enumeration value="SinglePoint"/>
												<xs:enumeration value="MultiPoint"/>
												<xs:enumeration value="Threshold"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:choice>
												<xs:element name="SinglePoint" minOccurs="0">
												<xs:complexType>
												<xs:all>
												<xs:element name="cfm50" type="xs:float"
												maxOccurs="100"/>
												<xs:element name="ELA" type="xs:float"
												maxOccurs="100"/>
												</xs:all>
												</xs:complexType>
												</xs:element>
												<xs:element name="MultiPoint" minOccurs="0">
												<xs:complexType>
												<xs:all>
												<xs:element name="c" type="xs:float"
												maxOccurs="100"/>
												<xs:element name="n" type="xs:float"
												maxOccurs="100"/>
												<xs:element name="RSqrd" type="xs:float"
												maxOccurs="100"/>
												<xs:element name="ELA" type="xs:float"
												maxOccurs="100"/>
												</xs:all>
												</xs:complexType>
												</xs:element>
												<xs:element name="Threshold" minOccurs="0">
												<xs:annotation>
												<xs:documentation>
														...Threshold values must be reported for all homes using this "Measurement Type"
														...Tested values must be reported for all Threshold Ratings
														...Tested values must be reported for all tested homes in Samples Ratings sample sets
													</xs:documentation>
												</xs:annotation>
												<xs:complexType>
												<xs:all>
												<xs:element name="cfm50Threshold" type="xs:float"
												minOccurs="1" maxOccurs="100"/>
												<xs:element name="ELAThreshold" type="xs:float"
												minOccurs="1" maxOccurs="100"/>
												<xs:element name="cfm50Tested" type="xs:float"
												minOccurs="0" maxOccurs="100"/>
												<xs:element name="ELATested" type="xs:float"
												minOccurs="0" maxOccurs="100"/>
												</xs:all>
												</xs:complexType>
												</xs:element>
												</xs:choice>
												</xs:sequence>
												<xs:assert
												test="(MeasurementType[text()] = 'SinglePoint' and exists(SinglePoint)) or (MeasurementType[text()] = 'MultiPoint' and exists(MultiPoint)) or (MeasurementType[text()] = 'Threshold' and exists(Threshold))"
												/>
												</xs:complexType>
												</xs:element>
												<xs:element name="DuctSystems" minOccurs="1"
												maxOccurs="1">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="System" minOccurs="1"
												maxOccurs="100">
												<xs:complexType>
												<xs:all>
												<xs:element name="Type">
												<xs:annotation>
												<xs:documentation>All Ratings using Threshold Analysis, including all Sampled and Threshold Ratings, must use "Threshold Type"</xs:documentation>
												</xs:annotation>
												<xs:simpleType>
												<xs:restriction base="xs:string">
												<xs:enumeration value="ductless"/>
												<xs:enumeration value="ducted"/>
												<xs:enumeration value="Threshold ductless"/>
												<xs:enumeration value="Threshold ducted"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="TestedLeakageException"
												minOccurs="0">
												<xs:annotation>
												<xs:documentation>Unless DuctSystem is qualified for testing exception or for TotalLeakAlternative, then TestedLeakage entries are required.</xs:documentation>
												</xs:annotation>
												<xs:complexType>
												<xs:all>
												<xs:element name="QualificationCertification"
												type="xs:boolean" default="false" minOccurs="1">
												<xs:annotation>
												<xs:documentation>Certifies either of two things. First, that this dwelling unit meets the requirements for duct testing exemption in accordance with the RESNET Standard. Or, that it meets the requirements for the total duct leakage alternatives described in the RESNET Standard.</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="ExceptionType" minOccurs="0">
												<xs:simpleType>
												<xs:restriction base="xs:string">
												<xs:enumeration value="TestExemptDSE"/>
												<xs:enumeration value="TotalLeakAlternative"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="TotalLeakTestValue"
												minOccurs="0">
												<xs:annotation>
												<xs:documentation>Total Duct Leakage test result value (cfm25 - cubic feet per minute at 25 Pa pressurization) obtained from testing of the Rated Dwelling Unit that is qualified for Tested Leakage Exception.</xs:documentation>
												</xs:annotation>
												<xs:complexType>
												<xs:simpleContent>
												<xs:extension base="xs:float">
												<xs:attribute fixed="cfm25" name="unit"/>
												</xs:extension>
												</xs:simpleContent>
												</xs:complexType>
												</xs:element>
												<xs:element name="PercentDuctInsideAttached"
												type="xs:float" minOccurs="0">
												<xs:annotation>
												<xs:documentation>Percentage of duct area inside the Conditioned Space Volume for Attached Dwelling Unit qualified for Tested Leakage Exception.</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="AirHandlerInsideAttached"
												type="xs:boolean" default="false" minOccurs="0">
												<xs:annotation>
												<xs:documentation>Determination if air handler unit is within the Conditioned Space Volume for Attached Dwelling units qualified for Tested Leakage Exception.</xs:documentation>
												</xs:annotation>
												</xs:element>
												</xs:all>
												</xs:complexType>
												</xs:element>
												<xs:element name="TestedLeakage" minOccurs="0">
												<xs:complexType>
												<xs:all>
												<xs:element name="cfm25outThreshold"
												type="xs:float" minOccurs="0"/>
												<xs:element name="cfm25totalThreshold"
												type="xs:float" minOccurs="0"/>
												<xs:element name="QnThreshold" type="xs:float"
												minOccurs="0">
												<xs:annotation>
												<xs:documentation>If Threshold ducted, enter ...Threshold values required for all Sampled and Threshold Ratings</xs:documentation>
												<xs:documentation>If Threshold ductless, do not enter ...Threshold values</xs:documentation>
												<xs:documentation>Qn=cfm25out/CFA</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="cfm25outTested" type="xs:float"
												minOccurs="0"/>
												<xs:element name="cfm25totalTested"
												type="xs:float" minOccurs="0"/>
												<xs:element name="QnTested" type="xs:float"
												minOccurs="0">
												<xs:annotation>
												<xs:documentation>...Tested values required for all Confirmed Ratings, all Threshold Ratings and for the tested home in sample set for Sampled Ratings</xs:documentation>
												<xs:documentation>Qn=cfm25out/CFA</xs:documentation>
												</xs:annotation>
												</xs:element>
												</xs:all>
												</xs:complexType>
												</xs:element>
												<xs:element name="SupplyDuctsCondSpace"
												type="xs:float">
												<xs:annotation>
												<xs:documentation>% supply ducts located in conditioned space</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="ReturnDuctsCondSpace"
												type="xs:float">
												<xs:annotation>
												<xs:documentation>% return ducts located in conditioned space</xs:documentation>
												</xs:annotation>
												</xs:element>
												</xs:all>
												</xs:complexType>
												</xs:element>
												</xs:sequence>
												<xs:attribute name="NumDuctSystems" type="xs:int"
												default="1"/>
												<xs:assert
												test="(@NumDuctSystems = count(System))"/>
												</xs:complexType>
												</xs:element>
												<xs:element name="AddedEnergyFeatures"
												minOccurs="1" maxOccurs="1">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="OPP">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="CheckOPP" type="xs:boolean"
												default="false" minOccurs="0">
												<xs:annotation>
												<xs:documentation> On-site Power Production (OPP)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="Type" minOccurs="0">
												<xs:simpleType>
												<xs:restriction base="xs:string">
												<xs:enumeration value="PV"/>
												<xs:enumeration value="CHP"/>
												<xs:enumeration value="wind"/>
												<xs:enumeration value="other"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="NetPowerProduction"
												type="xs:float" minOccurs="0">
												<xs:annotation>
												<xs:documentation>Net power production</xs:documentation>
												</xs:annotation>
												</xs:element>
												</xs:sequence>
												<xs:assert
												test="(not(CheckOPP) or (CheckOPP = false() and not(Type) and not(NetPowerProduction)) or (CheckOPP = true() and Type and NetPowerProduction))"
												/>
												</xs:complexType>
												</xs:element>
												<xs:element name="SolarHotWaterSystems"
												minOccurs="0" maxOccurs="1">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="SHWS" type="xs:boolean"
												default="false">
												<xs:annotation>
												<xs:documentation> Solar Hot Water Systems</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="Type" minOccurs="0">
												<xs:simpleType>
												<xs:restriction base="xs:string">
												<xs:enumeration value="direct"/>
												<xs:enumeration value="indirect"/>
												<xs:enumeration value="ICS"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="ProjectedSavings"
												type="xs:float" minOccurs="0">
												<xs:annotation>
												<xs:documentation>Enter Projected annual MBtu savings for Solar Hot Water System</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="SolarFraction" type="xs:float"
												minOccurs="0">
												<xs:annotation>
												<xs:documentation>Enter the Solar Fraction as a float value for solar hot water system)</xs:documentation>
												</xs:annotation>
												</xs:element>
												</xs:sequence>
												<xs:assert
												test="((SHWS[text()] = false() and not(Type) and not(ProjectedSavings) and not(SolarFraction)) or (SHWS[text()] = true() and exists(Type) and exists(ProjectedSavings) and exists(SolarFraction)))"
												/>
												</xs:complexType>
												</xs:element>
												<xs:element name="DWHR" minOccurs="1"
												maxOccurs="1">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="CheckDWHR" type="xs:boolean"
												default="false" minOccurs="0">
												<xs:annotation>
												<xs:documentation>Drain Water Heat Recovery Systems (DWHR)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="DWHREfficiency" type="xs:float"
												default="46" minOccurs="0">
												<xs:annotation>
												<xs:documentation>DWHR efficiency (% - default = 46%)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="FacilitiesServed" default="one"
												minOccurs="0">
												<xs:simpleType>
												<xs:restriction base="xs:string">
												<xs:enumeration value="one"/>
												<xs:enumeration value="all"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="EqualFlow" type="xs:boolean"
												default="false" minOccurs="0"/>
												<xs:element name="ProjectedSavings"
												type="xs:float" minOccurs="0">
												<xs:annotation>
												<xs:documentation>Projected Savings (MBtu/y = Rated EC_x - Reference EC_r)</xs:documentation>
												</xs:annotation>
												</xs:element>
												</xs:sequence>
												<xs:assert
												test="((CheckDWHR[text()] = false() and not(DWHREfficiency) and not(FacilitiesServed) and not(EqualFlow) and not(ProjectedSavings)) or (CheckDWHR[text()] = true() and exists(DWHREfficiency) and exists(FacilitiesServed) and exists(EqualFlow) and exists(ProjectedSavings)))"
												/>
												</xs:complexType>
												</xs:element>
												<xs:element name="ACHotWaterHeatRecovery"
												minOccurs="1" maxOccurs="1">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="ACHWHRecovery" type="xs:boolean"
												default="false">
												<xs:annotation>
												<xs:documentation>Air Conditioner Heat Recovery Unit (HRU) also known as a desuperheater</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="ProjectedSavings"
												type="xs:float" minOccurs="0">
												<xs:annotation>
												<xs:documentation>Projected Savings (MBtu/y = Rated EC_x - Reference EC_r)</xs:documentation>
												</xs:annotation>
												</xs:element>
												</xs:sequence>
												<xs:assert
												test="((ACHWHRecovery[text()] = false() and not(ProjectedSavings)) or (ACHWHRecovery[text()] = true() and exists(ProjectedSavings)))"
												/>
												</xs:complexType>
												</xs:element>
												</xs:sequence>
												</xs:complexType>
												</xs:element>
												<xs:element name="WholeHEEffDesignations"
												minOccurs="0" maxOccurs="2">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="EPAEStarNewHome"
												type="xs:boolean" default="false"/>
												<xs:element name="DOEZHRH" type="xs:boolean"
												default="false"/>
												</xs:sequence>
												</xs:complexType>
												</xs:element>
												<xs:element name="HVACCommissioning">
												<xs:complexType>
												<xs:sequence maxOccurs="1">
												<xs:element name="System" minOccurs="1"
												maxOccurs="100">
												<xs:complexType>
												<xs:all>
												<xs:element name="SystemID" type="xs:string">
												<xs:annotation>
												<xs:documentation>Provide unique identification for this HVAC system (e.g. Cooling-01)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="TotalMaxCoolingLoad"
												type="xs:float" minOccurs="0">
												<xs:annotation>
												<xs:documentation>Total Maximum Cooling Load(kBtu/h)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="HeatingLoad" type="xs:float"
												minOccurs="0">
												<xs:annotation>
												<xs:documentation>Heating Load (kBtu/h)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="TotalDuctLeakageException"
												type="xs:boolean" default="false">
												<xs:annotation>
												<xs:documentation>Was Total Duct Leakage exception used?</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="AlternativeTestingCompleted"
												type="xs:boolean" default="false">
												<xs:annotation>
												<xs:documentation>Was alternative testing completed per ANSI/ACCA 5 QI ?</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="TotalDuctLeakage"
												type="xs:float">
												<xs:annotation>
												<xs:documentation>Total normalized duct leakage served by system (cfm25/CFA)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element
												name="TotalDuctLeakageGradeDesignation">
												<xs:annotation>
												<xs:documentation>Total Duct Leakage Grade Designation</xs:documentation>
												</xs:annotation>
												<xs:simpleType>
												<xs:annotation>
												<xs:documentation/>
												</xs:annotation>
												<xs:restriction base="xs:string">
												<xs:enumeration value="I"/>
												<xs:enumeration value="II"/>
												<xs:enumeration value="III"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="BlowerFanAirflowException"
												type="xs:boolean" default="false">
												<xs:annotation>
												<xs:documentation>Was Blower Fan Airflow exception used?</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="AirflowTestMethod" minOccurs="0">
												<xs:annotation>
												<xs:documentation>Airflow test method</xs:documentation>
												</xs:annotation>
												<xs:simpleType>
												<xs:annotation>
												<xs:documentation/>
												</xs:annotation>
												<xs:restriction base="xs:string">
												<xs:enumeration value="Pressure Matching"/>
												<xs:enumeration value="Flow Grid"/>
												<xs:enumeration value="Flow Hood"/>
												<xs:enumeration value="Static Pressure Table"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="BlowerfanAirflowDesignSpecified"
												type="xs:int">
												<xs:annotation>
												<xs:documentation>Design-specified blower fan airflow (CFM)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="BlowerfanAirflowOpCond"
												type="xs:int">
												<xs:annotation>
												<xs:documentation>Blower fan airflow at operating conditions (CFM)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="PressureDiffOEM" type="xs:float"
												minOccurs="0">
												<xs:annotation>
												<xs:documentation>Pressure difference for OEM Static Pressure Table (IWC)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="AirflowFault" type="xs:float">
												<xs:annotation>
												<xs:documentation>Airflow Fault (%)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="BlowerfanVolumetricAirflowGrade">
												<xs:annotation>
												<xs:documentation>Blower fan volumetric airflow grade</xs:documentation>
												</xs:annotation>
												<xs:simpleType>
												<xs:annotation>
												<xs:documentation/>
												</xs:annotation>
												<xs:restriction base="xs:string">
												<xs:enumeration value="I"/>
												<xs:enumeration value="II"/>
												<xs:enumeration value="III"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="TestmethodBlowerFanWattDraw"
												minOccurs="0">
												<xs:annotation>
												<xs:documentation>Test method for measuring blower fan watt draw</xs:documentation>
												</xs:annotation>
												<xs:simpleType>
												<xs:annotation>
												<xs:documentation/>
												</xs:annotation>
												<xs:restriction base="xs:string">
												<xs:enumeration
												value="Portable Plug-In Watt Meter"/>
												<xs:enumeration value="Clamp-On Watt Meter"/>
												<xs:enumeration
												value="Analog Utility Revenue Meter"/>
												<xs:enumeration
												value="Digital Utility Revenue Meter"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="BlowerfanWattDraw" type="xs:int">
												<xs:annotation>
												<xs:documentation>Watt draw of blower fan (W)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="BlowerfanEfficiency"
												type="xs:float">
												<xs:annotation>
												<xs:documentation>Blower fan efficiency (W/CFM)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="BlowerfanWattDrawGrade">
												<xs:annotation>
												<xs:documentation>Blower fan watt draw grade</xs:documentation>
												</xs:annotation>
												<xs:simpleType>
												<xs:annotation>
												<xs:documentation/>
												</xs:annotation>
												<xs:restriction base="xs:string">
												<xs:enumeration value="I"/>
												<xs:enumeration value="II"/>
												<xs:enumeration value="III"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="AltSourceValuesWithinLimits"
												type="xs:boolean" default="false">
												<xs:annotation>
												<xs:documentation>Did alternative source provide superheat / subcooling values that meet the limits specified within ANSI/ACCA 5 QI Section 4.3.1?</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="TestmethodRefrigerantCharge">
												<xs:annotation>
												<xs:documentation>Test method for assessing refrigerant charge</xs:documentation>
												</xs:annotation>
												<xs:simpleType>
												<xs:annotation>
												<xs:documentation/>
												</xs:annotation>
												<xs:restriction base="xs:string">
												<xs:enumeration value="Non-Invasive"/>
												<xs:enumeration value="Weigh-In"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="MeteringDeviceType">
												<xs:annotation>
												<xs:documentation>Metering device type</xs:documentation>
												</xs:annotation>
												<xs:simpleType>
												<xs:annotation>
												<xs:documentation/>
												</xs:annotation>
												<xs:restriction base="xs:string">
												<xs:enumeration value="Piston/Cap Tube"/>
												<xs:enumeration value="TXV/EEV"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="MeasuredOutdoorAirDryBulbTemp"
												type="xs:float" minOccurs="0">
												<xs:annotation>
												<xs:documentation>Measured outdoor air dry-bulb temperature (F)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="DifferenceDTD" type="xs:float"
												minOccurs="0">
												<xs:annotation>
												<xs:documentation>DifferenceDTD (F)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="DifferenceCTOA" type="xs:float"
												minOccurs="0">
												<xs:annotation>
												<xs:documentation>DifferenceCTOA (F)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="TotalReportedRefrigerantWeight"
												type="xs:float" minOccurs="0">
												<xs:annotation>
												<xs:documentation>Total reported refrigerant weight (oz)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="Deviation" type="xs:float"
												minOccurs="0">
												<xs:annotation>
												<xs:documentation>Absolute value of deviation btw total anticipated and reported refrigerant weight (%)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element
												name="RefrigerantChargeGradeDesignation">
												<xs:annotation>
												<xs:documentation>Refrigerant charge grade designation</xs:documentation>
												</xs:annotation>
												<xs:simpleType>
												<xs:annotation>
												<xs:documentation/>
												</xs:annotation>
												<xs:restriction base="xs:string">
												<xs:enumeration value="I"/>
												<xs:enumeration value="II"/>
												<xs:enumeration value="III"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												</xs:all>
												<xs:assert
												test="not(AirflowTestMethod = 'Static Pressure Table') or PressureDiffOEM"
												xerces:message="AirflowTestMethod is 'Static Pressure Table' so please enter PresessureDiffOEM."
												> </xs:assert>
												<xs:assert
												test="not(TestmethodRefrigerantCharge = 'Non-Invasive' and MeteringDeviceType = 'Piston/Cap Tube') or DifferenceDTD"
												xerces:message="TestmethodRefrigerantCharge is 'Non-Invasive' and MeteringDeviceType 'Piston/Cap Tube' so please enter DifferenceDTD."/>
												<xs:assert
												test="not(TestmethodRefrigerantCharge = 'Non-Invasive' and MeteringDeviceType = 'TXV/EEV') or DifferenceCTOA"
												xerces:message="TestmethodRefrigerantCharge is 'Non-Invasive' and MeteringDeviceType 'TXV/EEV' so please enter DifferenceCTOA."/>
												<xs:assert
												test="not(TestmethodRefrigerantCharge = 'Weigh-In') or Deviation"
												xerces:message="TestmethodRefrigerantCharge 'Weigh-In' so please enter Deviation."
												/>
												</xs:complexType>
												</xs:element>
												</xs:sequence>
												<xs:attribute name="NumHVACCommissioningSystems"
												type="xs:int" default="0"/>
												<xs:assert
												test="(@NumHVACCommissioningSystems = count(System))"
												xerces:message="The number of System should match with value of NumHVACCommissioningSystems. "
												/>
												</xs:complexType>
												<xs:key name="SystemIDkey">
												<xs:selector xpath="System"/>
												<xs:field xpath="SystemID"/>
												</xs:key>
												</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="WarningFlags" minOccurs="1" maxOccurs="1">
											<xs:complexType>
												<xs:sequence>
												<xs:element name="BuildingAttributeFlags">
												<xs:annotation>
												<xs:documentation>[See Section 5.1, RESNET Publication 002-15 for full explanation of elements in this element}</xs:documentation>
												</xs:annotation>
												<xs:complexType>
												<xs:sequence>
												<xs:element name="StoriesAboveGradeValue"
												type="xs:int" minOccurs="1" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>[Integer equal to the number of stories above grade; GE 1 and LE 4]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="AverageCeilingHeightValue"
												type="xs:float" minOccurs="1" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>[Floating point value equal to the volume/CFA expressed in feet; GE 7 and LE 15]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="BelowGradeSlabFloorsValue"
												type="xs:int" minOccurs="1" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>[Integer equal to the number of below grade slab floors; GE 1 if below grade walls]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="BelowGradeWallsValue"
												type="xs:int" minOccurs="1" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>[Integer equal to the number of below grade walls: GE 1 if below grade slab floors]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="CrawlSpacePerimeterValue"
												type="xs:float" minOccurs="1" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>[Floating point value equal to crawl space perimeter expressed in feet; GE 1 and LE (Enclosure Floor Area)^0.5*7]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="BasementPerimeterValue"
												type="xs:float" minOccurs="1" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>[Floating point value equal to basement perimeter expressed in feet; GE 1 and LE (Enclosure Floor Area)^0.5*7]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="SlabGradePerimeterValue"
												type="xs:float" minOccurs="1" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>[Floating point value equal to the slab perimeter expressed in feet; GE 1 and LE (Enclosure Floor Area)^0.5*7]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="FoundationWallHeightValue"
												type="xs:float" minOccurs="1" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>[Floating point value equal to the foundation wall height from ground level to top of foundation expressed in feet; GT 0 and LE 20]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="BasementWallDepthValue"
												type="xs:float" minOccurs="1" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>[Floating point value equal to the basement wall depth below grade expressed in feet; GE 2 and LE (wall height - 0.5)]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="EnclosureFloorAreaValue"
												type="xs:float" minOccurs="1" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>[Floating point value equal to the enclosure floor area expressed in feet]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="EnclosureGrossWallAreaValue"
												type="xs:float" minOccurs="1" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>[Floating point value equal to gross wall area of the enclosure expressed in square feet</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="NumberConditionedStories"
												type="xs:integer" minOccurs="1" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>[Integer value equal to number of conditioned stories, including conditioned basements</xs:documentation>
												</xs:annotation>
												</xs:element>
												</xs:sequence>
												</xs:complexType>
												</xs:element>
												<xs:element name="ApplianceVerificationFlags"
												minOccurs="1" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>[See Section 5.3, RESNET Publication 002-15 for details on this element. Include the value for each of the available appliance types]</xs:documentation>
												</xs:annotation>
												<xs:complexType>
												<xs:sequence>
												<xs:element name="ClothesWashersValue"
												type="xs:float" minOccurs="1" maxOccurs="100">
												<xs:annotation>
												<xs:documentation>{Floating point value [(21*Nbr+73)> CWkWh >(4.7*Nbr+16.4)]}</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="ElectricDryersValue"
												type="xs:float" minOccurs="0" maxOccurs="100">
												<xs:annotation>
												<xs:documentation>{Floating point value [(163*Nbr+577)> eCDkWh >(55*Nbr+194)]}</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="GasDryersThermsValue"
												type="xs:float" minOccurs="0" maxOccurs="100">
												<xs:annotation>
												<xs:documentation>{Floating point value [(5.9*Nbr+20.6)> gCDtherms >(2.0*Nbr+6.9)]}</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="GasDryersKWHValue"
												type="xs:float" minOccurs="0" maxOccurs="100">
												<xs:annotation>
												<xs:documentation>{Floating point value [(12.9*Nbr+45.5)> gCDkWh >(4.3*Nbr+15.3)]}</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="CWHotWaterSavingsValue"
												type="xs:float" minOccurs="1" maxOccurs="100">
												<xs:annotation>
												<xs:documentation>{Floating point value [(0.59*Nbr+2.1)> CW HWgalSaved/day]}</xs:documentation>
												</xs:annotation>
												</xs:element>
												</xs:sequence>
												<xs:assert
												test="((exists(ElectricDryersValue)) or (exists(GasDryersThermsValue) and exists(GasDryersKWHValue)))"
												/>
												</xs:complexType>
												</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:all>

									<xs:assert test="
											if (EEP/ProgramType/EPA/EnergyStarVersion[contains(text(), 'MFUS')]) then
												(Registry/HomeTypeID = 3 or Registry/HomeTypeID = 4)
											else
												true()"
										xerces:message="If the EnergyStar MFUS program version is selected in the software, then the HomeType must be a High-rise Multi-family or Low-rise Multi-family home."
									/>
								</xs:complexType>
							</xs:element>
							<xs:element name="Projected" minOccurs="0">
								<xs:complexType>
									<xs:all>
										<xs:element name="RatingType" minOccurs="0"
											default="Projected">
											<xs:simpleType>
												<xs:restriction base="xs:string">
												<xs:enumeration value="Projected"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<xs:element name="IECCcomplianceERI" minOccurs="0"
											maxOccurs="1">
											<xs:complexType>
												<xs:sequence>
												<xs:element name="IECCversion">
												<xs:simpleType>
												<xs:annotation>
												<xs:documentation>Enter 4-digit year of IECC code</xs:documentation>
												</xs:annotation>
												<xs:restriction base="xs:string">
												<xs:pattern value="[0-9]{4}"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="ERIscore">
												<xs:simpleType>
												<xs:annotation>
												<xs:documentation>Enter ERI score</xs:documentation>
												</xs:annotation>
												<xs:restriction base="xs:integer">
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="Registry">
											<xs:complexType>
												<xs:all>
												<xs:element name="ProviderSampleSetID"
												default="00000000">
												<xs:simpleType>
												<xs:annotation>
												<xs:documentation>ProviderSampleSetID in the form XXXXXXXX</xs:documentation>
												</xs:annotation>
												<xs:restriction base="xs:string">
												<xs:pattern value="[A-Z0-9]{4,8}"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element ref="Status"/>
												<xs:element ref="HomeTypeID"/>
												<xs:element ref="ConditionedArea"/>
												<xs:element ref="ConditionedVolume"/>
												<xs:element ref="NumberBedrooms"/>
												<xs:element ref="ConditionedBasementArea"/>
												<xs:element ref="UnconditionedBasementArea"/>
												<xs:element ref="Software"/>
												<xs:element ref="SoftwareVersion"/>
												<xs:element name="EPAAppID" type="xs:string"
												minOccurs="0">
												<xs:annotation>
												<xs:documentation>Optional EPA Rater Pro App ID as assigned by the EPA App</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="Standard301Version"
												minOccurs="1">
												<xs:annotation>
												<xs:documentation>Publication Year of RESNET/ICC 301 Standard used to determine the HERS Rating</xs:documentation>
												</xs:annotation>
												<xs:simpleType>
												<xs:restriction base="xs:string">
												<xs:enumeration value="2014"/>
												<xs:enumeration value="2019"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="InputFile" type="xs:string">
												<xs:annotation>
												<xs:documentation>CDATA tag must be used to enclose the InputFile string</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="Notes" type="xs:string"/>
												</xs:all>
											</xs:complexType>
										</xs:element>
										<xs:element name="Rating">
											<xs:complexType>
												<xs:sequence>
												<xs:element name="HERSIndex" type="xs:integer"/>
												<xs:element name="CO2eIndex" type="xs:integer"/>
												<xs:element name="AnnualElectricity"
												type="xs:float" default="0"/>
												<xs:element name="AnnualGas" type="xs:float"
												default="0"/>
												<xs:element name="AnnualOil" type="xs:float"
												default="0"/>
												<xs:element name="AnnualPropane" type="xs:float"
												default="0"/>
												<xs:element name="AnnualOPP" type="xs:float"
												default="0"/>
												<xs:element name="AnnualOther" type="xs:float"
												default="0"/>
												<xs:element ref="PriceElectricity"/>
												<xs:element ref="PriceGas"/>
												<xs:element name="PriceOil" type="xs:float"
												nillable="true"/>
												<xs:element name="PricePropane" type="xs:float"
												nillable="true"/>
												<xs:element name="CostHeating" type="xs:float"
												default="0"/>
												<xs:element name="CostCooling" type="xs:float"
												default="0"/>
												<xs:element name="CostHotWater" type="xs:float"
												default="0"/>
												<xs:element name="CostLighting" type="xs:float"
												default="0"/>
												<xs:element name="CostAppliances" type="xs:float"
												default="0"/>
												<xs:element name="CostOPP" default="0">
												<xs:simpleType>
												<xs:restriction base="xs:float">
												<xs:maxInclusive value="0"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="CostTotal" type="xs:float"
												default="0"/>
												<xs:element name="RateECHeating" type="xs:float">
												<xs:annotation>
												<xs:documentation>Heating Energy Consumption (EC_x) in Rated Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="RateECCooling" type="xs:float">
												<xs:annotation>
												<xs:documentation>Cooling Energy Consumption (EC_x) in Rated Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="RateECHotWater" type="xs:float">
												<xs:annotation>
												<xs:documentation>Hot Water Energy Consumption (EC_x) in Rated Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="RateECLgtApl" type="xs:float">
												<xs:annotation>
												<xs:documentation>Lighting and Appliance Energy Consumption (EULLA) in the Rated Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="nMEULHeating" type="xs:float">
												<xs:annotation>
												<xs:documentation>Heating normalized Modified End Use Load (nMEUL) in Rated Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="nMEULCooling" type="xs:float">
												<xs:annotation>
												<xs:documentation>Cooling normalized Modified End Use Load (nMEUL) in Rated Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="nMEULHotWater" type="xs:float">
												<xs:annotation>
												<xs:documentation>Hot Water normalized Modified End Use Load (nMEUL) in Rated Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="nMEULLgtApl" type="xs:float">
												<xs:annotation>
												<xs:documentation>Lighting and Appliance load (EULLA) in Rated Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="nECHeating" type="xs:float">
												<xs:annotation>
												<xs:documentation>normalized Heating Energy Consumption (nEC_x) in Rated Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="nECCooling" type="xs:float">
												<xs:annotation>
												<xs:documentation>normalized Cooling Energy Consumption (nEC_x) in Rated Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="nECHotWater" type="xs:float">
												<xs:annotation>
												<xs:documentation>normalized Hot Water Energy Consumption (nEC_x) in Rated Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="nECLgtApl" type="xs:float">
												<xs:annotation>
												<xs:documentation>Lighting and Appliance Energy Consumption (EULLA) in Rated Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="CO2" type="xs:float"/>
												<xs:element name="SOx" type="xs:float"/>
												<xs:element name="NOx" type="xs:float"/>
												<xs:element name="RefCostHeating" type="xs:float"/>
												<xs:element name="RefCostCooling" type="xs:float"/>
												<xs:element name="RefCostHotWater" type="xs:float"/>
												<xs:element name="RefCostLighting" type="xs:float"/>
												<xs:element name="RefCostAppliances"
												type="xs:float"/>
												<xs:element name="RefCostTotal" type="xs:float"/>
												<xs:element name="RefEULHeating" type="xs:float">
												<xs:annotation>
												<xs:documentation>Heating Load (REUL) in Reference Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="RefEULCooling" type="xs:float">
												<xs:annotation>
												<xs:documentation>Cooling Load (REUL) in Reference Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="RefEULHotWater" type="xs:float">
												<xs:annotation>
												<xs:documentation>Hot Water Load (REUL) in Reference Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="RefEULLgtApl" type="xs:float">
												<xs:annotation>
												<xs:documentation>Lighting and Appliance Load (REULLA) in Reference Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="RefECHeating" type="xs:float">
												<xs:annotation>
												<xs:documentation>Heating Energy Consumption (EC_r) in Reference Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="RefECCooling" type="xs:float">
												<xs:annotation>
												<xs:documentation>Cooling Energy Consumption (EC_r) in Reference Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="RefECHotWater" type="xs:float">
												<xs:annotation>
												<xs:documentation>Hot Water Energy Consumption (EC_r) in Reference Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="RefECLgtApl" type="xs:float">
												<xs:annotation>
												<xs:documentation>Lighting and Appliance Energy Consumption (REULLA) in Reference Home (MBtu)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="RefCO2" type="xs:float"/>
												<xs:element name="RefSOx" type="xs:float"/>
												<xs:element name="RefNOx" type="xs:float"/>
												<xs:element name="OPPNet" type="xs:float"/>
												<xs:element name="PEfrac" type="xs:float"/>
												<xs:element name="IADsave" type="xs:float"
												minOccurs="0"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="TaxCredit" minOccurs="0">
											<xs:complexType>
												<xs:sequence>
												<xs:element name="QualUseHeating" type="xs:float"/>
												<xs:element name="QualUseCooling" type="xs:float"/>
												<xs:element name="QualUseTotal" type="xs:float"/>
												<xs:element name="QualLoadHeating" type="xs:float"/>
												<xs:element name="QualLoadCooling" type="xs:float"/>
												<xs:element name="QualLoadTotal" type="xs:float"/>
												<xs:element name="RefUseHeating" type="xs:float"/>
												<xs:element name="RefUseCooling" type="xs:float"/>
												<xs:element name="RefUseTotal" type="xs:float"/>
												<xs:element name="RefLoadHeating" type="xs:float"/>
												<xs:element name="RefLoadCooling" type="xs:float"/>
												<xs:element name="RefLoadTotal" type="xs:float"/>
												<xs:element name="UseSavings" type="xs:float"/>
												<xs:element name="LoadSavings" type="xs:float"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="EEM" minOccurs="0">
											<xs:complexType>
												<xs:sequence>
												<xs:element name="MonthlyEnergySavings"
												type="xs:float" default="0"/>
												<xs:element name="EnergyValue" type="xs:float"
												default="0"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="EEP" minOccurs="0">
											<xs:complexType>
												<xs:sequence>
												<xs:element name="EEPQualified" type="xs:boolean"
												default="false" minOccurs="1">
												<xs:annotation>
												<xs:documentation>Energy Efficiency Program Qualified?</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="ProgramType" minOccurs="0">
												<xs:complexType>
												<xs:all>
												<xs:element name="EPA" type="EPAEstarType"
												minOccurs="0" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>ENERGY STAR program qualification</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="DOE" type="DOEZERHType"
												minOccurs="0" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>Zero Energy Ready Home program qualification</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="IAP" type="IAPType"
												minOccurs="0" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>Indoor Air-Plus qualification</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="OPQ" type="OPQType"
												minOccurs="0" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>Other Program qualification</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="PHIUS" type="PHIUSType"
												minOccurs="0" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>PHIUS Program qualifiation</xs:documentation>
												</xs:annotation>
												</xs:element>
												</xs:all>
												</xs:complexType>
												</xs:element>
												</xs:sequence>
												<xs:assert
												test="(((EEPQualified = false()) and not(ProgramType)) or ((EEPQualified = true()) and exists(ProgramType) and (count(./ProgramType/*) gt 0)))"
												/>
											</xs:complexType>
										</xs:element>
										<xs:element name="HomeEnergyPerformance">
											<xs:complexType>
												<xs:sequence>
												<xs:element name="Enclosure" minOccurs="1"
												maxOccurs="1">
												<xs:complexType>
												<xs:sequence minOccurs="1">
												<xs:element name="AboveGradeFloorA"
												type="xs:float">
												<xs:annotation>
												<xs:documentation>[A = ∑ Ai  for i = 1, n]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="AboveGradeFloorUo"
												type="xs:float" minOccurs="0">
												<xs:annotation>
												<xs:documentation>[Uo = (∑ (Ui * Ai)) / A  for i = 1, n]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="GroundContactFloorA"
												type="xs:float">
												<xs:annotation>
												<xs:documentation>[A = ∑ Ai  for i = 1, n]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="GroundContactFloorUo"
												type="xs:float" minOccurs="0">
												<xs:annotation>
												<xs:documentation>[Uo = (∑ (Ui * Ai)) / A  for i = 1, n] [exterior film coeff = 0]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="CeilingA" type="xs:float">
												<xs:annotation>
												<xs:documentation>[A = ∑ Ai  for i = 1, n]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="CeilingUo" type="xs:float"
												minOccurs="0">
												<xs:annotation>
												<xs:documentation>[Uo = (∑ (Ui * Ai)) / A  for i = 1, n]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="AboveGradeWallA" type="xs:float">
												<xs:annotation>
												<xs:documentation>[A = ∑ Ai  for i = 1, n]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="AboveGradeWallUo"
												type="xs:float" minOccurs="0">
												<xs:annotation>
												<xs:documentation>[Uo = (∑ (Ui * Ai)) / A  for i = 1, n]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="GroundContactWallA"
												type="xs:float">
												<xs:annotation>
												<xs:documentation>[A = ∑ Ai  for i = 1, n]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="GroundContactWallUo"
												type="xs:float" minOccurs="0">
												<xs:annotation>
												<xs:documentation>[Uo = (∑ (Ui * Ai)) / A  for i = 1, n]  [exterior film coeff = 0]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="WindowA" type="xs:float">
												<xs:annotation>
												<xs:documentation>[A = ∑ Ai  for i = 1, n]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element ref="WindowUo"/>
												<xs:element ref="WindowSHGC"/>
												<xs:element name="DoorA" type="xs:float">
												<xs:annotation>
												<xs:documentation>[A = ∑ Ai  for i = 1, n]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="DoorUo" type="xs:float"
												minOccurs="0">
												<xs:annotation>
												<xs:documentation>[Uo = (∑ (Ui * Ai)) / A  for i = 1, n]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="OverallEnclosureUA"
												type="xs:float">
												<xs:annotation>
												<xs:documentation>[Enclosure UA = AG Floor (Uo*A) + Ceiling (Uo*A) + AG Wall (Uo*A) + Window (Uo*A) + Door (Uo*A)]</xs:documentation>
												</xs:annotation>
												</xs:element>
												</xs:sequence>
												<xs:assert
												test="((AboveGradeFloorA[text()] = 0 and not(AboveGradeFloorUo)) or (AboveGradeFloorA[text()] gt 0 and exists(AboveGradeFloorUo)))"/>
												<xs:assert
												test="((GroundContactFloorA[text()] = 0 and not(GroundContactFloorUo)) or (GroundContactFloorA[text()] gt 0 and exists(GroundContactFloorUo)))"/>
												<xs:assert
												test="((CeilingA[text()] = 0 and not(CeilingUo)) or (CeilingA[text()] gt 0 and exists(CeilingUo)))"/>
												<xs:assert
												test="((AboveGradeWallA[text()] = 0 and not(AboveGradeWallUo)) or (AboveGradeWallA[text()] gt 0 and exists(AboveGradeWallUo)))"/>
												<xs:assert
												test="((GroundContactWallA[text()] = 0 and not(GroundContactWallUo)) or (GroundContactWallA[text()] gt 0 and exists(GroundContactWallUo)))"/>
												<xs:assert
												test="((WindowA[text()] = 0 and not(WindowUo) and not(WindowSHGC)) or (WindowA[text()] gt 0 and exists(WindowUo) and exists(WindowSHGC)))"/>
												<xs:assert
												test="((DoorA[text()] = 0 and not(DoorUo)) or (DoorA[text()] gt 0 and exists(DoorUo)))"/>
												<xs:assert test="OverallEnclosureUA[text()] gt 0"
												/>
												</xs:complexType>
												</xs:element>
												<xs:element ref="HVACHeatingSystems"/>
												<xs:element ref="HVACCoolingSystems"/>
												<xs:element ref="HVACMechVentSystems"/>
												<xs:element name="HVACDehumidificationSystems"
												minOccurs="1" maxOccurs="1">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="System" minOccurs="0"
												maxOccurs="100">
												<xs:complexType>
												<xs:all>
												<xs:element name="Type">
												<xs:simpleType>
												<xs:restriction base="xs:string">
												<xs:enumeration value="none"/>
												<xs:enumeration value="standard"/>
												<xs:enumeration value="eStar"/>
												<xs:enumeration value="other"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="Capacity" type="xs:float">
												<xs:annotation>
												<xs:documentation>Capacity in liters per day</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="Efficiency" type="xs:float">
												<xs:annotation>
												<xs:documentation>Efficiency in liters per kWh</xs:documentation>
												</xs:annotation>
												</xs:element>
												</xs:all>
												</xs:complexType>
												</xs:element>
												</xs:sequence>
												<xs:attribute
												name="NumHVACDehumidificationSystems"
												type="xs:int" use="required"/>
												<xs:assert
												test="(@NumHVACDehumidificationSystems = count(System))"
												/>
												</xs:complexType>
												</xs:element>
												<xs:element name="LightingAppliances"
												minOccurs="1" maxOccurs="1">
												<xs:complexType>
												<xs:sequence minOccurs="0">
												<xs:element name="QualifyingLightingLtX"
												type="xs:float" minOccurs="0">
												<xs:annotation>
												<xs:documentation>percent lumens/watt less than 50</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="QualifyingLightingGeX"
												type="xs:float" minOccurs="0">
												<xs:annotation>
												<xs:documentation>percent fluorescent lighting</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="QualifyingLightingLED"
												type="xs:float" minOccurs="0">
												<xs:annotation>
												<xs:documentation>percent LED lighting</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="InteriorLightingFL"
												type="xs:float">
												<xs:annotation>
												<xs:documentation>float faction for qualifying interior fluorescent lighting (Tier I)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="InteriorLightingLED"
												type="xs:float">
												<xs:annotation>
												<xs:documentation>float fraction for qualifying interior LED lighting (Tier II)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="ExteriorLightingFL"
												type="xs:float">
												<xs:annotation>
												<xs:documentation>float fraction for qualifying exterior fluorescent lighting (Tier I)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="ExteriorLightingLED"
												type="xs:float">
												<xs:annotation>
												<xs:documentation>float fraction for qualifying exterior LED lighting (Tier II)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="GarageLightingFL"
												type="xs:float" minOccurs="0">
												<xs:annotation>
												<xs:documentation>float fraction for qualifying garage fluorescent lighting (Tier I)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="GarageLightingLED"
												type="xs:float" minOccurs="0">
												<xs:annotation>
												<xs:documentation>float fraction qualifying garage LED lighting (Tier II)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="Refrigerator" default="standard">
												<xs:simpleType>
												<xs:restriction base="xs:string">
												<xs:enumeration value="standard"/>
												<xs:enumeration value="eStar"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="DishWasher" default="standard">
												<xs:simpleType>
												<xs:restriction base="xs:string">
												<xs:enumeration value="standard"/>
												<xs:enumeration value="eStar"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="ClothesWasher"
												default="standard">
												<xs:simpleType>
												<xs:restriction base="xs:string">
												<xs:enumeration value="standard"/>
												<xs:enumeration value="eStar"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="ClothesDryer" default="standard">
												<xs:simpleType>
												<xs:restriction base="xs:string">
												<xs:enumeration value="standard"/>
												<xs:enumeration value="eStar"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="CeilingFans" default="none">
												<xs:simpleType>
												<xs:restriction base="xs:string">
												<xs:enumeration value="none"/>
												<xs:enumeration value="standard"/>
												<xs:enumeration value="eStar"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												</xs:sequence>
												</xs:complexType>
												</xs:element>
												<xs:element ref="HotWaterSystems"/>
												<xs:element name="ProposedEnclosureTightness"
												minOccurs="1" maxOccurs="1">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="cfm50" type="xs:float"
												maxOccurs="unbounded"/>
												</xs:sequence>
												</xs:complexType>
												</xs:element>
												<xs:element name="DuctSystems" minOccurs="1"
												maxOccurs="1">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="System" minOccurs="1"
												maxOccurs="100">
												<xs:complexType>
												<xs:all>
												<xs:element name="Type">
												<xs:annotation>
												<xs:documentation>All Ratings using Threshold Analysis, including all Sampled and Threshold Ratings, must use "Threshold Type"</xs:documentation>
												</xs:annotation>
												<xs:simpleType>
												<xs:restriction base="xs:string">
												<xs:enumeration value="ductless"/>
												<xs:enumeration value="ducted"/>
												<xs:enumeration value="Threshold ductless"/>
												<xs:enumeration value="Threshold ducted"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="TestedLeakageException"
												minOccurs="0">
												<xs:annotation>
												<xs:documentation>Unless DuctSystem is qualified for testing exception or for TotalLeakAlternative, then TestedLeakage entries are required.</xs:documentation>
												</xs:annotation>
												<xs:complexType>
												<xs:all>
												<xs:element name="QualificationCertification"
												type="xs:boolean" default="false" minOccurs="1">
												<xs:annotation>
												<xs:documentation>Certifies either of two things. First, that this dwelling unit meets the requirements for duct testing exemption in accordance with the RESNET Standard. Or, that it meets the requirements for the total duct leakage alternatives described in the RESNET Standard.</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="ExceptionType" minOccurs="0">
												<xs:simpleType>
												<xs:restriction base="xs:string">
												<xs:enumeration value="TestExemptDSE"/>
												<xs:enumeration value="TotalLeakAlternative"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="ProposedTotalLeakValue"
												minOccurs="0">
												<xs:annotation>
												<xs:documentation>Proposed Total Duct Leakage test result value (cfm25 - cubic feet per minute at 25 Pa pressurization) obtained from testing of the Rated Dwelling Unit that is qualified for Tested Leakage Exception.</xs:documentation>
												</xs:annotation>
												<xs:complexType>
												<xs:simpleContent>
												<xs:extension base="xs:float">
												<xs:attribute fixed="cfm25" name="unit"/>
												</xs:extension>
												</xs:simpleContent>
												</xs:complexType>
												</xs:element>
												<xs:element name="PercentDuctInsideAttached"
												type="xs:float" minOccurs="0">
												<xs:annotation>
												<xs:documentation>Percentage of duct area inside the Conditioned Space Volume for Attached Dwelling Unit qualified for Tested Leakage Exception.</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="AirHandlerInsideAttached"
												type="xs:boolean" default="false" minOccurs="0">
												<xs:annotation>
												<xs:documentation>Determination if air handler unit is within the Conditioned Space Volume for Attached Dwelling units qualified for Tested Leakage Exception.</xs:documentation>
												</xs:annotation>
												</xs:element>
												</xs:all>
												</xs:complexType>
												</xs:element>
												<xs:element name="ProposedLeakage" minOccurs="0">
												<xs:annotation>
												<xs:documentation>Enter the proposed duct leakage for the duct system</xs:documentation>
												</xs:annotation>
												<xs:complexType>
												<xs:all>
												<xs:element name="Proposedcfm25out"
												type="xs:float" minOccurs="0"/>
												<xs:element name="Proposedcfm25total"
												type="xs:float" minOccurs="0"/>
												</xs:all>
												</xs:complexType>
												</xs:element>
												<xs:element name="SupplyDuctsCondSpace"
												type="xs:float">
												<xs:annotation>
												<xs:documentation>% supply ducts located in conditioned space</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="ReturnDuctsCondSpace"
												type="xs:float">
												<xs:annotation>
												<xs:documentation>% return ducts located in conditioned space</xs:documentation>
												</xs:annotation>
												</xs:element>
												</xs:all>
												</xs:complexType>
												</xs:element>
												</xs:sequence>
												<xs:attribute name="NumDuctSystems" type="xs:int"
												default="1"/>
												<xs:assert
												test="(@NumDuctSystems = count(System))"/>
												</xs:complexType>
												</xs:element>
												<xs:element name="AddedEnergyFeatures"
												minOccurs="1" maxOccurs="1">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="OPP">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="CheckOPP" type="xs:boolean"
												default="false" minOccurs="0">
												<xs:annotation>
												<xs:documentation> On-site Power Production (OPP)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="Type" minOccurs="0">
												<xs:simpleType>
												<xs:restriction base="xs:string">
												<xs:enumeration value="PV"/>
												<xs:enumeration value="CHP"/>
												<xs:enumeration value="wind"/>
												<xs:enumeration value="other"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="NetPowerProduction"
												type="xs:float" minOccurs="0">
												<xs:annotation>
												<xs:documentation>Net power production</xs:documentation>
												</xs:annotation>
												</xs:element>
												</xs:sequence>
												<xs:assert
												test="(not(CheckOPP) or (CheckOPP = false() and not(Type) and not(NetPowerProduction)) or (CheckOPP = true() and Type and NetPowerProduction))"
												/>
												</xs:complexType>
												</xs:element>
												<xs:element name="SolarHotWaterSystems"
												minOccurs="0" maxOccurs="1">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="SHWS" type="xs:boolean"
												default="false">
												<xs:annotation>
												<xs:documentation> Solar Hot Water Systems</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="Type" minOccurs="0">
												<xs:simpleType>
												<xs:restriction base="xs:string">
												<xs:enumeration value="direct"/>
												<xs:enumeration value="indirect"/>
												<xs:enumeration value="ICS"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="ProjectedSavings"
												type="xs:float" minOccurs="0">
												<xs:annotation>
												<xs:documentation>Enter Projected annual MBtu savings for Solar Hot Water System</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="SolarFraction" type="xs:float"
												minOccurs="0">
												<xs:annotation>
												<xs:documentation>Enter the Solar Fraction as a float value for solar hot water system)</xs:documentation>
												</xs:annotation>
												</xs:element>
												</xs:sequence>
												<xs:assert
												test="((SHWS[text()] = false() and not(Type) and not(ProjectedSavings) and not(SolarFraction)) or (SHWS[text()] = true() and exists(Type) and exists(ProjectedSavings) and exists(SolarFraction)))"
												/>
												</xs:complexType>
												</xs:element>
												<xs:element name="DWHR" minOccurs="1"
												maxOccurs="1">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="CheckDWHR" type="xs:boolean"
												default="false" minOccurs="0">
												<xs:annotation>
												<xs:documentation>Drain Water Heat Recovery Systems (DWHR)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="DWHREfficiency" type="xs:float"
												default="46" minOccurs="0">
												<xs:annotation>
												<xs:documentation>DWHR efficiency (% - default = 46%)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="FacilitiesServed" default="one"
												minOccurs="0">
												<xs:simpleType>
												<xs:restriction base="xs:string">
												<xs:enumeration value="one"/>
												<xs:enumeration value="all"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="EqualFlow" type="xs:boolean"
												default="false" minOccurs="0"/>
												<xs:element name="ProjectedSavings"
												type="xs:float" minOccurs="0">
												<xs:annotation>
												<xs:documentation>Projected Savings (MBtu/y = Rated EC_x - Reference EC_r)</xs:documentation>
												</xs:annotation>
												</xs:element>
												</xs:sequence>
												<xs:assert
												test="((CheckDWHR[text()] = false() and not(DWHREfficiency) and not(FacilitiesServed) and not(EqualFlow) and not(ProjectedSavings)) or (CheckDWHR[text()] = true() and exists(DWHREfficiency) and exists(FacilitiesServed) and exists(EqualFlow) and exists(ProjectedSavings)))"
												/>
												</xs:complexType>
												</xs:element>
												<xs:element name="ACHotWaterHeatRecovery"
												minOccurs="1" maxOccurs="1">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="ACHWHRecovery" type="xs:boolean"
												default="false">
												<xs:annotation>
												<xs:documentation>Air Conditioner Heat Recovery Unit (HRU) also known as a desuperheater</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="ProjectedSavings"
												type="xs:float" minOccurs="0">
												<xs:annotation>
												<xs:documentation>Projected Savings (MBtu/y = Rated EC_x - Reference EC_r)</xs:documentation>
												</xs:annotation>
												</xs:element>
												</xs:sequence>
												<xs:assert
												test="((ACHWHRecovery[text()] = false() and not(ProjectedSavings)) or (ACHWHRecovery[text()] = true() and exists(ProjectedSavings)))"
												/>
												</xs:complexType>
												</xs:element>
												</xs:sequence>
												</xs:complexType>
												</xs:element>
												<xs:element name="WholeHEEffDesignations"
												minOccurs="0" maxOccurs="2">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="EPAEStarNewHome"
												type="xs:boolean" default="false"/>
												<xs:element name="DOEZHRH" type="xs:boolean"
												default="false"/>
												</xs:sequence>
												</xs:complexType>
												</xs:element>
												<xs:element name="ProposedHVACCommissioning">
												<xs:complexType>
												<xs:sequence maxOccurs="1">
												<xs:element name="System" minOccurs="1"
												maxOccurs="100">
												<xs:complexType>
												<xs:all>
												<xs:element name="SystemID" type="xs:string">
												<xs:annotation>
												<xs:documentation>Provide unique identification for this HVAC system (e.g. Cooling-01)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="SystemIsGraded"
												type="xs:boolean" default="false">
												<xs:annotation>
												<xs:documentation>(true/false)</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="ProposedBlowerFanGrade"
												minOccurs="0">
												<xs:annotation>
												<xs:documentation>Blower fan volumetric airflow grade</xs:documentation>
												</xs:annotation>
												<xs:simpleType>
												<xs:annotation>
												<xs:documentation/>
												</xs:annotation>
												<xs:restriction base="xs:string">
												<xs:enumeration value="I"/>
												<xs:enumeration value="II"/>
												<xs:enumeration value="III"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="ProposedBlowerFanWattDraw"
												minOccurs="0">
												<xs:annotation>
												<xs:documentation/>
												</xs:annotation>
												<xs:simpleType>
												<xs:annotation>
												<xs:documentation/>
												</xs:annotation>
												<xs:restriction base="xs:string">
												<xs:enumeration value="I"/>
												<xs:enumeration value="II"/>
												<xs:enumeration value="III"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												<xs:element name="ProposedRefrigerantCharge"
												minOccurs="0">
												<xs:annotation>
												<xs:documentation/>
												</xs:annotation>
												<xs:simpleType>
												<xs:annotation>
												<xs:documentation/>
												</xs:annotation>
												<xs:restriction base="xs:string">
												<xs:enumeration value="I"/>
												<xs:enumeration value="III"/>
												</xs:restriction>
												</xs:simpleType>
												</xs:element>
												</xs:all>
												<xs:assert test="
																				if (SystemIsGraded = true()) then
																					exists(ProposedBlowerFanGrade) and exists(ProposedBlowerFanWattDraw) and exists(ProposedRefrigerantCharge)
																				else
																					true()"
												xerces:message="If 'SystemIsGraded' is true then 'ProposedBlowerFanGrade and ProposedBlowerFanWattDraw' and 'ProposedRefrigerantCharge' should exists."
												/>
												</xs:complexType>
												</xs:element>
												</xs:sequence>
												<xs:attribute name="NumHVACCommissioningSystems"
												type="xs:int" default="0"/>
												<xs:assert
												test="(@NumHVACCommissioningSystems = count(System))"
												xerces:message="The number of System should match with value of NumHVACCommissioningSystems. "
												/>
												</xs:complexType>
												<xs:key name="ProjSystemIDkey">
												<xs:selector xpath="System"/>
												<xs:field xpath="SystemID"/>
												</xs:key>
												</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="WarningFlags" minOccurs="1" maxOccurs="1">
											<xs:complexType>
												<xs:sequence>
												<xs:element name="BuildingAttributeFlags">
												<xs:annotation>
												<xs:documentation>[See Section 5.1, RESNET Publication 002-15 for full explanation of elements in this element}</xs:documentation>
												</xs:annotation>
												<xs:complexType>
												<xs:sequence>
												<xs:element name="StoriesAboveGradeValue"
												type="xs:int" minOccurs="1" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>[Integer equal to the number of stories above grade; GE 1 and LE 4]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="AverageCeilingHeightValue"
												type="xs:float" minOccurs="1" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>[Floating point value equal to the volume/CFA expressed in feet; GE 7 and LE 15]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="BelowGradeSlabFloorsValue"
												type="xs:int" minOccurs="1" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>[Integer equal to the number of below grade slab floors; GE 1 if below grade walls]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="BelowGradeWallsValue"
												type="xs:int" minOccurs="1" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>[Integer equal to the number of below grade walls: GE 1 if below grade slab floors]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="CrawlSpacePerimeterValue"
												type="xs:float" minOccurs="1" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>[Floating point value equal to crawl space perimeter expressed in feet; GE 1 and LE (Enclosure Floor Area)^0.5*7]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="BasementPerimeterValue"
												type="xs:float" minOccurs="1" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>[Floating point value equal to basement perimeter expressed in feet; GE 1 and LE (Enclosure Floor Area)^0.5*7]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="SlabGradePerimeterValue"
												type="xs:float" minOccurs="1" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>[Floating point value equal to the slab perimeter expressed in feet; GE 1 and LE (Enclosure Floor Area)^0.5*7]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="FoundationWallHeightValue"
												type="xs:float" minOccurs="1" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>[Floating point value equal to the foundation wall height from ground level to top of foundation expressed in feet; GT 0 and LE 20]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="BasementWallDepthValue"
												type="xs:float" minOccurs="1" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>[Floating point value equal to the basement wall depth below grade expressed in feet; GE 2 and LE (wall height - 0.5)]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="EnclosureFloorAreaValue"
												type="xs:float" minOccurs="1" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>[Floating point value equal to the enclosure floor area expressed in feet]</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="EnclosureGrossWallAreaValue"
												type="xs:float" minOccurs="1" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>[Floating point value equal to gross wall area of the enclosure expressed in square feet</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="NumberConditionedStories"
												type="xs:integer" minOccurs="1" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>[Integer value equal to number of conditioned stories, including conditioned basements</xs:documentation>
												</xs:annotation>
												</xs:element>
												</xs:sequence>
												</xs:complexType>
												</xs:element>
												<xs:element name="ApplianceVerificationFlags"
												minOccurs="1" maxOccurs="1">
												<xs:annotation>
												<xs:documentation>[See Section 5.3, RESNET Publication 002-15 for details on this element. Include the value for each of the available appliance types]</xs:documentation>
												</xs:annotation>
												<xs:complexType>
												<xs:sequence>
												<xs:element name="ClothesWashersValue"
												type="xs:float" minOccurs="1" maxOccurs="100">
												<xs:annotation>
												<xs:documentation>{Floating point value [(21*Nbr+73)> CWkWh >(4.7*Nbr+16.4)]}</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="ElectricDryersValue"
												type="xs:float" minOccurs="0" maxOccurs="100">
												<xs:annotation>
												<xs:documentation>{Floating point value [(163*Nbr+577)> eCDkWh >(55*Nbr+194)]}</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="GasDryersThermsValue"
												type="xs:float" minOccurs="0" maxOccurs="100">
												<xs:annotation>
												<xs:documentation>{Floating point value [(5.9*Nbr+20.6)> gCDtherms >(2.0*Nbr+6.9)]}</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="GasDryersKWHValue"
												type="xs:float" minOccurs="0" maxOccurs="100">
												<xs:annotation>
												<xs:documentation>{Floating point value [(12.9*Nbr+45.5)> gCDkWh >(4.3*Nbr+15.3)]}</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="CWHotWaterSavingsValue"
												type="xs:float" minOccurs="1" maxOccurs="100">
												<xs:annotation>
												<xs:documentation>{Floating point value [(0.59*Nbr+2.1)> CW HWgalSaved/day]}</xs:documentation>
												</xs:annotation>
												</xs:element>
												</xs:sequence>
												<xs:assert
												test="((exists(ElectricDryersValue)) or (exists(GasDryersThermsValue) and exists(GasDryersKWHValue)))"
												/>
												</xs:complexType>
												</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:all>

									<xs:assert test="
											if (EEP/ProgramType/EPA/EnergyStarVersion[contains(text(), 'MFUS')]) then
												(Registry/HomeTypeID = 3 or Registry/HomeTypeID = 4)
											else
												true()"
										xerces:message="If the EnergyStar MFUS program version is selected in the software, then the HomeType must be a High-rise Multi-family or Low-rise Multi-family home."
									/>
								</xs:complexType>
							</xs:element>
						</xs:all>
					</xs:complexType>
				</xs:element>
				<xs:element name="IECC" minOccurs="0">
					<xs:annotation>
						<xs:documentation>IECC Reports. Either IECC2009 or IECC2018 can be submitted.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:choice>
							<xs:element name="IECC2009" minOccurs="0">
								<xs:annotation>
									<xs:documentation>2009 IECC Simulated Performance Alternative Compliance Certificate</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:all>
										<xs:element ref="ComplianceMetrics"/>
										<xs:element name="Permit" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Compliance Report for Permit Application
												</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:all>
												<xs:element ref="WorstCase"/>
												<xs:element name="AnnualEnergyCost" minOccurs="0">
												<xs:complexType>
												<xs:group ref="AnnualEnergyCostComplianceGroup"/>
												</xs:complexType>
												</xs:element>
												<xs:element name="AnnualSourceEnergyUse"
												minOccurs="0">
												<xs:complexType>
												<xs:group
												ref="AnnualSourceEnergyUseComplianceGroup"/>
												</xs:complexType>
												</xs:element>
												<xs:group ref="KeyBuildingDesignGroup"/>
												<xs:group ref="ProjectInfoGroup"/>
												<xs:element ref="AboveGradeWalls"/>
												<xs:element ref="BasementCrawlSpaceWalls"/>
												<xs:element ref="AboveGradeFloors"/>
												<xs:element ref="Ceilings"/>
												<xs:element ref="Roofs"/>
												<xs:element ref="Attics"/>
												<xs:element ref="Foundations"/>
												<xs:element ref="OpaqueDoors"/>
												<xs:element ref="Glazing"/>
												<xs:element ref="Skylights"/>
												<xs:element name="AirExchangeRate">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="Proposed">
												<xs:annotation>
												<xs:documentation>Air Exchange Rate</xs:documentation>
												</xs:annotation>
												<xs:complexType>
												<xs:all>
												<xs:element ref="EnvelopeLeakageRate"/>
												<xs:element ref="CombinedVentRate"/>
												</xs:all>
												</xs:complexType>
												</xs:element>
												</xs:sequence>
												</xs:complexType>
												</xs:element>
												<xs:element ref="MechVentEnergy"/>
												<xs:element ref="HeatingSystems"/>
												<xs:element ref="CoolingSystems"/>
												<xs:element ref="ServiceWaterHeating"/>
												<xs:element name="ThermDistribSystems">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="Proposed">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="System" minOccurs="1"
												maxOccurs="100">
												<xs:complexType>
												<xs:all>
												<xs:element ref="SupplyDuctInsulation"/>
												<xs:element ref="PerSupplyDuctCondSpace"/>
												<xs:element ref="ReturnDuctInsulation"/>
												<xs:element ref="PerReturnDuctCondSpace"/>
												<xs:element name="ProposedDuctLeakageRate">
												<xs:annotation>
												<xs:documentation>
																						Proposed duct leakage rate: x  
																					</xs:documentation>
												</xs:annotation>
												<xs:complexType>
												<xs:simpleContent>
												<xs:extension base="DuctLeakageRateType">
												<xs:attribute name="unit"
												type="DuctLeakageRateUnits2009"> </xs:attribute>
												</xs:extension>
												</xs:simpleContent>
												</xs:complexType>
												</xs:element>
												<xs:element ref="AirHandlerLocation"/>
												</xs:all>
												</xs:complexType>
												</xs:element>
												</xs:sequence>
												<xs:attribute name="NumThermDistribSystems"
												type="xs:int" default="1"/>
												<xs:assert
												test="(@NumThermDistribSystems = count(System))"/>
												</xs:complexType>
												</xs:element>
												</xs:sequence>
												</xs:complexType>
												</xs:element>
												<xs:group ref="IECC2009PermitChecklistGroup"/>
												</xs:all>
												<xs:assert
												test="AboveGradeWalls/Proposed/@NumAboveGradeWalls = AboveGradeWalls/Standard/@NumAboveGradeWalls"
												xerces:message="The number of above grade walls for proposed and standard design inputs should match!"/>
												<xs:assert
												test="BasementCrawlSpaceWalls/Proposed/@NumBasementCrawlSpaceWalls = BasementCrawlSpaceWalls/Standard/@NumBasementCrawlSpaceWalls"
												xerces:message="The number of basement crawlspace walls for proposed and standard design inputs should match!"/>
												<xs:assert
												test="AboveGradeFloors/Proposed/@NumAboveGradeFloors = AboveGradeFloors/Standard/@NumAboveGradeFloors"
												xerces:message="The number of above grade floors for proposed and standard design inputs should match!"/>
												<xs:assert
												test="Ceilings/Proposed/@NumCeilings = Ceilings/Standard/@NumCeilings"
												xerces:message="The number of celilings for proposed and standard design inputs should match!"/>
												<xs:assert
												test="Roofs/Proposed/@NumRoofs = Roofs/Standard/@NumRoofs"
												xerces:message="The number of roofs for proposed and standard design inputs should match!"/>
												<xs:assert
												test="Foundations/Proposed/@NumFoundations = Foundations/Standard/@NumFoundations"
												xerces:message="The number of foundations for proposed and standard design inputs should match!"/>
												<xs:assert
												test="HeatingSystems/Proposed/HVACHeatingSystems/@NumHVACHeatingSystems = HeatingSystems/Standard/HVACHeatingSystems/@NumHVACHeatingSystems"
												xerces:message="The number of HVAC Heating systems for proposed and standard design inputs should match!"/>
												<xs:assert
												test="CoolingSystems/Proposed/HVACCoolingSystems/@NumHVACCoolingSystems = CoolingSystems/Standard/HVACCoolingSystems/@NumHVACCoolingSystems"
												xerces:message="The number of HVAC Cooling systems for proposed and standard design inputs should match!"
												/>
											</xs:complexType>
										</xs:element>
										<xs:element name="Certificate" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Compliance Report for Certificate of Occupancy
									</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:all>
												<xs:element ref="PermitID" minOccurs="0"/>
												<xs:element ref="ReportDateCompleted"
												minOccurs="1"/>
												<xs:element name="AnnualEnergyCost" minOccurs="0">
												<xs:complexType>
												<xs:group ref="AnnualEnergyCostComplianceGroup"/>
												</xs:complexType>
												</xs:element>
												<xs:element name="AnnualSourceEnergyUse"
												minOccurs="0">
												<xs:complexType>
												<xs:group
												ref="AnnualSourceEnergyUseComplianceGroup"/>
												</xs:complexType>
												</xs:element>
												<xs:group ref="KeyBuildingDesignGroup"/>
												<xs:group ref="ProjectInfoGroup"/>
												<xs:element ref="AboveGradeWalls"/>
												<xs:element ref="BasementCrawlSpaceWalls"/>
												<xs:element ref="AboveGradeFloors"/>
												<xs:element ref="Ceilings"/>
												<xs:element ref="Roofs"/>
												<xs:element ref="Attics"/>
												<xs:element ref="Foundations"/>
												<xs:element ref="OpaqueDoors"/>
												<xs:element ref="Glazing"/>
												<xs:element ref="Skylights"/>
												<xs:element name="AirExchangeRate">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="Proposed">
												<xs:annotation>
												<xs:documentation>Air Exchange Rate</xs:documentation>
												</xs:annotation>
												<xs:complexType>
												<xs:all>
												<xs:element name="MeasuredEnvelopeLeakageRate">
												<xs:complexType>
												<xs:simpleContent>
												<xs:extension base="MeasuredEnvelopLeakageType">
												<xs:attribute fixed="ACH50" name="unit"/>
												</xs:extension>
												</xs:simpleContent>
												</xs:complexType>
												</xs:element>
												<xs:element ref="CombinedVentRate"/>
												</xs:all>
												</xs:complexType>
												</xs:element>
												</xs:sequence>
												</xs:complexType>
												</xs:element>
												<xs:element ref="MechVentEnergy"/>
												<xs:element ref="HeatingSystems"/>
												<xs:element ref="CoolingSystems"/>
												<xs:element ref="ServiceWaterHeating"/>
												<xs:element name="ThermDistribSystems">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="Proposed">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="System" minOccurs="1"
												maxOccurs="100">
												<xs:complexType>
												<xs:all>
												<xs:element ref="SupplyDuctInsulation"/>
												<xs:element ref="PerSupplyDuctCondSpace"/>
												<xs:element ref="ReturnDuctInsulation"/>
												<xs:element ref="PerReturnDuctCondSpace"/>
												<xs:element name="MeasuredDuctLeakageRate">
												<xs:annotation>
												<xs:documentation>
																			Measured duct leakage rate: x  
																		</xs:documentation>
												</xs:annotation>
												<xs:complexType>
												<xs:simpleContent>
												<xs:extension base="DuctLeakageRateType">
												<xs:attribute name="unit"
												type="DuctLeakageRateUnits2009"> </xs:attribute>
												</xs:extension>
												</xs:simpleContent>
												</xs:complexType>
												</xs:element>
												<xs:element ref="AirHandlerLocation"/>
												</xs:all>
												</xs:complexType>
												</xs:element>
												</xs:sequence>
												<xs:attribute name="NumThermDistribSystems"
												type="xs:int" default="1"/>
												<xs:assert
												test="(@NumThermDistribSystems = count(System))"/>
												</xs:complexType>
												</xs:element>
												</xs:sequence>
												</xs:complexType>
												</xs:element>
												<xs:group ref="IECC2009CertificateChecklistGroup"
												/>
												</xs:all>
												<xs:assert
												test="AboveGradeWalls/Proposed/@NumAboveGradeWalls = AboveGradeWalls/Standard/@NumAboveGradeWalls"
												xerces:message="The number of above grade walls for proposed and standard design inputs should match!"/>
												<xs:assert
												test="BasementCrawlSpaceWalls/Proposed/@NumBasementCrawlSpaceWalls = BasementCrawlSpaceWalls/Standard/@NumBasementCrawlSpaceWalls"
												xerces:message="The number of basement crawlspace walls for proposed and standard design inputs should match!"/>
												<xs:assert
												test="AboveGradeFloors/Proposed/@NumAboveGradeFloors = AboveGradeFloors/Standard/@NumAboveGradeFloors"
												xerces:message="The number of above grade floors for proposed and standard design inputs should match!"/>
												<xs:assert
												test="Ceilings/Proposed/@NumCeilings = Ceilings/Standard/@NumCeilings"
												xerces:message="The number of celilings for proposed and standard design inputs should match!"/>
												<xs:assert
												test="Roofs/Proposed/@NumRoofs = Roofs/Standard/@NumRoofs"
												xerces:message="The number of roofs for proposed and standard design inputs should match!"/>
												<xs:assert
												test="Foundations/Proposed/@NumFoundations = Foundations/Standard/@NumFoundations"
												xerces:message="The number of foundations for proposed and standard design inputs should match!"/>
												<xs:assert
												test="HeatingSystems/Proposed/HVACHeatingSystems/@NumHVACHeatingSystems = HeatingSystems/Standard/HVACHeatingSystems/@NumHVACHeatingSystems"
												xerces:message="The number of HVAC Heating systems for proposed and standard design inputs should match!"/>
												<xs:assert
												test="CoolingSystems/Proposed/HVACCoolingSystems/@NumHVACCoolingSystems = CoolingSystems/Standard/HVACCoolingSystems/@NumHVACCoolingSystems"
												xerces:message="The number of HVAC Cooling systems for proposed and standard design inputs should match!"
												/>
											</xs:complexType>
										</xs:element>
									</xs:all>
									<xs:assert
										test="((ComplianceMetrics = 'Source Energy Use') or ((ComplianceMetrics = 'Annual Energy Cost') and (not(Permit) or (exists(Permit/AnnualEnergyCost) and not(Permit/AnnualSourceEnergyUse))) and (not(Certificate) or (exists(Certificate/AnnualEnergyCost) and not(Certificate/AnnualSourceEnergyUse)))))"
										xerces:message="If ComplianceMetrics is Annual Energy Cost then AnnualEnergyCost must exist in Permit and Certificate reports and AnnualSourceEnergyUse must not exist."/>
									<xs:assert
										test="((ComplianceMetrics = 'Annual Energy Cost') or ((ComplianceMetrics = 'Source Energy Use') and (not(Permit) or (exists(Permit/AnnualSourceEnergyUse) and not(Permit/AnnualEnergyCost))) and (not(Certificate) or (exists(Certificate/AnnualSourceEnergyUse) and not(Certificate/AnnualEnergyCost)))))"
										xerces:message="If ComplianceMetrics is Source Energy Use then AnnualSourceEnergyUse must exist in Permit and Certificate reports and AnnualEnergyCost must not exist."
									/>
								</xs:complexType>
							</xs:element>
							<xs:element name="IECC2018" minOccurs="0">
								<xs:annotation>
									<xs:documentation>2018 IECC Simulated Performance Alternative Compliance Certificate</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:all>
										<xs:element ref="ComplianceMetrics"/>
										<xs:element name="Permit" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Compliance Report for Permit Application
									</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:all>
												<xs:element ref="WorstCase"/>
												<xs:element name="AnnualEnergyCost" minOccurs="0">
												<xs:complexType>
												<xs:group
												ref="AnnualEnergyCostComplianceGroup2018"/>
												</xs:complexType>
												</xs:element>
												<xs:element name="AnnualSourceEnergyUse"
												minOccurs="0">
												<xs:complexType>
												<xs:group
												ref="AnnualSourceEnergyUseComplianceGroup2018"/>
												</xs:complexType>
												</xs:element>
												<xs:group ref="KeyBuildingDesignGroup"/>
												<xs:group ref="ProjectInfoGroup"/>
												<xs:element ref="AboveGradeWalls"/>
												<xs:element ref="BasementCrawlSpaceWalls"/>
												<xs:element ref="AboveGradeFloors"/>
												<xs:element ref="Ceilings"/>
												<xs:element ref="Roofs"/>
												<xs:element ref="Attics"/>
												<xs:element ref="Foundations"/>
												<xs:element ref="OpaqueDoors"/>
												<xs:element ref="VFenestration"/>
												<xs:element ref="Skylights"/>
												<xs:element name="AirExchangeRate">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="Proposed">
												<xs:annotation>
												<xs:documentation>Proposed Design Inputs Air Exchange Rate for Permit Application</xs:documentation>
												</xs:annotation>
												<xs:complexType>
												<xs:all>
												<xs:element ref="EnvelopeLeakageRate"/>
												<xs:element ref="MechVentRate"/>
												</xs:all>
												</xs:complexType>
												</xs:element>
												<xs:element name="Standard">
												<xs:annotation>
												<xs:documentation>Std Reference Design Air Exchange Rate</xs:documentation>
												</xs:annotation>
												<xs:complexType>
												<xs:all>
												<xs:element ref="EnvelopeLeakageRate"/>
												<xs:element ref="MechVentRate"/>
												</xs:all>
												</xs:complexType>
												</xs:element>
												</xs:sequence>
												</xs:complexType>
												</xs:element>
												<xs:element ref="MechVentEnergy"/>
												<xs:element ref="HeatingSystems"/>
												<xs:element ref="CoolingSystems"/>
												<xs:element ref="ServiceWaterHeating"/>
												<xs:element name="ThermDistribSystems">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="Proposed">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="System" minOccurs="1"
												maxOccurs="100">
												<xs:complexType>
												<xs:all>
												<xs:element ref="SupplyDuctInsulation"/>
												<xs:element ref="PerSupplyDuctCondSpace"/>
												<xs:element ref="ReturnDuctInsulation"/>
												<xs:element ref="PerReturnDuctCondSpace"/>
												<xs:element ref="ProposedDuctLeakageRate"/>
												<xs:element ref="AirHandlerLocation"/>
												</xs:all>
												</xs:complexType>
												</xs:element>
												</xs:sequence>
												<xs:attribute name="NumThermDistribSystems"
												type="xs:int" default="1"/>
												<xs:assert
												test="(@NumThermDistribSystems = count(System))"/>
												</xs:complexType>
												</xs:element>
												<xs:element name="Standard">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="System" minOccurs="1"
												maxOccurs="100">
												<xs:complexType>
												<xs:all>
												<xs:element ref="SupplyDuctInsulation"/>
												<xs:element ref="ReturnDuctInsulation"/>
												</xs:all>
												</xs:complexType>
												</xs:element>
												</xs:sequence>
												<xs:attribute name="NumThermDistribSystems"
												type="xs:int" default="1"/>
												<xs:assert
												test="(@NumThermDistribSystems = count(System))"/>
												</xs:complexType>
												</xs:element>
												</xs:sequence>
												</xs:complexType>
												</xs:element>
												<xs:group ref="IECC2018PermitChecklistGroup"/>
												</xs:all>
												<xs:assert
												test="AboveGradeWalls/Proposed/@NumAboveGradeWalls = AboveGradeWalls/Standard/@NumAboveGradeWalls"
												xerces:message="The number of above grade walls for proposed and standard design inputs should match!"/>
												<xs:assert
												test="BasementCrawlSpaceWalls/Proposed/@NumBasementCrawlSpaceWalls = BasementCrawlSpaceWalls/Standard/@NumBasementCrawlSpaceWalls"
												xerces:message="The number of basement crawlspace walls for proposed and standard design inputs should match!"/>
												<xs:assert
												test="AboveGradeFloors/Proposed/@NumAboveGradeFloors = AboveGradeFloors/Standard/@NumAboveGradeFloors"
												xerces:message="The number of above grade floors for proposed and standard design inputs should match!"/>
												<xs:assert
												test="Ceilings/Proposed/@NumCeilings = Ceilings/Standard/@NumCeilings"
												xerces:message="The number of celilings for proposed and standard design inputs should match!"/>
												<xs:assert
												test="Roofs/Proposed/@NumRoofs = Roofs/Standard/@NumRoofs"
												xerces:message="The number of roofs for proposed and standard design inputs should match!"/>
												<xs:assert
												test="Foundations/Proposed/@NumFoundations = Foundations/Standard/@NumFoundations"
												xerces:message="The number of foundations for proposed and standard design inputs should match!"/>
												<xs:assert
												test="HeatingSystems/Proposed/HVACHeatingSystems/@NumHVACHeatingSystems = HeatingSystems/Standard/HVACHeatingSystems/@NumHVACHeatingSystems"
												xerces:message="The number of HVAC Heating systems for proposed and standard design inputs should match!"/>
												<xs:assert
												test="CoolingSystems/Proposed/HVACCoolingSystems/@NumHVACCoolingSystems = CoolingSystems/Standard/HVACCoolingSystems/@NumHVACCoolingSystems"
												xerces:message="The number of HVAC Cooling systems for proposed and standard design inputs should match!"/>
												<xs:assert
												test="ThermDistribSystems/Proposed/@NumThermDistribSystems = ThermDistribSystems/Standard/@NumThermDistribSystems"
												xerces:message="The number of Thermal Distribution systems for proposed and standard design inputs should match!"
												/>
											</xs:complexType>
										</xs:element>
										<xs:element name="Certificate" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Compliance Report for Certificate of Occupancy
									</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:all>
												<xs:element ref="PermitID" minOccurs="0"/>
												<xs:element ref="ReportDateCompleted"
												minOccurs="1"/>
												<xs:element name="AnnualEnergyCost" minOccurs="0">
												<xs:complexType>
												<xs:group
												ref="AnnualEnergyCostComplianceGroup2018"/>
												</xs:complexType>
												</xs:element>
												<xs:element name="AnnualSourceEnergyUse"
												minOccurs="0">
												<xs:complexType>
												<xs:group
												ref="AnnualSourceEnergyUseComplianceGroup2018"/>
												</xs:complexType>
												</xs:element>
												<xs:group ref="KeyBuildingDesignGroup"/>
												<xs:group ref="ProjectInfoGroup"/>
												<xs:element ref="AboveGradeWalls"/>
												<xs:element ref="BasementCrawlSpaceWalls"/>
												<xs:element ref="AboveGradeFloors"/>
												<xs:element ref="Ceilings"/>
												<xs:element ref="Roofs"/>
												<xs:element ref="Attics"/>
												<xs:element ref="Foundations"/>
												<xs:element ref="OpaqueDoors"/>
												<xs:element ref="VFenestration"/>
												<xs:element ref="Skylights"/>
												<xs:element name="AirExchangeRate">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="Proposed">
												<xs:annotation>
												<xs:documentation>Proposed Design Inputs Air Exchange Rate for Certificate of Occupancy</xs:documentation>
												</xs:annotation>
												<xs:complexType>
												<xs:all>
												<xs:element ref="EnvelopeLeakageRate"/>
												<xs:element ref="MechVentRate"/>
												</xs:all>
												</xs:complexType>
												</xs:element>
												<xs:element name="Standard">
												<xs:annotation>
												<xs:documentation>Std Reference Design Air Exchange Rate</xs:documentation>
												</xs:annotation>
												<xs:complexType>
												<xs:all>
												<xs:element ref="EnvelopeLeakageRate"/>
												<xs:element ref="MechVentRate"/>
												</xs:all>
												</xs:complexType>
												</xs:element>
												</xs:sequence>
												</xs:complexType>
												</xs:element>
												<xs:element ref="MechVentEnergy"/>
												<xs:element ref="HeatingSystems"/>
												<xs:element ref="CoolingSystems"/>
												<xs:element ref="ServiceWaterHeating"/>
												<xs:element name="ThermDistribSystems">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="Proposed">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="System" minOccurs="1"
												maxOccurs="100">
												<xs:complexType>
												<xs:all>
												<xs:element ref="SupplyDuctInsulation"/>
												<xs:element ref="PerSupplyDuctCondSpace"/>
												<xs:element ref="ReturnDuctInsulation"/>
												<xs:element ref="PerReturnDuctCondSpace"/>
												<xs:element ref="MeasuredDuctLeakageRate"/>
												<xs:element ref="AirHandlerLocation"/>
												</xs:all>
												</xs:complexType>
												</xs:element>
												</xs:sequence>
												<xs:attribute name="NumThermDistribSystems"
												type="xs:int" default="1"/>
												<xs:assert
												test="(@NumThermDistribSystems = count(System))"/>
												</xs:complexType>
												</xs:element>
												<xs:element name="Standard">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="System" minOccurs="1"
												maxOccurs="100">
												<xs:complexType>
												<xs:all>
												<xs:element ref="SupplyDuctInsulation"/>
												<xs:element ref="ReturnDuctInsulation"/>
												</xs:all>
												</xs:complexType>
												</xs:element>
												</xs:sequence>
												<xs:attribute name="NumThermDistribSystems"
												type="xs:int" default="1"/>
												<xs:assert
												test="(@NumThermDistribSystems = count(System))"/>
												</xs:complexType>
												</xs:element>
												</xs:sequence>
												</xs:complexType>
												</xs:element>
												<xs:group ref="IECC2018CertificateChecklistGroup"
												/>
												</xs:all>
												<xs:assert
												test="AboveGradeWalls/Proposed/@NumAboveGradeWalls = AboveGradeWalls/Standard/@NumAboveGradeWalls"
												xerces:message="The number of above grade walls for proposed and standard design inputs should match!"/>
												<xs:assert
												test="BasementCrawlSpaceWalls/Proposed/@NumBasementCrawlSpaceWalls = BasementCrawlSpaceWalls/Standard/@NumBasementCrawlSpaceWalls"
												xerces:message="The number of basement crawlspace walls for proposed and standard design inputs should match!"/>
												<xs:assert
												test="AboveGradeFloors/Proposed/@NumAboveGradeFloors = AboveGradeFloors/Standard/@NumAboveGradeFloors"
												xerces:message="The number of above grade floors for proposed and standard design inputs should match!"/>
												<xs:assert
												test="Ceilings/Proposed/@NumCeilings = Ceilings/Standard/@NumCeilings"
												xerces:message="The number of celilings for proposed and standard design inputs should match!"/>
												<xs:assert
												test="Roofs/Proposed/@NumRoofs = Roofs/Standard/@NumRoofs"
												xerces:message="The number of roofs for proposed and standard design inputs should match!"/>
												<xs:assert
												test="Foundations/Proposed/@NumFoundations = Foundations/Standard/@NumFoundations"
												xerces:message="The number of foundations for proposed and standard design inputs should match!"/>
												<xs:assert
												test="HeatingSystems/Proposed/HVACHeatingSystems/@NumHVACHeatingSystems = HeatingSystems/Standard/HVACHeatingSystems/@NumHVACHeatingSystems"
												xerces:message="The number of HVAC Heating systems for proposed and standard design inputs should match!"/>
												<xs:assert
												test="CoolingSystems/Proposed/HVACCoolingSystems/@NumHVACCoolingSystems = CoolingSystems/Standard/HVACCoolingSystems/@NumHVACCoolingSystems"
												xerces:message="The number of HVAC Cooling systems for proposed and standard design inputs should match!"/>
												<xs:assert
												test="ThermDistribSystems/Proposed/@NumThermDistribSystems = ThermDistribSystems/Standard/@NumThermDistribSystems"
												xerces:message="The number of Thermal Distribution systems for proposed and standard design inputs should match!"
												/>
											</xs:complexType>
										</xs:element>
									</xs:all>
									<xs:assert
										test="((ComplianceMetrics = 'Source Energy Use') or ((ComplianceMetrics = 'Annual Energy Cost') and (not(Permit) or (exists(Permit/AnnualEnergyCost) and not(Permit/AnnualSourceEnergyUse))) and (not(Certificate) or (exists(Certificate/AnnualEnergyCost) and not(Certificate/AnnualSourceEnergyUse)))))"
										xerces:message="If ComplianceMetrics is Annual Energy Cost then AnnualEnergyCost must exist in Permit and Certificate reports and AnnualSourceEnergyUse must not exist."/>
									<xs:assert
										test="((ComplianceMetrics = 'Annual Energy Cost') or ((ComplianceMetrics = 'Source Energy Use') and (not(Permit) or (exists(Permit/AnnualSourceEnergyUse) and not(Permit/AnnualEnergyCost))) and (not(Certificate) or (exists(Certificate/AnnualSourceEnergyUse) and not(Certificate/AnnualEnergyCost)))))"
										xerces:message="If ComplianceMetrics is Source Energy Use then AnnualSourceEnergyUse must exist in Permit and Certificate reports and AnnualEnergyCost must not exist."
									/>
								</xs:complexType>
							</xs:element>
						</xs:choice>
					</xs:complexType>
				</xs:element>
				<xs:element name="H2O" minOccurs="0">
					<xs:complexType>
						<xs:all>
							<xs:element ref="SiteRatingDate"/>
							<xs:element name="HomeCharacteristics">
								<xs:complexType>
									<xs:all>
										<xs:element ref="RegistryID" minOccurs="0"/>
										<xs:element ref="H2OID" minOccurs="0"/>
										<xs:element ref="ConditionedArea"/>
										<xs:element ref="NumberBedrooms"/>
										<xs:element ref="NumberOfFloors"/>
										<xs:element ref="Basement"/>
									</xs:all>
								</xs:complexType>
							</xs:element>
							<xs:element name="HomeWaterFeatures">
								<xs:complexType>
									<xs:all>
										<xs:element ref="WaterSoftener"/>
										<xs:element ref="ShowerHeadFlowRate"/>
										<xs:element ref="LavatoryFaucetEfficiency"/>
										<xs:element ref="KitchenSinkFaucetFlowRate"/>
										<xs:element ref="WaterServicePressure"/>
										<xs:element ref="Toilets"/>
										<xs:element ref="Dishwasher"/>
										<xs:element ref="ClothesWasher"/>
									</xs:all>
								</xs:complexType>
							</xs:element>
							<xs:element name="HotWaterSystem">
								<xs:complexType>
									<xs:all>
										<xs:element ref="HWSystemPipeLength"/>
										<xs:element ref="HWPipeInsulated"/>
										<xs:element ref="HWRecirculation"/>
										<xs:element ref="DrainWaterHeatRecovery"/>
										<xs:element ref="NoShowersConnected"/>
										<xs:element ref="EqualFlow"/>
										<xs:element ref="CSADWHREff"/>
									</xs:all>
								</xs:complexType>
							</xs:element>
							<xs:element name="LandscapeDesign">
								<xs:complexType>
									<xs:all>
										<xs:element ref="LotArea"/>
										<xs:element ref="PadFootprintArea"/>
										<xs:element ref="TotalAvailableArea"/>
										<xs:element ref="FrontArea"/>
										<xs:element ref="BackArea"/>
										<xs:element ref="IsBackAreaImproved"/>
										<xs:element ref="FrontIrrigationArea"/>
										<xs:element ref="BackIrrigationArea"/>
										<xs:element ref="TotalIrrigationArea"/>
									</xs:all>
								</xs:complexType>
							</xs:element>
							<xs:element name="OutdoorWaterFeatures">
								<xs:complexType>
									<xs:all>
										<xs:element ref="PoolOrSpa"/>
										<xs:element ref="IrrigationSystem"/>
										<xs:element ref="ProfessionIrrAudit"/>
										<xs:element ref="IrrWeatherControl"/>
										<xs:element ref="UseRICI"/>
										<xs:element ref="RICIZoneFlowRates"/>
									</xs:all>
								</xs:complexType>
							</xs:element>
							<xs:element name="WaterCost">
								<xs:complexType>
									<xs:all>
										<xs:element ref="H2OPrice"/>
									</xs:all>
								</xs:complexType>
							</xs:element>
							<xs:element name="WaterSenseMandatoryRequirements">
								<xs:complexType>
									<xs:all>
										<xs:element ref="WSPressureLossTests" minOccurs="0"/>
										<xs:element ref="WSLeakFreeHotWater" minOccurs="0"/>
										<xs:element ref="WSLeakFreeToilets" minOccurs="0"/>
										<xs:element ref="WSLeakFreeBathroomFaucets" minOccurs="0"/>
										<xs:element ref="WSLeakFreeShowerheads" minOccurs="0"/>
										<xs:element ref="WSLeakFreeBathroomTubs" minOccurs="0"/>
										<xs:element ref="WSLeakFreeKitchenFaucets" minOccurs="0"/>
										<xs:element ref="WSLeakFreeOtherFixtures" minOccurs="0"/>
										<xs:element ref="WSToiletsLabeled" minOccurs="0"/>
										<xs:element ref="WSBathroomSinkFaucetsLabeled" minOccurs="0"/>
										<xs:element ref="WSShowerheadsLabeled" minOccurs="0"/>
									</xs:all>
								</xs:complexType>
							</xs:element>
							<xs:element name="Results">
								<xs:complexType>
									<xs:all>
										<xs:element ref="AnnualReferenceH2OUse"/>
										<xs:element ref="AnnualRatedH2OUse"/>
										<xs:element ref="AnnualH2OSaved"/>
										<xs:element ref="AnnualH2OCostSavings"/>
										<xs:element ref="IndoorWaterRatingIndex"/>
										<xs:element ref="OutdoorWaterRatingIndex"/>
										<xs:element ref="OverallWaterRatingIndex"/>
										<xs:element ref="EstimatedIndoorDailyUse"/>
										<xs:element ref="EstimatedIndoorDailySavings"/>
										<xs:element ref="EstimatedOutdoorDailyUse"/>
										<xs:element ref="EstimatedOutdoorDailySavings"/>
									</xs:all>
								</xs:complexType>
							</xs:element>
						</xs:all>
					</xs:complexType>
				</xs:element>
			</xs:all>
			<xs:assert test="
					if (exists(Ratings)) then
						(exists(Building/Address) and exists(Building/City) and exists(Building/State) and exists(Building/Zip))
					else
						true()" xerces:message="If Ratings exists then address information is mandatory."/>
			<xs:assert test="
					if ((IECC/IECC2009/Permit/WorstCase = false()) or exists(Ratings)) then
						(exists(Building/Address) and exists(Building/City) and exists(Building/State) and exists(Building/Zip))
					else
						true()"
				xerces:message="If 'WorstCase' is false then address information is mandatory."/>
			<xs:assert test="
					if ((IECC/IECC2018/Permit/WorstCase = false) or exists(Ratings)) then
						(exists(Building/Address) and exists(Building/City) and exists(Building/State) and exists(Building/Zip))
					else
						true()"
				xerces:message="If 'WorstCase' is false then address information is mandatory."/>
			<xs:assert test="
					if (count(Revisions/Revision[RevisionType[text() = 'Confirmed Ratings']]) > 0) then
						exists(Ratings/Confirmed)
					else
						true()"
				xerces:message="If 'Confirmed Ratings' needs to be revised then 'Ratings/Confirmed' should exists."/>
			<xs:assert test="
					if (count(Revisions/Revision[RevisionType[text() = 'Projected Ratings']]) > 0) then
						exists(Ratings/Confirmed)
					else
						true()"
				xerces:message="If 'Projected Ratings' needs to be revised then 'Ratings/Projected' should exists."/>
			<xs:assert test="
					if (count(Revisions/Revision[RevisionType[text() = 'IECC2009 Permit']]) > 0) then
						exists(IECC/IECC2009/Permit)
					else
						true()"
				xerces:message="If 'IECC2009 Permit' needs to be revised then 'IECC/IECC2009/Permit' should exists."/>
			<xs:assert test="
					if (count(Revisions/Revision[RevisionType[text() = 'IECC2018 Permit']]) > 0) then
						exists(IECC/IECC2018/Permit)
					else
						true()"
				xerces:message="If 'IECC2018 Permit' needs to be revised then 'IECC/IECC2018/Permit' should exists."/>
			<xs:assert test="
					if (count(Revisions/Revision[RevisionType[text() = 'IECC2009 Certificate']]) > 0) then
						exists(IECC/IECC2009/Certificate)
					else
						true()"
				xerces:message="If 'IECC2009 Certificate' needs to be revised then 'IECC/IECC2009/Certificate' should exists."/>
			<xs:assert test="
					if (count(Revisions/Revision[RevisionType[text() = 'IECC2018 Certificate']]) > 0) then
						exists(IECC/IECC2018/Certificate)
					else
						true()"
				xerces:message="If 'IECC2018 Certificate' needs to be revised then 'IECC/IECC2018/Certificate' should exists."/>
			<xs:assert test="
					if (exists(Ratings) or exists(IECC/IECC2009/Certificate) or exists(IECC/IECC2018/Certificate)) then
						exists(Provider)
					else
						true()"
				xerces:message="If Ratings or IECC2009 or IECC2018 Certificate exists then Provider is mandatory."/>
			<xs:assert test="
					if (exists(Ratings/Confirmed)) then
						exists(Building/ConstructionYear)
					else
						true()"
				xerces:message="If Confirmed Ratings exist then ConstructionYear is mandatory."/>
			<xs:assert test="
					if (count(Revisions/Revision[RevisionType[text() = 'Confirmed Ratings']]) > 0 and exists(Revisions/Revision[RevisionType[text() = 'Confirmed Ratings']]/RegistryID)) then
						Revisions/Revision[RevisionType[text() = 'Confirmed Ratings']]/RegistryID[text()] = Ratings/Confirmed/Registry/RegistryID[text()]
					else
						true()"
				xerces:message="The registryID for 'Confirmed Ratings' revision should match with 'Ratings/Confirmed'."
			/>
		</xs:complexType>
	</xs:element>

	<xs:complexType name="EPAEstarType">
		<xs:all>
			<xs:element name="EPAEnergyStarQualified" type="xs:boolean" default="false"
				minOccurs="1"/>
			<xs:element name="EPANextGenQualified" type="xs:boolean" default="false"/>
			<xs:element name="EnergyStarBuilderName" type="xs:string" minOccurs="0"/>
			<xs:element ref="VersionNo" minOccurs="0"/>
			<xs:element name="NextGenVersion" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="NextGen v1.0">
							<xs:annotation>
								<xs:documentation>ENERGY STAR National NextGen Version 1.0</xs:documentation>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="NextGen v1.1">
							<xs:annotation>
								<xs:documentation>ENERGY STAR National NextGen Version 1.1</xs:documentation>
							</xs:annotation>
						</xs:enumeration>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="EPAQualificationScores" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="SizeHERSTarget" type="xs:float" minOccurs="1">
							<xs:annotation>
								<xs:documentation>Size Adjusted HERS Index Target (required if qualified = true)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="SizeAdjFactor" type="xs:float" minOccurs="1">
							<xs:annotation>
								<xs:documentation>Size Adjustment Factor (required if qualified = true)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="HERSWithoutOPP" type="xs:float" minOccurs="1">
							<xs:annotation>
								<xs:documentation>HERS Index without OPP (required if qualified = true)</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="EPAEstarCertifications" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="CheckInsulationInstallGrade" type="xs:boolean"
							minOccurs="0">
							<xs:annotation>
								<xs:documentation>All entries for insulation installation grade equal Grade I? (true/false)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CheckODDuctLeakage" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Duct leakage to outdoors (less than or equal to) the greater of 4 CFM / 100 sq ft of CFA or 40 CFM for all duct systems? (true/false)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CheckTotalDuctLeakage" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Total duct leakage (less than or equal to) the greater of 12 CFM / 100 sq ft of CFA or 120 CFM for all duct systems? (true/false)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CheckIndoorAirPlusVerification" type="xs:boolean"
							minOccurs="0">
							<xs:annotation>
								<xs:documentation>Check Indoor AirPlus Verification? (true/false)</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:all>
		<xs:assert
			test="(EPAEnergyStarQualified = false()) or (EPAEnergyStarQualified = true() and (exists(VersionNo) or exists(EnergyStarVersion)) and exists(EPAQualificationScores))"
			xerces:message="If 'EPAEnergyStarQualified' is true then 'EnergyStarVersion' and 'EPAQualificationScores' should exists."/>
		<xs:assert
			test="(EPANextGenQualified = false() and not(NextGenVersion)) or (EPANextGenQualified = true() and exists(NextGenVersion))"
			xerces:message="If 'EPANextGenQualified' is true then 'NextGenVersion' should exists otherwise 'NextGenVersion' should not exist."
		/>
	</xs:complexType>
	<xs:complexType name="DOEZERHType">
		<xs:all>
			<xs:element name="DOEZERHQualified" type="xs:boolean" default="false" minOccurs="1">
				<xs:annotation>
					<xs:documentation>Is Home ZERH qualified?</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ZERHVersion" type="ZERHVersionType">
				<xs:annotation>
					<xs:documentation>Enter DOE Zero Enery Ready Home (ZERH) version number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ZERHPartnerID" type="xs:string"/>
			<xs:element name="RegisteredBuilder" type="xs:string"/>
			<xs:element name="DOEQualificationScores" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="SizeHERSTarget" type="xs:float" minOccurs="1">
							<xs:annotation>
								<xs:documentation>Size Adjusted HERS Index Target (required if qualified = true)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="SizeAdjFactor" type="xs:float" minOccurs="1">
							<xs:annotation>
								<xs:documentation>Size Adjustment Factor (required if qualified = true)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="HERSWithoutOPP" type="xs:float" minOccurs="1">
							<xs:annotation>
								<xs:documentation>HERS Index without OPP (required if qualified = true)</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="CondSpaceIncBasement" type="xs:float" minOccurs="1">
				<xs:annotation>
					<xs:documentation>Conditioned space including basement (floating point value)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CondSpaceExBasement" type="xs:float" minOccurs="1">
				<xs:annotation>
					<xs:documentation>Conditioned space excluding basement (floating point value)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EstimatedAnnualEnergySavings">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Electric" type="xs:float" default="0" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Electric kWh/year (floating point value - default = 0)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="NaturalGas" type="xs:float" default="0" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Natural gas therms/year (floating point value - default = 0)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="FuelOil" type="xs:float" default="0" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Fuel Oil gallons/year (floating point value - default = 0)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Propane" type="xs:float" default="0" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Propane gallons/year (floating point value - default = 0)</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="EstimatedAnnualEmissionReductions">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="CO2" type="xs:float" default="0" minOccurs="0">
							<xs:annotation>
								<xs:documentation>CO2 ton/year (floating point value - default = 0)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="SO2" type="xs:float" default="0" minOccurs="0">
							<xs:annotation>
								<xs:documentation>SO2 lb/year (floating point value - default = 0)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="NOx" type="xs:float" default="0" minOccurs="0">
							<xs:annotation>
								<xs:documentation>NOx lb/year (floating point value - default = 0)</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="RaterCertification" type="xs:boolean" default="false" minOccurs="1"/>
			<xs:element name="EStarV3" type="xs:boolean" default="false">
				<xs:annotation>
					<xs:documentation>Meets EnergyStar v3 requirement (true/false - default = false)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Fenestration" type="xs:boolean" default="false">
				<xs:annotation>
					<xs:documentation>Meets mandatory Fenestration requirement (true/false - default = false)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Insulation" type="xs:boolean" default="false">
				<xs:annotation>
					<xs:documentation>Meets mandatory Insulation requirements (true/false - default = false)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DuctLocation" type="xs:boolean" default="false">
				<xs:annotation>
					<xs:documentation>Meets mandatory duct location  (true/false - default = false)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Appliances" type="xs:boolean" default="false">
				<xs:annotation>
					<xs:documentation>Meets mandatory appliances requirements (true/false - default = false)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Lighting" type="xs:boolean" default="false">
				<xs:annotation>
					<xs:documentation>Meets mandatory lighting requirement (true/false - default = false)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FanEfficiency" type="xs:boolean" default="false">
				<xs:annotation>
					<xs:documentation>Meets mandatory fan efficiency requirement (true/false - default = false)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RatedPeakLoad" type="xs:float">
				<xs:annotation>
					<xs:documentation>Rated Home peak electricity use (kWh)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReferencePeakLoad" type="xs:float">
				<xs:annotation>
					<xs:documentation>Rated Home peak electricity use (kWh)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RatedEnergyIntensity" type="xs:float">
				<xs:annotation>
					<xs:documentation>Rated Home enery use intensity(kBtu/sqft)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="IndoorairPLUS" type="xs:boolean" default="false">
				<xs:annotation>
					<xs:documentation>Meets mandatory Indoor airPLUS requirement (true/false - default = false)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DHWdistribution" type="xs:boolean" default="false">
				<xs:annotation>
					<xs:documentation>Meets mandatory Hot Water distribution requirements (true/false - default = false)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ERVRequirements" type="xs:boolean" default="false">
				<xs:annotation>
					<xs:documentation>Meets mandatory H/ERV requirements if in Climate Zone 6-8 (true/false - default = false)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RenewableReady" type="xs:boolean" default="false">
				<xs:annotation>
					<xs:documentation>Meets mandatory Renewable Ready Home requirements (true/false - default = false)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ElectricReady" type="xs:boolean" default="false">
				<xs:annotation>
					<xs:documentation>Meets mandatory Electric Ready Home requirements (true/false - default = false)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EVReady" type="xs:boolean" default="false">
				<xs:annotation>
					<xs:documentation>Meets mandatory Electric Vehicle Ready Home requirements (true/false - default = false)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QualifiedviaSampling" type="xs:boolean" default="false">
				<xs:annotation>
					<xs:documentation>Home qualified via sampling (true/false - default = false)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CertifiedEPAWaterSense" type="xs:boolean" default="false">
				<xs:annotation>
					<xs:documentation>Certified EPA WaterSense (true/false - default = false)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CertifiedBHSFortified" type="xs:boolean" default="false">
				<xs:annotation>
					<xs:documentation>Certified IBHS Fortified (true/false - default = false)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FollowedDOEZERHGuide" type="xs:boolean" default="false">
				<xs:annotation>
					<xs:documentation>Followed DOE ZERH Quality Management Guide (true/false - default = false)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SignedUtilityWaiver" type="xs:boolean" default="false">
				<xs:annotation>
					<xs:documentation>Buyer signed utility bill waiver (true/false - default = false)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:all>
		<xs:assert
			test="(DOEZERHQualified = false()) or (DOEZERHQualified[text()] and (exists(DOEQualificationScores)))"
			xerces:message="If 'DOEZERHQualified' is true then 'DOEQualificationScores' should exists."
		/>
	</xs:complexType>
	<xs:complexType name="IAPType">
		<xs:all>
			<xs:element name="IndoorairPLUSQualified" type="xs:boolean" default="false"
				minOccurs="1"/>
			<xs:element name="VersionNo" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="IAPv1.0">
							<xs:annotation>
								<xs:documentation>IAPv1.0</xs:documentation>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="IAPv2.0">
							<xs:annotation>
								<xs:documentation>Meets mandatory Indoor airPLUS requirement</xs:documentation>
							</xs:annotation>
						</xs:enumeration>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:all>
		<xs:assert
			test="(IndoorairPLUSQualified = false()) or (IndoorairPLUSQualified[text()] and (exists(VersionNo)))"
			xerces:message="If 'IndoorairPLUSQualified' is true then 'VersionNo' should exists."/>
	</xs:complexType>
	<xs:complexType name="OPQType">
		<xs:sequence>
			<xs:element name="OPQQualified" type="xs:boolean" default="false" minOccurs="1"/>
			<xs:element name="OPQPrograms" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:sequence maxOccurs="100">
						<xs:element name="Program" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Name of EE program for which home qualifies</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:all>
									<xs:element name="name" type="xs:string"/>
								</xs:all>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="NumOPQs" type="xs:int" use="required"/>
					<xs:assert test="(@NumOPQs = count(Program))"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:assert test="(OPQQualified = false()) or (OPQQualified and (OPQPrograms/@NumOPQs > 0))"
		/>
	</xs:complexType>
	<xs:complexType name="PHIUSType">
		<xs:all>
			<xs:element name="PHIUSQualified" type="xs:boolean" default="false" minOccurs="1"/>
			<xs:element name="VersionNo" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="CORE">
							<xs:annotation>
								<xs:documentation>Meets Phius CORE requirements for new construction</xs:documentation>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="ZERO">
							<xs:annotation>
								<xs:documentation>Meets Phius ZERO requirements for new construction</xs:documentation>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="CORE Revive">
							<xs:annotation>
								<xs:documentation>Meets Phius CORE Revive requirements for retrofits</xs:documentation>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="ZERO Revive">
							<xs:annotation>
								<xs:documentation>Meets Phius ZERO Revive requirements for retrofits</xs:documentation>
							</xs:annotation>
						</xs:enumeration>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:all>
		<xs:assert
			test="(PHIUSQualified = false()) or (PHIUSQualified[text()] and (exists(VersionNo)))"
			xerces:message="If 'PHIUSQualified' is true then 'VersionNo' should exist."/>
	</xs:complexType>
	<xs:complexType name="Name">
		<xs:sequence>
			<xs:element name="FirstName" type="xs:string"/>
			<xs:element name="LastName" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:group name="BuilderGroup">
		<xs:all>
			<xs:element name="Address" type="xs:string" minOccurs="0"/>
			<xs:element name="Address2" type="xs:string" minOccurs="0"/>
			<xs:element name="UnitID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Enter unit identification if townhouses with same street address</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="City" type="xs:string" minOccurs="0"/>
			<xs:element name="State" type="state" minOccurs="0"/>
			<xs:element name="Zip" type="xs:string" minOccurs="0"/>
			<xs:element name="Builder" type="xs:string" minOccurs="1">
				<xs:annotation/>
			</xs:element>
			<xs:element name="BuilderID" type="xs:string" minOccurs="0"/>
		</xs:all>
	</xs:group>
	<xs:group name="ProjectInfoGroup">
		<xs:all>
			<xs:element ref="LotNumber"/>
			<xs:element ref="CodeAnalyst"/>
			<xs:element ref="Status"/>
			<xs:element ref="HomeTypeID"/>
			<xs:element ref="ConditionedArea"/>
			<xs:element ref="ConditionedVolume"/>
			<xs:element ref="NumberBedrooms"/>
			<xs:element ref="Software"/>
			<xs:element ref="SoftwareVersion"/>
			<xs:element ref="StoriesAboveGrade"/>
			<xs:element ref="Orientation"/>
		</xs:all>
	</xs:group>
	<xs:group name="RaterGroup">
		<xs:all>
			<xs:element ref="RaterID"> </xs:element>
			<xs:element ref="RatingCompany"> </xs:element>
			<xs:element ref="RaterName"> </xs:element>
			<xs:element ref="RaterPhone"> </xs:element>
			<xs:element ref="RaterEmail" minOccurs="0"/>
		</xs:all>
	</xs:group>

	<xs:group name="CharacteristicsGroup">
		<xs:all>
			<xs:element name="HousingType">
				<xs:annotation>
					<xs:documentation/>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="Single-Family"/>
						<xs:enumeration value="Townhouse, end unit"/>
						<xs:enumeration value="Townhouse, inside unit"/>
						<xs:enumeration value="Duplex, single unit"/>
						<xs:enumeration value="Multi-family, unit"/>
						<xs:enumeration value="Multi-family, end unit"/>
						<xs:enumeration value="Multi-family, inside unit"/>
						<xs:enumeration value="Mobile home"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="NumberOfStories" type="xs:nonNegativeInteger">
				<xs:annotation>
					<xs:documentation>Number of stories for the home</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FoundationType" maxOccurs="100">
				<xs:annotation>
					<xs:documentation>The home's foundation type</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="Slab On Grade"/>
						<xs:enumeration value="Vented Crawl"/>
						<xs:enumeration value="Unvented Crawl"/>
						<xs:enumeration value="Conditioned Crawl"/>
						<xs:enumeration value="Conditioned Basement"/>
						<xs:enumeration value="Exposed Exterior"/>
						<xs:enumeration value="Unconditioned Basement"/>
						<xs:enumeration value="MF Unit Above Cond Space"/>
						<xs:enumeration value="Uncond Above Ground Room"/>
						<xs:enumeration value="Slab Below Grade"/>
						<xs:enumeration value="MF Unit Above Uncond Space"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="CrawlSpaceType" minOccurs="0" maxOccurs="100">
				<xs:annotation>
					<xs:documentation>Type of crawl space</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="Unvented"/>
						<xs:enumeration value="Vented"/>
						<xs:enumeration value="Conditioned"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ShellArea">
				<xs:annotation>
					<xs:documentation>The area of the building shell in square feet</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:decimal">
							<xs:attribute fixed="sq.ft." name="unit"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="FrameFloors" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Component" maxOccurs="100">
							<xs:complexType>
								<xs:all>
									<xs:element ref="Area" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The frame floor area</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element ref="AssemblyUFactor" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Assembly U-Value for individual wood frame floors (not slabs)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element ref="Location" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The frame floor location for each</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element ref="ContinuousInsulation" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Continuous Insulation R-value for wood frame floors (not slabs)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element ref="CavityInsulation" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Cavity Insulation R-value for wood frame floors (not slabs)</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:all>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="NumComponent" type="xs:int" default="1"/>
					<xs:assert test="(@NumComponent = count(Component))"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="Slabs" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Component" maxOccurs="100">
							<xs:complexType>
								<xs:all>
									<xs:element ref="Area" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The slab area in square feet</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="DepthBelowGrade" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The depth of the slab below grade</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:decimal">
												<xs:attribute fixed="ft." name="unit"/>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
									<xs:element name="Perimeter" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The length of the slab perimeter in feet</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:decimal">
												<xs:attribute fixed="ft." name="unit"/>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
									<xs:element name="PerimeterOnGrade" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The length of the slab perimeter that is exposed in feet</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:decimal">
												<xs:attribute fixed="ft." name="unit"/>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
									<xs:element name="PerimeterInsulation" type="xs:float"
										minOccurs="0">
										<xs:annotation>
											<xs:documentation>Perimeter Insulation R-value for slab</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="InsulationWidth" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Insulation Width for slab</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:decimal">
												<xs:attribute fixed="in." name="unit"/>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
									<xs:element name="PerimeterInsulationDepth" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Perimeter Insulation Depth for slab</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:decimal">
												<xs:attribute fixed="in." name="unit"/>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
									<xs:element name="HasFullUnderslabInsulation" type="xs:boolean"
										minOccurs="0">
										<xs:annotation>
											<xs:documentation>Is slab entirely insulated?</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="UnderslabInsulation" type="xs:float"
										minOccurs="0">
										<xs:annotation>
											<xs:documentation>Underslab Insulation R-Value</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:all>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="NumComponent" type="xs:int" default="1"/>
					<xs:assert test="(@NumComponent = count(Component))"/>
				</xs:complexType>
			</xs:element>

			<xs:element name="Ceilings" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Component" maxOccurs="100">
							<xs:complexType>
								<xs:all>
									<xs:element ref="Area">
										<xs:annotation>
											<xs:documentation>Individual ceiling surface area in square feet (Individual)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element ref="AssemblyUFactor">
										<xs:annotation>
											<xs:documentation>Individual assembly U-Value for ceiling</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element ref="ContinuousInsulation" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Ceiling continuous insulation R-value (must be used with cavity R-value in order to get a total ceiling insulation R-value)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element ref="CavityInsulation" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Ceiling cavity insulation R-value (must be used with cont. R-value in order to get a total ceiling insulation R-value)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="InsulationType">
										<xs:annotation>
											<xs:documentation>Ceiling insulation type (i.e. Batt, blown, etc)</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:enumeration value="Batt"/>
												<xs:enumeration value="Blown"/>
												<xs:enumeration value="Custom"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="InsulationGrade">
										<xs:annotation>
											<xs:documentation>Insulation installation grade for the ceiling insulation (i.e., 1, 2, 3)</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:integer">
												<xs:enumeration value="1"/>
												<xs:enumeration value="2"/>
												<xs:enumeration value="3"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="TrussWidth">
										<xs:annotation>
											<xs:documentation>The width of the ceiling joist/bottom truss chord or rafters in inches</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:decimal">
												<xs:attribute fixed="in." name="unit"/>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
									<xs:element name="TrussHeight">
										<xs:annotation>
											<xs:documentation>The height of the ceiling joist/bottom truss chord or rafters in inches</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:decimal">
												<xs:attribute fixed="in." name="unit"/>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
									<xs:element ref="FramingFactor">
										<xs:annotation>
											<xs:documentation>Ceiling framing factor</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:all>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="NumComponent" type="xs:int" default="1"/>
					<xs:assert test="(@NumComponent = count(Component))"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="Roofs" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Component" maxOccurs="100">
							<xs:complexType>
								<xs:all>
									<xs:element name="RadiantBarrier" type="xs:boolean"
										minOccurs="0">
										<xs:annotation>
											<xs:documentation>
									Yes/No does the roof have a radiant barrier?
								</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="MaterialType" minOccurs="0">
										<xs:annotation>
											<xs:documentation/>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:enumeration value="Composition Shingles"/>
												<xs:enumeration value="Tile (including concrete)"/>
												<xs:enumeration value="Metal"/>
												<xs:enumeration value="TPO"/>
												<xs:enumeration value="Other"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
								</xs:all>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="NumComponents" type="xs:int" default="1"/>
					<xs:assert test="(@NumComponents = count(Component))"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="AboveGradeWalls" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Component" maxOccurs="100">

							<xs:complexType>
								<xs:all>
									<xs:element ref="Area">
										<xs:annotation>
											<xs:documentation>Above grade wall area in square feet</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element ref="AssemblyUFactor">
										<xs:annotation>
											<xs:documentation>Assembly U-Value for above grade wall (Individual)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element ref="Location">
										<xs:annotation>
											<xs:documentation>Above grade wall location</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="WallConstructionType">
										<xs:annotation>
											<xs:documentation>Above grade wall type (i.e., wood frame, hollow-core concrete block)</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:enumeration value="Wood Frame"/>
												<xs:enumeration value="Double Stud Wood Frame"/>
												<xs:enumeration value="Steel Frame"/>
												<xs:enumeration value="Solid Concrete"/>
												<xs:enumeration value="Double Brick"/>
												<xs:enumeration value="Hollow Core CMU"/>
												<xs:enumeration value="SIP"/>
												<xs:enumeration value="Wood_Brick Veneer"/>
												<xs:enumeration value="Steel Frame_Brick Veneer"/>
												<xs:enumeration value="CMU_Brick Veneer"/>
												<xs:enumeration value="Autoclaved Concrete Block"/>
												<xs:enumeration value="Log"/>
												<xs:enumeration value="Adobe"/>
												<xs:enumeration value="ICF"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element ref="ContinuousInsulation" minOccurs="0">
										<xs:annotation>
											<xs:documentation>R-value of continuous wall insulation (i.e., foam board insulation)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element ref="CavityInsulation" minOccurs="0">
										<xs:annotation>
											<xs:documentation>R-value of cavity wall insulation</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="CavityInsulationThickness" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Insulation thickness for wall insulation</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:decimal">
												<xs:attribute fixed="in." name="unit"/>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
									<xs:element name="StudWidth" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The width of the wall studs in inches</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:decimal">
												<xs:attribute fixed="in." name="unit"/>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
									<xs:element name="StudDepth" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The depth of the wall studs in inches</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:decimal">
												<xs:attribute fixed="in." name="unit"/>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
									<xs:element name="StudSpacing" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The spacing of the wall studs in inches</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:decimal">
												<xs:attribute fixed="in." name="unit"/>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
									<xs:element ref="FramingFactor" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Ceiling framing factor</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="IsDefaultFramingFactor" type="xs:boolean"
										minOccurs="0">
										<xs:annotation>
											<xs:documentation>Yes/No was the default framing factor used for above grade walls</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:all>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="NumComponents" type="xs:int" default="1"/>
					<xs:assert test="(@NumComponents = count(Component))"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="FoundationWalls" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Component" maxOccurs="100">

							<xs:complexType>
								<xs:all>
									<xs:element ref="Area" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Foundation wall area in square feet</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element ref="AssemblyUFactor" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Assembly U-Value for foundation walls</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="WallConstructionType" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Foundation wall type</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:enumeration value="Concrete"/>
												<xs:enumeration value="CMU"/>
												<xs:enumeration value="Autoclaved Concrete Block"/>
												<xs:enumeration value="ICF"/>
												<xs:enumeration value="Double Brick"/>
												<xs:enumeration value="Wood Frame"/>
												<xs:enumeration value="Mobile Home Skirting"/>
												<xs:enumeration value="Log"/>
												<xs:enumeration value="Steel Frame"/>
												<xs:enumeration value="Wood_Brick Veneer"/>
												<xs:enumeration value="Steel_Brick Veneer"/>
												<xs:enumeration value="CMU_Brick Veneer"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element ref="ContinuousInsulation" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Foundation wall continuous insulation R-value</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element ref="CavityInsulation" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Foundation wall cavity insulation R-value</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ExteriorInsulation" type="xs:float"
										minOccurs="0">
										<xs:annotation>
											<xs:documentation>R-value of foundation wall exterior insulation</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element ref="InsulationGrade" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Insulation installation grade for foundation cavity insulation</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:all>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="NumComponents" type="xs:int" default="1"/>
					<xs:assert test="(@NumComponents = count(Component))"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="Joists" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Component" maxOccurs="100">

							<xs:complexType>
								<xs:all>
									<xs:element ref="Area" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Area of rim/band joists</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element ref="AssemblyUFactor" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Assembly U-Value for rim/band joist</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element ref="Location" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The location of the joist with respect to conditioned/unconditioned space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element ref="CavityInsulation" minOccurs="0">
										<xs:annotation>
											<xs:documentation>R-value of rim/band joist cavity insulation</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element ref="ContinuousInsulation" minOccurs="0">
										<xs:annotation>
											<xs:documentation>R-value of rim/band joist continuous insulation</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element ref="InsulationGrade" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Rim/band joist cavity insulation grade (I, II or III)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element ref="FramingFactor" minOccurs="0">
										<xs:annotation>
											<xs:documentation>% area of framing</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:all>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="NumComponents" type="xs:int" default="1"/>
					<xs:assert test="(@NumComponents = count(Component))"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="Doors" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Component" maxOccurs="100">

							<xs:complexType>
								<xs:all>
									<xs:element ref="Area">
										<xs:annotation>
											<xs:documentation>Individual door area</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element ref="UFactor">
										<xs:annotation>
											<xs:documentation>Individual door U-value</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:all>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="NumComponents" type="xs:int" default="1"/>
					<xs:assert test="(@NumComponents = count(Component))"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="Windows" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Component" maxOccurs="100">
							<xs:complexType>
								<xs:all>
									<xs:element ref="Area">
										<xs:annotation>
											<xs:documentation>Individual window type area</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="SolarHeatGain" type="xs:float">
										<xs:annotation>
											<xs:documentation>Individual window Solar Heat Gain Coefficient value</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element ref="UFactor">
										<xs:annotation>
											<xs:documentation>Individual door U-value</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Orientation">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:enumeration value="N"/>
												<xs:enumeration value="NE"/>
												<xs:enumeration value="E"/>
												<xs:enumeration value="SE"/>
												<xs:enumeration value="S"/>
												<xs:enumeration value="SW"/>
												<xs:enumeration value="W"/>
												<xs:enumeration value="NW"/>
												<xs:enumeration value="Horizontal"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="OverhangDepth">
										<xs:annotation>
											<xs:documentation>
									The depth of a window overhang in inches, for each window
								</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:float">
												<xs:attribute fixed="in." name="unit"/>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
									<xs:element name="OverhangToTop">
										<xs:annotation>
											<xs:documentation>
									Distance from the overhang to the top of the window it shades (inches), for each window
								</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:float">
												<xs:attribute fixed="in." name="unit"/>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
									<xs:element name="OverhangToBottom">
										<xs:annotation>
											<xs:documentation>
									Distance from the overhang to the bottom of the window it shades (inches), for each window
								</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:float">
												<xs:attribute fixed="in." name="unit"/>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
									<xs:element name="ExternalSummerShadingFactor" default="100">
										<xs:annotation>
											<xs:documentation>Type of summer shading adjacent to windows, for each window (0 to 100%, where 100% represents the window receives full light)</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:float">
												<xs:attribute fixed="%" name="unit"/>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
									<xs:element name="ExternalWinterShadingFactor" default="100">
										<xs:annotation>
											<xs:documentation>Type of winter shading adjacent to windows, for each window</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:float">
												<xs:attribute fixed="%" name="unit"/>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
								</xs:all>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="NumComponents" type="xs:int" default="1"/>
					<xs:assert test="(@NumComponents = count(Component))"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="Infiltration" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Component" maxOccurs="100">
							<xs:complexType>
								<xs:all>
									<xs:element name="ACH50">
										<xs:annotation>
											<xs:documentation>Blower Door Infiltration</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:float">
												<xs:attribute fixed="ACH50" name="unit"/>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
									<xs:element name="IsTested" type="xs:boolean">
										<xs:annotation>
											<xs:documentation>Verified/Tested envelope leakage?</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:all>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="NumComponents" type="xs:int" default="1"/>
					<xs:assert test="(@NumComponents = count(Component))"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="MechanicalVentilation" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Component" maxOccurs="100">

							<xs:complexType>
								<xs:all>
									<xs:element name="Type">
										<xs:annotation>
											<xs:documentation>Mechanical ventilation system type</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:enumeration value="None"/>
												<xs:enumeration value="Balanced"/>
												<xs:enumeration value="Exhaust Only"/>
												<xs:enumeration value="Supply Only"/>
												<xs:enumeration value="Air Handler"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="VentFanFlowRate" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Mechanical ventilation system ventilation rate in CFM</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:float">
												<xs:attribute fixed="cfm" name="unit">
												</xs:attribute>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
									<xs:element name="VentFanRunTime" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The number of hours per day the mechanical ventilation system is set to run</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:float">
												<xs:attribute fixed="hours per day" name="unit">
												</xs:attribute>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
									<xs:element name="VentFanPower" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The fan watts of the mechanical ventilation system</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:float">
												<xs:attribute fixed="watts" name="unit">
												</xs:attribute>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>

									<xs:element name="TotalRecoveryEfficiency" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The percent of energy able to be recovered by ERV</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:float">
												<xs:attribute fixed="%" name="unit">
												</xs:attribute>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
								</xs:all>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="NumComponents" type="xs:int" default="1"/>
					<xs:assert test="(@NumComponents = count(Component))"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="Ducts" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Component" maxOccurs="100">
							<xs:complexType>
								<xs:all>
									<xs:element ref="ConditionedArea" minOccurs="0">
										<xs:annotation>
											<xs:documentation>
									The conditioned area in square feet that the duct system serves
								</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Location" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The home's foundation type</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:enumeration value="Conditioned space"/>
												<xs:enumeration value="Vented Crawl"/>
												<xs:enumeration value="Unvented Crawl"/>
												<xs:enumeration value="Conditioned Crawl"/>
												<xs:enumeration value="Unconditioned basement"/>
												<xs:enumeration value="Conditioned basement"/>
												<xs:enumeration value="Attic_under insul"/>
												<xs:enumeration value="Attic_exposed"/>
												<xs:enumeration value="Wall"/>
												<xs:enumeration value="Garage"/>
												<xs:enumeration value="Mobile home belly"/>
												<xs:enumeration value="Exterior wall"/>
												<xs:enumeration value="Floor cavity over garage"/>
												<xs:enumeration value="Under slab"/>
												<xs:enumeration value="Sealed Attic"/>
												<xs:enumeration value="Ambient"/>
												<xs:enumeration value="MF unrated cond"/>
												<xs:enumeration value="MF unrated heated"/>
												<xs:enumeration value="MF buffer space"/>
												<xs:enumeration value="MF nonfreezing"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element ref="SupplyDuctInsulation" minOccurs="0">
										<xs:annotation>
											<xs:documentation>
									Supply duct insulation R-value
								</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="NumberReturnRegisters"
										type="xs:nonNegativeInteger" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Total number of returns for the specific system</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="DuctLeakType" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The type of measurement for the duct leakage test</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:enumeration value="Default Value"/>
												<xs:enumeration value="Leakage to Out"/>
												<xs:enumeration value="Supply_Return LTO"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="DuctLTO" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Measured duct leakage to outdoors in CFM25.</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:float">
												<xs:attribute fixed="cfm25" name="unit"/>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
									<xs:element name="TotalLeakTestValue" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Total duct leakage in CFM25.</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:float">
												<xs:attribute fixed="cfm25" name="unit"/>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
									<xs:element name="DuctLeakEstimateType" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The type of duct leakage test that was conducted</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:enumeration value="Default Value"/>
												<xs:enumeration value="Leaky"/>
												<xs:enumeration value="Reduced Leakage"/>
												<xs:enumeration value="Proposed Qn"/>
												<xs:enumeration value="Proposed Leakage"/>
												<xs:enumeration value="Proposed DSE"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="DuctTestCondition" minOccurs="0">
										<xs:annotation>
											<xs:documentation>When the duct tightness test was conducted (Post construction, rough-in w/ or w/o air handler)</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:enumeration value="Post Construction"/>
												<xs:enumeration value="Rough-in with Air Handler"/>
												<xs:enumeration value="Rough-in no Air Handler"/>
												<xs:enumeration value="Test Exception"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>

								</xs:all>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="NumComponents" type="xs:int" default="1"/>
					<xs:assert test="(@NumComponents = count(Component))"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="Heating" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Component" maxOccurs="100">
							<xs:complexType>
								<xs:all>
									<xs:element name="Type">
										<xs:annotation>
											<xs:documentation>The type of heating equipment being used</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:enumeration value="Furnace"/>
												<xs:enumeration value="Electric baseboard"/>
												<xs:enumeration value="Air Distribution"/>
												<xs:enumeration value="Hydronic"/>
												<xs:enumeration value="Radiant"/>
												<xs:enumeration value="Air-source heat pump"/>
												<xs:enumeration value="Ground-course heat pump"/>
												<xs:enumeration value="Gas heat pump"/>
												<xs:enumeration value="Fuel-fired unit heater"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="Fuel">
										<xs:annotation>
											<xs:documentation>Fuel type for the heating equipment</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:enumeration value="Natural Gas"/>
												<xs:enumeration value="Propane"/>
												<xs:enumeration value="Fuel Oil"/>
												<xs:enumeration value="Electric"/>
												<xs:enumeration value="Kerosene"/>
												<xs:enumeration value="Wood"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>


									<xs:element name="RatingValue" type="xs:float">
										<xs:annotation>
											<xs:documentation>Efficiency for the heating system (contains multiple units: i.e., AFUE, HSPF)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="RatingMetric">
										<xs:annotation>
											<xs:documentation>The units for the efficiency of the heating equipment (i.e.,AFUE, HSPF)</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:enumeration value="AFUE"/>
												<xs:enumeration value="Percent_Eff"/>
												<xs:enumeration value="HSPF"/>
												<xs:enumeration value="COP"/>
												<xs:enumeration value="HSPF2"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="RatedOutputCapacity">
										<xs:annotation>
											<xs:documentation>Rated output capacity for the heating equipment</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:float">
												<xs:attribute fixed="kBtu/hr" name="unit">
												</xs:attribute>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
									<xs:element name="FanControlType" minOccurs="0">
										<xs:annotation>
											<xs:documentation>
									The fan control type for the heating system
								</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:enumeration value="Single Speed"/>
												<xs:enumeration value="Two Speed"/>
												<xs:enumeration value="Variable Speed"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="UseAuxiliaryEAEDefault" type="xs:boolean"
										minOccurs="0">
										<xs:annotation>
											<xs:documentation>Yes/No is the software using the auxiliary electric default (EAE)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="EAEValue" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Heating EAE Value where default is not used</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:float">
												<xs:attribute fixed="kWh" name="unit">
												</xs:attribute>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
								</xs:all>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="NumComponents" type="xs:int" default="1"/>
					<xs:assert test="(@NumComponents = count(Component))"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="Cooling" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Component" maxOccurs="100">
							<xs:complexType>
								<xs:all>
									<xs:element name="Type">
										<xs:annotation>
											<xs:documentation>The type of cooling equipment being used</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:enumeration value="Air conditioner"/>
												<xs:enumeration value="Air-source heat pump"/>
												<xs:enumeration value="PTAC_room A/C"/>
												<xs:enumeration value="Gas heat pump"/>
												<xs:enumeration value="Ground-source heat pump"/>
												<xs:enumeration value="Evaporative cooler"/>
												<xs:enumeration value="Evaporative condenser"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="Fuel">
										<xs:annotation>
											<xs:documentation>Fuel type for the heating equipment</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:enumeration value="Natural Gas"/>
												<xs:enumeration value="Propane"/>
												<xs:enumeration value="Fuel Oil"/>
												<xs:enumeration value="Electric"/>
												<xs:enumeration value="Kerosene"/>
												<xs:enumeration value="Wood"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>

									<xs:element name="RatingValue" type="xs:float">
										<xs:annotation>
											<xs:documentation>Efficiency rating for the cooling equipment</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="RatingMetric">
										<xs:annotation>
											<xs:documentation>The units used for the cooling system (i.e., SEER)</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:enumeration value="SEER"/>
												<xs:enumeration value="EER"/>
												<xs:enumeration value="SEER2"/>
												<xs:enumeration value="EER2"/>
												<xs:enumeration value="Percent_Eff"/>
												<xs:enumeration value="COP"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="RatedOutputCapacity">
										<xs:annotation>
											<xs:documentation>Rated output capacity for the cooling equipment</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:float">
												<xs:attribute fixed="kBtu/hr" name="unit">
												</xs:attribute>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
									<xs:element name="FanControlType">
										<xs:annotation>
											<xs:documentation>
												The fan control type for the cooling system
											</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:enumeration value="Single Speed"/>
												<xs:enumeration value="Two Speed"/>
												<xs:enumeration value="Variable Speed"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="UseAuxiliaryEAEDefault" type="xs:boolean">
										<xs:annotation>
											<xs:documentation>Yes/No is the software using the auxiliary electric default (EAE)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="EAEValue">
										<xs:annotation>
											<xs:documentation>Heating EAE Value where default is not used</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:float">
												<xs:attribute fixed="kWh" name="unit">
												</xs:attribute>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
								</xs:all>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="NumComponents" type="xs:int" default="1"/>
					<xs:assert test="(@NumComponents = count(Component))"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="HotWater" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Component" maxOccurs="100">
							<xs:complexType>
								<xs:all>
									<xs:element name="Type">
										<xs:annotation>
											<xs:documentation>Water heater type</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:enumeration value="Conventional"/>
												<xs:enumeration value="Tankless"/>
												<xs:enumeration value="Heat pump"/>
												<xs:enumeration value="Ground-source heat pump"/>
												<xs:enumeration value="Integrated"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="Fuel">
										<xs:annotation>
											<xs:documentation>Water heater fuel type</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:enumeration value="Natural Gas"/>
												<xs:enumeration value="Propane"/>
												<xs:enumeration value="Fuel Oil"/>
												<xs:enumeration value="Electric"/>
												<xs:enumeration value="Kerosene"/>
												<xs:enumeration value="Wood"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="StorageCapacity">
										<xs:annotation>
											<xs:documentation>Water heater tank capacity</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:float">
												<xs:attribute fixed="Gallons" name="unit">
												</xs:attribute>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
									<xs:element name="RatingValue" type="xs:float">
										<xs:annotation>
											<xs:documentation>Water heater efficiency</xs:documentation>

										</xs:annotation>
									</xs:element>
									<xs:element name="RatingMetric">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:enumeration value="EF"/>
												<xs:enumeration value="UEF"/>
												<xs:enumeration value="CEF"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>

									<xs:element name="RecoveryEfficiency" type="xs:float">
										<xs:annotation>
											<xs:documentation>Water heater recovery efficiency</xs:documentation>

										</xs:annotation>
									</xs:element>


								</xs:all>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="NumComponents" type="xs:int" default="1"/>
					<xs:assert test="(@NumComponents = count(Component))"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="LightingAppliances" minOccurs="0">
				<xs:complexType>
					<xs:all>
						<xs:element name="RefrigeratorKWh" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Refrigerator annual electricity consumption, annually</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute fixed="kWh/y" name="unit"> </xs:attribute>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="DishwasherEnergyFactor" type="xs:float" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Dishwasher efficiency</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DishwasherLER" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Dishwasher electricity consumption, annually</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:integer">
										<xs:attribute fixed="kWh/y" name="unit"> </xs:attribute>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="DryerFuel" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Clothes dryer fuel type</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:enumeration value="Natural Gas"/>
									<xs:enumeration value="Propane"/>
									<xs:enumeration value="Electric"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="DryerCEF" type="xs:float" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Clothes dryer CEF for dryers</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="WasherLER" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Clothes washer LER, annually</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:integer">
										<xs:attribute fixed="kWh/y" name="unit"> </xs:attribute>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="WasherCapacity" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Clothes washer capacity</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute fixed="ft3" name="unit"> </xs:attribute>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="CeilingFanCFMWatts" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Ceiling fan CFMs per watt</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute fixed="CFM/watt" name="unit"> </xs:attribute>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="InteriorTier1">
							<xs:annotation>
								<xs:documentation>Percent Tier 1 Lighting in the Interior</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute fixed="%" name="unit"> </xs:attribute>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="InteriorTier2">
							<xs:annotation>
								<xs:documentation>Percent Tier 2 Lighting in the Interior</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute fixed="%" name="unit"> </xs:attribute>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="ExteriorTier1">
							<xs:annotation>
								<xs:documentation>Percent Tier 1 Lighting in the Exterior</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute fixed="%" name="unit"> </xs:attribute>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="ExteriorTier2">
							<xs:annotation>
								<xs:documentation>Percent Tier 2 Lighting in the Exterior</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute fixed="%" name="unit"> </xs:attribute>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="GarageTier1" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Percent Tier 1 Lighting in the Garage</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute fixed="%" name="unit"> </xs:attribute>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="GarageTier2" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Percent Tier 2 Lighting in the Garage</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute fixed="%" name="unit"> </xs:attribute>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
					</xs:all>
				</xs:complexType>
			</xs:element>

			<xs:element name="Photovoltaics" minOccurs="0">
				<xs:complexType>
					<xs:all>
						<xs:element name="CollectorArea" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Solar PV Collector Area</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute fixed="sq.ft." name="unit"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="CollectorPeakPower" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Solar PV Collector Peak Power</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute fixed="kWdc" name="unit"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="CollectorTilt" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Solar PV Collector Tilt</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute fixed="deg" name="unit"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>

						<xs:element name="CollectorOrientation" minOccurs="0">
							<xs:annotation>
								<xs:documentation>
									Solar PV Collector Orientation
								</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:enumeration value="North"/>
									<xs:enumeration value="East"/>
									<xs:enumeration value="South"/>
									<xs:enumeration value="West"/>
									<xs:enumeration value="Northeast"/>
									<xs:enumeration value="Northwest"/>
									<xs:enumeration value="Southeast"/>
									<xs:enumeration value="Southwest"/>
									<xs:enumeration value="Horizontal"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="InverterEfficiency" type="xs:float" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Solar PV Inverter Efficiency</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:all>
				</xs:complexType>
			</xs:element>
			<xs:element name="AddedMass" minOccurs="0">
				<xs:complexType>
					<xs:all>
						<xs:element ref="Area" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Interior mass area</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="MassType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Interior mass type</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:enumeration value="Concrete"/>
									<xs:enumeration value="Brick_Tile"/>
									<xs:enumeration value="Adobe"/>
									<xs:enumeration value="Rock_Stone"/>
									<xs:enumeration value="Water"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="MassThickness" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Interior mass thickness</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute fixed="in." name="unit"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
					</xs:all>
				</xs:complexType>
			</xs:element>


		</xs:all>
	</xs:group>
	<xs:group name="AnnualEnergyCostComplianceGroup2018">
		<xs:all>
			<xs:group ref="AnnualEnergyCostComplianceGroup"/>
			<xs:element name="IECCCostMechVentFanEnergy">
				<xs:annotation>
					<xs:documentation>2018 IECC Mechanical Ventilation Fan Energy</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute fixed="$/y" name="unit"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="DesignedMechVentFanEnergy">
				<xs:annotation>
					<xs:documentation>As Designed Mechanical Ventilation Fan Energy</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute fixed="$/y" name="unit"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:all>
	</xs:group>
	<xs:group name="AnnualSourceEnergyUseComplianceGroup2018">
		<xs:all>
			<xs:group ref="AnnualSourceEnergyUseComplianceGroup"/>
			<xs:element name="IECCSourceEnergyUseMechVentFanEnergy">
				<xs:annotation>
					<xs:documentation>2018 IECC Mechanical Ventilation Fan Energy</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute fixed="kBtu/y" name="unit"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="DesignedSourceEnergyUseMechVentFanEnergy">
				<xs:annotation>
					<xs:documentation>As Designed Mechanical Ventilation Fan Energy</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute fixed="kBtu/y" name="unit"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:all>
	</xs:group>
	<xs:group name="AnnualEnergyCostComplianceGroup">
		<xs:all>
			<xs:element name="IECCAnnualEnergyCost">
				<xs:annotation>
					<xs:documentation>IECC Standard Reference Design
									Annual Energy Cost</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute fixed="$/y" name="unit"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="HomeAnnualEnergyCost">
				<xs:annotation>
					<xs:documentation>This home
									Annual Energy Cost</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute fixed="$/y" name="unit"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="IECCCostHeating">
				<xs:annotation>
					<xs:documentation>IECC Annual Energy Cost by End Use Heating</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute fixed="$/y" name="unit"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="IECCCostCooling">
				<xs:annotation>
					<xs:documentation>IECC Annual Energy Cost by End Use Cooling</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute fixed="$/y" name="unit"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="IECCCostHotWater">
				<xs:annotation>
					<xs:documentation>IECC Annual Energy Cost by End Use Water heating</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute fixed="$/y" name="unit"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="DesignedCostHeating">
				<xs:annotation>
					<xs:documentation>As Designed Annual Energy Cost by End Use Heating</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute fixed="$/y" name="unit"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="DesignedCostCooling">
				<xs:annotation>
					<xs:documentation>As Designed Annual Energy Cost by End Use Cooling</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute fixed="$/y" name="unit"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="DesignedCostHotWater">
				<xs:annotation>
					<xs:documentation>As Designed Annual Energy Cost by End Use Water heating</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute fixed="$/y" name="unit"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element ref="PriceElectricity"/>
			<xs:element ref="PriceGas"/>
		</xs:all>
	</xs:group>
	<xs:group name="AnnualSourceEnergyUseComplianceGroup">
		<xs:all>
			<xs:element name="IECCSourceEnergyUse">
				<xs:annotation>
					<xs:documentation>IECC Standard Reference Design
						Source Energy Use in kBtu per year.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute fixed="kBtu/y" name="unit"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="HomeSourceEnergyUse">
				<xs:annotation>
					<xs:documentation>This home
						Source Energy Use in kBtu per year.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute fixed="kBtu/y" name="unit"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="IECCSourceEnergyUseHeating">
				<xs:annotation>
					<xs:documentation>IECC Annual Source Energy Use by End Use Heating</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute fixed="kBtu/y" name="unit"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="IECCSourceEnergyUseCooling">
				<xs:annotation>
					<xs:documentation>IECC Annual Source Energy Use by End Use Cooling</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute fixed="kBtu/y" name="unit"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="IECCSourceEnergyUseHotWater">
				<xs:annotation>
					<xs:documentation>IECC Annual Source Energy Use by End Use Water heating</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute fixed="kBtu/y" name="unit"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="DesignedSourceEnergyUseHeating">
				<xs:annotation>
					<xs:documentation>As Designed Annual Source Energy Use by End Use Heating</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute fixed="kBtu/y" name="unit"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="DesignedSourceEnergyUseCooling">
				<xs:annotation>
					<xs:documentation>As Designed Annual Source Energy Use by End Use Cooling</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute fixed="kBtu/y" name="unit"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="DesignedSourceEnergyUseHotWater">
				<xs:annotation>
					<xs:documentation>As Designed Annual Source Energy Use by End Use Water heating</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:float">
							<xs:attribute fixed="kBtu/y" name="unit"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:all>
	</xs:group>
	<xs:group name="KeyBuildingDesignGroup">
		<xs:all>
			<xs:element ref="CeilingUnderVenAtticRValue"/>
			<xs:element ref="SealAtticAssemblyRValue"/>
			<xs:element ref="AboveGradeWallsRValue"/>
			<xs:element ref="BasementInteriorWallRValue"/>
			<xs:element ref="BasementExteriorWallRValue"/>
			<xs:element ref="CrawlspaceWallRValue"/>
			<xs:element ref="ExposedFloorRValue"/>
			<xs:element ref="SlabEdgeRValue"/>
			<xs:element ref="UnderSlabRValue"/>
			<xs:element ref="DuctInsulationRValue"/>
			<xs:element ref="EnvelopeLeakageRate"/>
			<xs:element ref="WindowUo"/>
			<xs:element ref="WindowSHGC"/>
			<xs:element ref="HVACHeatingSystems"/>
			<xs:element ref="HVACCoolingSystems"/>
			<xs:element ref="HotWaterSystems"/>
		</xs:all>
	</xs:group>
	<xs:group name="IECC2009CertificateChecklistGroup">
		<xs:all>
			<xs:element name="Section401_3" type="BasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Certificate. Permanent certificate posted on/near electrical panel with energy values</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section402_4_1" type="BasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Building thermal envelope. The building thermal envelope shall be durably sealed to limit infiltration.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section402_4_2_1" type="Section402_4_2_1Type">
				<xs:annotation>
					<xs:documentation>Testing option.  Building envelope tightness and insulation installation shall be considered acceptable when tested air leakage is less seven (7) air changes per hour at 50 Pa.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section402_4_2_2" type="Section402_4_2_2Type">
				<xs:annotation>
					<xs:documentation>Visual inspection option. Building envelope tightness and insulation installation shall be considered acceptable when the items listed in Table 402.4.2, applicable to the method of construction, are field verified.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section402_4_3" type="ChecklistResultType">
				<xs:annotation>
					<xs:documentation>Fireplaces. Wood-burning must have tight flue damper, outdoor combustion air</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section402_4_4" type="BasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Fenestration air leakage. Windows, sliding glass doors, skylights (on label).
				Swinging doors: 
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section402_4_5" type="ChecklistResultType">
				<xs:annotation>
					<xs:documentation>Recessed lighting.  IC-rated and air tight when in thermal envelope</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section402_5">
				<xs:annotation>
					<xs:documentation>Maximum fenestration UFactor and SHGC. Area-weighted avg. maximum fenestration UFactor and SHGC do not exceed limits in Section 402.5.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:all>
						<xs:element ref="MaxAreaWeightedUFactor" minOccurs="0"/>
						<xs:element ref="MaxAreaWeightedSHGC" minOccurs="0"/>
						<xs:element name="Section402_5Result" type="BasicChecklistResultType"/>
					</xs:all>
				</xs:complexType>
			</xs:element>
			<xs:element name="Section403_1" type="BasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Controls. Not less than one thermostat for each separate heating and cooling system
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section403_1_1" type="BasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Programmable thermostat. Required when primary heating system is a forced air furnace.
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section403_1_2" type="ChecklistResultType">
				<xs:annotation>
					<xs:documentation>Heat pump supplementary heat. Shall not operate, except during defrost, when the heat pump compressor can meet the heating load
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section403_2_2a" type="ChecklistResultType">
				<xs:annotation>
					<xs:documentation>Duct sealing. All ducts, air handlers, filter boxes and building cavities used as ducts shall be sealed. Joints and seams shall comply with Section M1601.4.1 of the International Residential Code.  
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section403_2_2b" type="Section403_2_2bType">
				<xs:annotation>
					<xs:documentation>Duct testing. Required if air handler or any duct is outside of conditioned space and provide test results. Test to be done at rough-in or post-construction.  
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section403_2_3" type="BasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Building cavities. Framing cavities shall not be used as supply ducts.  
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section403_3" type="BasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Mechanical system piping insulation. Mechanical system piping shall be insulated   
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section403_4" type="ChecklistResultType">
				<xs:annotation>
					<xs:documentation>Circulating hot water systems. All circulating hot water piping shall be insulated to at least R-2. Systems shall have automatic or readily accessible manual switch to turn off pump when not in use.  
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section403_5" type="ChecklistResultType">
				<xs:annotation>
					<xs:documentation>Mechanical ventilation. Outdoor air intakes and exhaust shall have automatic or gravity dampers that close when system is not operating.  
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section403_6" type="BasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Equipment sizing. Heating and cooling equipment sized in accordance with M1401.3 of the International Residential Code.   
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section403_7" type="ChecklistResultType">
				<xs:annotation>
					<xs:documentation>Systems serving multiple dwelling units. Shall comply with 503 and 504 in lieu of 403.   
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section403_8" type="ChecklistResultType">
				<xs:annotation>
					<xs:documentation>Snow melt system controls. Shall include automatic controls capable of shutting off the system when pavement temperature is ≥ 50°F; and auto or manual controls that will allow shutoff when outdoor temperature is ≥ 40°F   
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section403_9" type="ChecklistResultType">
				<xs:annotation>
					<xs:documentation>Pools. Heaters, time switches and covers shall comply with this section     
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SectionR405_2" type="ChecklistResultType">
				<xs:annotation>
					<xs:documentation>Mandatory requirements. All supply and return ducts not completely inside the thermal envelope shall be insulated to a minimum of R-6.     
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:all>
	</xs:group>
	<xs:group name="IECC2009PermitChecklistGroup">
		<xs:all>
			<xs:element name="Section401_3" type="PermitBasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Certificate. Permanent certificate posted on/near electrical panel with energy values</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section402_4_1" type="PermitBasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Building thermal envelope. The building thermal envelope shall be durably sealed to limit infiltration.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section402_4_2_1" type="PermitSection402_4_2_1Type">
				<xs:annotation>
					<xs:documentation>Testing option.  Building envelope tightness and insulation installation shall be considered acceptable when tested air leakage is less seven (7) air changes per hour at 50 Pa.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section402_4_2_2" type="PermitBasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Visual inspection option. Building envelope tightness and insulation installation shall be considered acceptable when the items listed in Table 402.4.2, applicable to the method of construction, are field verified.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section402_4_3" type="PermitChecklistResultType">
				<xs:annotation>
					<xs:documentation>Fireplaces. Wood-burning must have tight flue damper, outdoor combustion air</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section402_4_4" type="PermitBasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Fenestration air leakage. Windows, sliding glass doors, skylights (on label).
						Swinging doors: 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section402_4_5" type="PermitChecklistResultType">
				<xs:annotation>
					<xs:documentation>Recessed lighting.  IC-rated and air tight when in thermal envelope</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section402_5">
				<xs:annotation>
					<xs:documentation>Maximum fenestration UFactor and SHGC. Area-weighted avg. maximum fenestration UFactor and SHGC do not exceed limits in Section 402.5.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:all>
						<xs:element ref="MaxAreaWeightedUFactor" minOccurs="0"/>
						<xs:element ref="MaxAreaWeightedSHGC" minOccurs="0"/>
						<xs:element name="Section402_5Result" type="ChecklistResultType"/>
					</xs:all>
				</xs:complexType>
			</xs:element>
			<xs:element name="Section403_1" type="PermitBasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Controls. Not less than one thermostat for each separate heating and cooling system
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section403_1_1" type="PermitChecklistResultType">
				<xs:annotation>
					<xs:documentation>Programmable thermostat. Required when primary heating system is a forced air furnace.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section403_1_2" type="PermitChecklistResultType">
				<xs:annotation>
					<xs:documentation>Heat pump supplementary heat. Shall not operate, except during defrost, when the heat pump compressor can meet the heating load
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section403_2_2a" type="PermitChecklistResultType">
				<xs:annotation>
					<xs:documentation>Duct sealing. All ducts, air handlers, filter boxes and building cavities used as ducts shall be sealed. Joints and seams shall comply with Section M1601.4.1 of the International Residential Code.  
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section403_2_2b" type="Section403_2_2bType">
				<xs:annotation>
					<xs:documentation>Duct testing. Required if air handler or any duct is outside of conditioned space and provide test results. Test to be done at rough-in or post-construction.  
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section403_2_3" type="BasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Building cavities. Framing cavities shall not be used as supply ducts.  
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section403_3" type="PermitChecklistResultType">
				<xs:annotation>
					<xs:documentation>Mechanical system piping insulation. Mechanical system piping shall be insulated   
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section403_4" type="PermitChecklistResultType">
				<xs:annotation>
					<xs:documentation>Circulating hot water systems. All circulating hot water piping shall be insulated to at least R-2. Systems shall have automatic or readily accessible manual switch to turn off pump when not in use.  
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section403_5" type="PermitChecklistResultType">
				<xs:annotation>
					<xs:documentation>Mechanical ventilation. Outdoor air intakes and exhaust shall have automatic or gravity dampers that close when system is not operating.  
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section403_6" type="BasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Equipment sizing. Heating and cooling equipment sized in accordance with M1401.3 of the International Residential Code.   
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section403_7" type="PermitChecklistResultType">
				<xs:annotation>
					<xs:documentation>Systems serving multiple dwelling units. Shall comply with 503 and 504 in lieu of 403.   
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section403_8" type="PermitChecklistResultType">
				<xs:annotation>
					<xs:documentation>Snow melt system controls. Shall include automatic controls capable of shutting off the system when pavement temperature is ≥ 50°F; and auto or manual controls that will allow shutoff when outdoor temperature is ≥ 40°F   
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section403_9" type="PermitChecklistResultType">
				<xs:annotation>
					<xs:documentation>Pools. Heaters, time switches and covers shall comply with this section     
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SectionR405_2" type="PermitChecklistResultType">
				<xs:annotation>
					<xs:documentation>Mandatory requirements. All supply and return ducts not completely inside the thermal envelope shall be insulated to a minimum of R-6.     
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:all>
	</xs:group>
	<xs:group name="IECC2018CertificateChecklistGroup">
		<xs:all>
			<xs:element name="R401_3" type="BasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Certificate. Permanent certificate posted on/near electrical panel with energy values</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R402_1_1" type="BasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Vapor retarder. Wall assemblies in the building thermal envelope shall comply with vapor retarder requirements of R702.7 of the International Residential Code or 1405.3 of the International Building Code, as applicable. 
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R402_4_1" type="BasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Building thermal envelope. The sealing methods between dissimilar materials shall allow for differential expansion and contraction. 
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R402_4_1_1" type="BasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Building thermal envelope Seal building envelope from air infiltration, see Table R402.4.1.1 
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R402_4_1_2" type="xs:float">
				<xs:annotation>
					<xs:documentation>Testing.  Blower Door Test REQUIRED for 1- and 2-family dwellings, townhouses, and apartments three stories or less.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R402_4_2" type="ChecklistResultType">
				<xs:annotation>
					<xs:documentation>Fireplaces. Wood-burning must have tight flue damper, outdoor combustion air</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R402_4_3a" type="BasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Fenestration air leakage. Windows, sliding glass doors, skylights (on label).				 
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R402_4_3b" type="BasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Fenestration Air Leakage  Exterior swinging doors (on label)				 
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R402_4_4" type="ChecklistResultType">
				<xs:annotation>
					<xs:documentation>Rooms containing fuel-burning appliances Climate Zones 3-8. Open combustion fuel burning appliances located outside thermal envelope or in sealed/insulated room 
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R402_4_5" type="ChecklistResultType">
				<xs:annotation>
					<xs:documentation>Recessed lighting.  IC-rated and air tight when in thermal envelope</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R402_5">
				<xs:annotation>
					<xs:documentation>Maximum fenestration UFactor and SHGC. Area-weighted avg. maximum fenestration UFactor and SHGC do not exceed limits in Section 402.5.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:all>
						<xs:element ref="MaxAreaWeightedUFactor" minOccurs="0"/>
						<xs:element ref="MaxAreaWeightedSHGC" minOccurs="0"/>
						<xs:element name="R402_5Result" type="BasicChecklistResultType"/>
					</xs:all>
				</xs:complexType>
			</xs:element>
			<xs:element name="R403_1" type="BasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Controls. Not less than one thermostat for each separate heating and cooling system
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R403_1_1" type="BasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Programmable thermostat. Required when primary heating system is a forced air furnace.
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R403_1_2" type="ChecklistResultType">
				<xs:annotation>
					<xs:documentation>Heat pump supplementary heat. Shall not operate, except during defrost, when the heat pump compressor can meet the heating load
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R403_3_2" type="ChecklistResultType">
				<xs:annotation>
					<xs:documentation>Duct sealing. All ducts, air handlers, filter boxes and building cavities used as ducts shall be sealed. Joints and seams shall comply with Section M1601.4.1 of the International Residential Code.  
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R403_3_2_1" type="ChecklistResultType">
				<xs:annotation>
					<xs:documentation>Sealed air handler Air handlers shall have manufacturer’s designation for an air leakage of not greater than 2% of design airflow when tested in accordance with ASHRAE 193  
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R403_3_3" type="R403_3_3Type">
				<xs:annotation>
					<xs:documentation>Duct testing  Required if air handler or any duct is outside of conditioned space and provide post-installation test results.  
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R403_3_5" type="BasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Building cavities. Framing cavities shall not be used as supply ducts.  
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R403_4" type="BasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Mechanical system piping insulation. Mechanical system piping shall be insulated   
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R403_4_1" type="ChecklistResultType">
				<xs:annotation>
					<xs:documentation>Protection of piping insulation. Piping insulation exposed to weather and sunlight shall be protected, including from solar radiation. Adhesive tape shall be prohibited.   
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R403_5_1" type="ChecklistResultType">
				<xs:annotation>
					<xs:documentation>Heated water circulation and temperature maintenance systems Circulation pumps shall be on-demand   
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R403_5_1_1" type="ChecklistResultType">
				<xs:annotation>
					<xs:documentation>Circulation systems. Heated water circulation systems shall be provided with an demand-initiated circulation pump that will turn off when water in the circulation loop reaches a desired temperature and there is no demand for hot water.   
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R403_5_1_2" type="ChecklistResultType">
				<xs:annotation>
					<xs:documentation>Heat trace systems. Electric heat trace systems shall comply with IEEE 515.1 or UL 515. Controls shall automatically adjust the energy input to the heat tracing to maintain desired water temperature in piping in accordance with the times when heated water is used in the occupancy.     
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R403_6" type="BasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Mechanical Ventilation The building shall be provided with ventilation that complies with the requirements of the International Residential Code or International Mechanical Code     
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R403_6_1">
				<xs:annotation>
					<xs:documentation>Whole-house mechanical ventilation system fan efficacy. Fans used to provide whole-house mechanical ventilation shall meet the efficacy requirements of Table R403.6.1. Except where air handler that is integral to tested and listed HVAC equipment is used for whole-house mechanical ventilation.    
			</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:all>
						<xs:element name="VentFanEfficacy" minOccurs="1">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute fixed="cfm/Watt" name="unit"> </xs:attribute>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="R403_6_1Result" type="ChecklistResultType"/>
					</xs:all>
				</xs:complexType>
			</xs:element>
			<xs:element name="R403_7" type="BasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Provide equipment sizing documentation Manual J, Eng Cals or other    
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R403_8" type="ChecklistResultType">
				<xs:annotation>
					<xs:documentation>Systems serving multiple dwelling units Shall comply with C403 and C404 of the IECC-commercial provisions     
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R403_9" type="ChecklistResultType">
				<xs:annotation>
					<xs:documentation>Snow melt and ice system controls Shall include automatic controls capable of shutting off the system when pavement temperature is ≥ 50°F; and auto or manual controls that will allow shutoff when outdoor temperature is ≥ 40°F     
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R403_10" type="ChecklistResultType">
				<xs:annotation>
					<xs:documentation>Pools and permanent spa energy consumption Heaters, time switches and covers shall comply with this section     
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R403_11" type="ChecklistResultType">
				<xs:annotation>
					<xs:documentation>Portable spas Energy consumption of electric-powered portable spas shall be controlled by requirements of APSP 14     
			</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R404_1">
				<xs:annotation>
					<xs:documentation>Lighting Equipment Minimum percentage of lamps in permanent light fixtures must be high efficacy     
			</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:all>
						<xs:element ref="PercentHighEfficacyLights" minOccurs="1"/>
						<xs:element name="R404_1Result" type="BasicChecklistResultType"/>
					</xs:all>
				</xs:complexType>
			</xs:element>
			<xs:element name="R404_1_1" type="ChecklistResultType">
				<xs:annotation>
					<xs:documentation>Lighting equipment Fuel gas lighting systems shall not have continuously burning pilot lights     
			</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:all>
	</xs:group>
	<xs:group name="IECC2018PermitChecklistGroup">
		<xs:all>
			<xs:element name="R401_3" type="PermitBasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Certificate. Permanent certificate posted on/near electrical panel with energy values</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R402_1_1" type="PermitBasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Vapor retarder. Wall assemblies in the building thermal envelope shall comply with vapor retarder requirements of R702.7 of the International Residential Code or 1405.3 of the International Building Code, as applicable. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R402_4_1" type="PermitBasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Building thermal envelope. The sealing methods between dissimilar materials shall allow for differential expansion and contraction. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R402_4_1_1" type="PermitBasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Building thermal envelope Seal building envelope from air infiltration, see Table R402.4.1.1 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R402_4_1_2" type="xs:float">
				<xs:annotation>
					<xs:documentation>Testing.  Blower Door Test REQUIRED for 1- and 2-family dwellings, townhouses, and apartments three stories or less.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R402_4_2" type="PermitChecklistResultType">
				<xs:annotation>
					<xs:documentation>Fireplaces. Wood-burning must have tight flue damper, outdoor combustion air</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R402_4_3a" type="PermitBasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Fenestration air leakage. Windows, sliding glass doors, skylights (on label).				 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R402_4_3b" type="PermitBasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Fenestration Air Leakage  Exterior swinging doors (on label)				 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R402_4_4" type="PermitChecklistResultType">
				<xs:annotation>
					<xs:documentation>Rooms containing fuel-burning appliances Climate Zones 3-8. Open combustion fuel burning appliances located outside thermal envelope or in sealed/insulated room 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R402_4_5" type="PermitChecklistResultType">
				<xs:annotation>
					<xs:documentation>Recessed lighting.  IC-rated and air tight when in thermal envelope</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R402_5">
				<xs:annotation>
					<xs:documentation>Maximum fenestration UFactor and SHGC. Area-weighted avg. maximum fenestration UFactor and SHGC do not exceed limits in Section 402.5.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:all>
						<xs:element ref="MaxAreaWeightedUFactor" minOccurs="0"/>
						<xs:element ref="MaxAreaWeightedSHGC" minOccurs="0"/>
						<xs:element name="R402_5Result" type="BasicChecklistResultType"/>
					</xs:all>
				</xs:complexType>
			</xs:element>
			<xs:element name="R403_1" type="PermitChecklistResultType">
				<xs:annotation>
					<xs:documentation>Controls. Not less than one thermostat for each separate heating and cooling system
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R403_1_1" type="PermitChecklistResultType">
				<xs:annotation>
					<xs:documentation>Programmable thermostat. Required when primary heating system is a forced air furnace.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R403_1_2" type="PermitChecklistResultType">
				<xs:annotation>
					<xs:documentation>Heat pump supplementary heat. Shall not operate, except during defrost, when the heat pump compressor can meet the heating load
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R403_3_2" type="PermitChecklistResultType">
				<xs:annotation>
					<xs:documentation>Duct sealing. All ducts, air handlers, filter boxes and building cavities used as ducts shall be sealed. Joints and seams shall comply with Section M1601.4.1 of the International Residential Code.  
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R403_3_2_1" type="PermitChecklistResultType">
				<xs:annotation>
					<xs:documentation>Sealed air handler Air handlers shall have manufacturer’s designation for an air leakage of not greater than 2% of design airflow when tested in accordance with ASHRAE 193  
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R403_3_3" type="R403_3_3Type">
				<xs:annotation>
					<xs:documentation>Duct testing  Required if air handler or any duct is outside of conditioned space and provide post-installation test results.  
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R403_3_5" type="PermitChecklistResultType">
				<xs:annotation>
					<xs:documentation>Building cavities. Framing cavities shall not be used as supply ducts.  
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R403_4" type="PermitChecklistResultType">
				<xs:annotation>
					<xs:documentation>Mechanical system piping insulation. Mechanical system piping shall be insulated   
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R403_4_1" type="PermitChecklistResultType">
				<xs:annotation>
					<xs:documentation>Protection of piping insulation. Piping insulation exposed to weather and sunlight shall be protected, including from solar radiation. Adhesive tape shall be prohibited.   
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R403_5_1" type="PermitChecklistResultType">
				<xs:annotation>
					<xs:documentation>Heated water circulation and temperature maintenance systems Circulation pumps shall be on-demand   
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R403_5_1_1" type="PermitChecklistResultType">
				<xs:annotation>
					<xs:documentation>Circulation systems. Heated water circulation systems shall be provided with an demand-initiated circulation pump that will turn off when water in the circulation loop reaches a desired temperature and there is no demand for hot water.   
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R403_5_1_2" type="PermitChecklistResultType">
				<xs:annotation>
					<xs:documentation>Heat trace systems. Electric heat trace systems shall comply with IEEE 515.1 or UL 515. Controls shall automatically adjust the energy input to the heat tracing to maintain desired water temperature in piping in accordance with the times when heated water is used in the occupancy.     
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R403_6" type="BasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Mechanical Ventilation The building shall be provided with ventilation that complies with the requirements of the International Residential Code or International Mechanical Code     
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R403_6_1">
				<xs:annotation>
					<xs:documentation>Whole-house mechanical ventilation system fan efficacy. Fans used to provide whole-house mechanical ventilation shall meet the efficacy requirements of Table R403.6.1. Except where air handler that is integral to tested and listed HVAC equipment is used for whole-house mechanical ventilation.    
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:all>
						<xs:element name="ProposedVentFanEfficacy" minOccurs="1">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:float">
										<xs:attribute fixed="cfm/Watt" name="unit"> </xs:attribute>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="R403_6_1Result" type="ChecklistResultType"/>
					</xs:all>
				</xs:complexType>
			</xs:element>
			<xs:element name="R403_7" type="PermitBasicChecklistResultType">
				<xs:annotation>
					<xs:documentation>Provide equipment sizing documentation Manual J, Eng Cals or other    
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R403_8" type="PermitChecklistResultType">
				<xs:annotation>
					<xs:documentation>Systems serving multiple dwelling units Shall comply with C403 and C404 of the IECC-commercial provisions     
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R403_9" type="PermitChecklistResultType">
				<xs:annotation>
					<xs:documentation>Snow melt and ice system controls Shall include automatic controls capable of shutting off the system when pavement temperature is ≥ 50°F; and auto or manual controls that will allow shutoff when outdoor temperature is ≥ 40°F     
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R403_10" type="PermitChecklistResultType">
				<xs:annotation>
					<xs:documentation>Pools and permanent spa energy consumption Heaters, time switches and covers shall comply with this section     
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R403_11" type="PermitChecklistResultType">
				<xs:annotation>
					<xs:documentation>Portable spas Energy consumption of electric-powered portable spas shall be controlled by requirements of APSP 14     
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="R404_1">
				<xs:annotation>
					<xs:documentation>Lighting Equipment Minimum percentage of lamps in permanent light fixtures must be high efficacy     
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:all>
						<xs:element ref="PercentHighEfficacyLights" minOccurs="1"/>
						<xs:element name="R404_1Result" type="BasicChecklistResultType"/>
					</xs:all>
				</xs:complexType>
			</xs:element>
			<xs:element name="R404_1_1" type="PermitChecklistResultType">
				<xs:annotation>
					<xs:documentation>Lighting equipment Fuel gas lighting systems shall not have continuously burning pilot lights     
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:all>
	</xs:group>
	<xs:element name="ClimateZoneNo">
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:enumeration value="1A"/>
				<xs:enumeration value="1B"/>
				<xs:enumeration value="2A"/>
				<xs:enumeration value="2B"/>
				<xs:enumeration value="3A"/>
				<xs:enumeration value="3B"/>
				<xs:enumeration value="3C"/>
				<xs:enumeration value="4A"/>
				<xs:enumeration value="4B"/>
				<xs:enumeration value="4C"/>
				<xs:enumeration value="5A"/>
				<xs:enumeration value="5B"/>
				<xs:enumeration value="6A"/>
				<xs:enumeration value="6B"/>
				<xs:enumeration value="7A"/>
				<xs:enumeration value="7B"/>
				<xs:enumeration value="8A"/>
				<xs:enumeration value="8B"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="ClimateZoneNo2021">
		<xs:annotation>
			<xs:documentation>Where home is qualified for ZERH certification, enter post 2021 IECC climate zone</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:enumeration value="1A"/>
				<xs:enumeration value="1B"/>
				<xs:enumeration value="2A"/>
				<xs:enumeration value="2B"/>
				<xs:enumeration value="3A"/>
				<xs:enumeration value="3B"/>
				<xs:enumeration value="3C"/>
				<xs:enumeration value="4A"/>
				<xs:enumeration value="4B"/>
				<xs:enumeration value="4C"/>
				<xs:enumeration value="5A"/>
				<xs:enumeration value="5B"/>
				<xs:enumeration value="6A"/>
				<xs:enumeration value="6B"/>
				<xs:enumeration value="7A"/>
				<xs:enumeration value="7B"/>
				<xs:enumeration value="8A"/>
				<xs:enumeration value="8B"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="Status" default="New">
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:enumeration value="New"/>
				<xs:enumeration value="Existing"/>
				<xs:enumeration value="Addition"/>
				<xs:enumeration value="Renovation"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="HomeTypeID" default="1">
		<xs:simpleType>
			<xs:annotation>
				<xs:documentation>Single-Family=1, Duplex=2, Low-rise Multi-family=3, High-rise Multi-family=4, Townhouse=5</xs:documentation>
			</xs:annotation>
			<xs:restriction base="xs:int">
				<xs:enumeration value="1"/>
				<xs:enumeration value="2"/>
				<xs:enumeration value="3"/>
				<xs:enumeration value="4"/>
				<xs:enumeration value="5"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="ConditionedArea">
		<xs:annotation>
			<xs:documentation>Enter conditioned floor area in square feet</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:decimal">
					<xs:attribute fixed="sq.ft." name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="ConditionedVolume" type="xs:float"/>
	<xs:element name="NumberBedrooms" type="xs:nonNegativeInteger"/>
	<xs:element name="ConditionedBasementArea" type="xs:float" default="0"/>
	<xs:element name="UnconditionedBasementArea" type="xs:float" default="0"/>
	<xs:element name="Software">
		<xs:simpleType>
			<xs:annotation>
				<xs:documentation>RemRate=1, EnergyGauge=2, EnergyInsights=3, OptiMiser=4, Ekotrope=5, Right-Energy HERS=6</xs:documentation>
			</xs:annotation>
			<xs:restriction base="xs:string">
				<xs:enumeration value="1"/>
				<xs:enumeration value="2"/>
				<xs:enumeration value="3"/>
				<xs:enumeration value="4"/>
				<xs:enumeration value="5"/>
				<xs:enumeration value="6"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="SoftwareVersion" type="xs:string"/>
	<xs:element name="LotNumber" type="xs:string"/>
	<xs:element name="StoriesAboveGrade">
		<xs:simpleType>
			<xs:annotation>
				<xs:documentation>Floors above grade</xs:documentation>
			</xs:annotation>
			<xs:restriction base="xs:integer">
				<xs:minInclusive value="0"/>
				<xs:maxInclusive value="3"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="RaterID">
		<xs:simpleType>
			<xs:annotation>
				<xs:documentation>RaterID in the form XXXXXXX</xs:documentation>
			</xs:annotation>
			<xs:restriction base="xs:integer">
				<xs:pattern value="[0-9]{7}"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="RatingCompany" type="xs:string">
		<xs:annotation>
			<xs:documentation>Enter name of Rating Company</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:element name="CodeAnalyst">
		<xs:complexType>
			<xs:annotation>
				<xs:documentation>This person can be a Rater, an RFI, a Modeler or other analyst who performed the Code Performance analysis.</xs:documentation>
			</xs:annotation>
			<xs:all>
				<xs:element name="Name" type="xs:string"/>
				<xs:element name="ID" type="xs:string" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Enter the Code Analyst ID such as RFIIN, RTIN</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:all>
		</xs:complexType>
	</xs:element>
	<xs:element name="RaterName" type="Name">
		<xs:annotation>
			<xs:documentation>Enter name of Rater</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="RaterPhone" type="xs:string">
		<xs:annotation>
			<xs:documentation>Enter phone number of Rater</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="RaterEmail" type="EmailAddress">
		<xs:annotation>
			<xs:documentation>Enter certified Rater's e-mail address</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="MaxAreaWeightedUFactor" type="xs:float">
		<xs:annotation>
			<xs:documentation>Maximum area-weighted UFactor</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="MaxAreaWeightedSHGC" type="xs:float">
		<xs:annotation>
			<xs:documentation>Maximum area-weighted SHGC</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="PercentHighEfficacyLights">
		<xs:annotation>
			<xs:documentation>Percent High Efficacy Lights</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:int">
					<xs:attribute fixed="%" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="EnvelopeLeakageRate">
		<xs:annotation>
			<xs:documentation>Envelope Leakage Rate:  X.X ACH50</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:float">
					<xs:attribute fixed="ACH50" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="ProposedDuctLeakageRate">
		<xs:annotation>
			<xs:documentation>
				Proposed duct leakage rate: x  
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="DuctLeakageRateType">
					<xs:attribute name="unit" fixed="cfm/100 ft2 Total"> </xs:attribute>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="MeasuredDuctLeakageRate">
		<xs:annotation>
			<xs:documentation>
				Measured duct leakage rate: x  
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="DuctLeakageRateType">
					<xs:attribute name="unit" fixed="cfm/100 ft2 Total"> </xs:attribute>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="CombinedVentRate">
		<xs:annotation>
			<xs:documentation>
				Combined ventilation rate  
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="VentRateType">
					<xs:attribute fixed="CFM" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="MechVentRate">
		<xs:annotation>
			<xs:documentation>
				Mechanical ventilation rate  
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:float">
					<xs:attribute fixed="CFM" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="PriceElectricity" nillable="true">
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:float">
					<xs:attribute fixed="$/kWh" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="PriceGas" nillable="true">
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:float">
					<xs:attribute fixed="$/therm" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="CeilingUnderVenAtticRValue" type="xs:integer">
		<xs:annotation>
			<xs:documentation>Ceiling Under       Vented Attic     
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SealAtticAssemblyRValue" type="xs:integer">
		<xs:annotation>
			<xs:documentation>Sealed Attic Assembly     
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="AboveGradeWallsRValue" type="xs:integer">
		<xs:annotation>
			<xs:documentation>     
				Above Grade Walls:	   R-X (Avg. RValue)
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="BasementInteriorWallRValue" type="xs:integer">
		<xs:annotation>
			<xs:documentation>  
				Basement Interior: R-X
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="BasementExteriorWallRValue" type="xs:integer">
		<xs:annotation>
			<xs:documentation>     
				Basement Exterior: R-X 
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="CrawlspaceWallRValue" type="xs:integer">
		<xs:annotation>
			<xs:documentation>    
				Crawlspace wall: R- X
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ExposedFloorRValue" type="xs:integer">
		<xs:annotation>
			<xs:documentation>    
				Exposed Floor:	R-X
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SlabEdgeRValue" type="xs:integer">
		<xs:annotation>
			<xs:documentation>    
				Slab Edge:
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="UnderSlabRValue" type="xs:integer">
		<xs:annotation>
			<xs:documentation>    
				Under-Slab
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DuctInsulationRValue" type="xs:integer">
		<xs:annotation>
			<xs:documentation>    
				Duct Insulation
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="WindowUo" type="xs:float">
		<xs:annotation>
			<xs:documentation>[Uo = (∑ (Ui * Ai)) / A  for i = 1, n]</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="WindowSHGC" type="xs:float">
		<xs:annotation>
			<xs:documentation>[SHGCo = (∑ (SHGCi * Ai)) / A  for i = 1, n]</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="HVACHeatingSystems">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="System" minOccurs="1" maxOccurs="100">
					<xs:complexType>
						<xs:all>
							<xs:element name="Fuel">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:enumeration value="electric"/>
										<xs:enumeration value="gas"/>
										<xs:enumeration value="oil"/>
										<xs:enumeration value="propane"/>
										<xs:enumeration value="biomass"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element name="Type">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:enumeration value="standard"/>
										<xs:enumeration value="combo"/>
										<xs:enumeration value="HeatPump"/>
										<xs:enumeration value="other"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element name="RatingMetric">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:enumeration value="HSPF"/>
										<xs:enumeration value="HSPF2"/>
										<xs:enumeration value="COP"/>
										<xs:enumeration value="AFUE"/>
										<xs:enumeration value="cAFUE"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element name="RatingValue" type="xs:float">
								<xs:annotation>
									<xs:documentation/>
								</xs:annotation>
							</xs:element>
							<xs:element name="RatedOutputCapacity">
								<xs:annotation>
									<xs:documentation/>
								</xs:annotation>
								<xs:complexType>
									<xs:simpleContent>
										<xs:extension base="xs:float">
											<xs:attribute fixed="kBtu/hr" name="unit">
											</xs:attribute>
										</xs:extension>
									</xs:simpleContent>
								</xs:complexType>
							</xs:element>
						</xs:all>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="NumHVACHeatingSystems" type="xs:int" default="1"/>
			<xs:assert test="(@NumHVACHeatingSystems = count(System))"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="HVACCoolingSystems">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="System" minOccurs="1" maxOccurs="100">
					<xs:complexType>
						<xs:all>
							<xs:element name="Type">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:enumeration value="electric"/>
										<xs:enumeration value="gas"/>
										<xs:enumeration value="other"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element name="RatingMetric">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:enumeration value="SEER"/>
										<xs:enumeration value="SEER2"/>
										<xs:enumeration value="EER"/>
										<xs:enumeration value="EER2"/>
										<xs:enumeration value="CEER"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element name="RatingValue" type="xs:float">
								<xs:annotation>
									<xs:documentation/>
								</xs:annotation>
							</xs:element>
							<xs:element name="RatedOutputCapacity">
								<xs:annotation>
									<xs:documentation>Rated Output Capacity (kBtu/h)</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:simpleContent>
										<xs:extension base="xs:float">
											<xs:attribute fixed="kBtu/hr" name="unit">
											</xs:attribute>
										</xs:extension>
									</xs:simpleContent>
								</xs:complexType>
							</xs:element>
						</xs:all>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="NumHVACCoolingSystems" type="xs:int" default="1"/>
			<xs:assert test="(@NumHVACCoolingSystems = count(System))"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="HotWaterSystems">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="System" minOccurs="1" maxOccurs="100">
					<xs:complexType>
						<xs:all>
							<xs:element name="Type">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:enumeration value="electric"/>
										<xs:enumeration value="gas"/>
										<xs:enumeration value="oil"/>
										<xs:enumeration value="propane"/>
										<xs:enumeration value="biomass"/>
										<xs:enumeration value="combo"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element name="RatingMetric">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:enumeration value="EF"/>
										<xs:enumeration value="UEF"/>
										<xs:enumeration value="CEF"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element name="RatingValue" type="xs:float">
								<xs:annotation>
									<xs:documentation/>
								</xs:annotation>
							</xs:element>
							<xs:element name="StorageCapacity">
								<xs:annotation>
									<xs:documentation>Storage capacity (Gallons)</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:simpleContent>
										<xs:extension base="xs:float">
											<xs:attribute fixed="Gallons" name="unit">
											</xs:attribute>
										</xs:extension>
									</xs:simpleContent>
								</xs:complexType>
							</xs:element>
						</xs:all>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="NumHotWaterSystems" type="xs:int" default="1"/>
			<xs:assert test="(@NumHotWaterSystems = count(System))"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="HVACMechVentSystems">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="System" minOccurs="0" maxOccurs="100">
					<xs:complexType>
						<xs:all>
							<xs:element name="Type">
								<xs:annotation>
									<xs:documentation>The following mechanical ventilation system Types are acceptable: none, Supply, Exhaust, HRV, ERV, CFIS, hybrid or other</xs:documentation>
								</xs:annotation>
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:enumeration value="none"/>
										<xs:enumeration value="Supply">
											<xs:annotation>
												<xs:documentation>A Supply-only ventilation system that brings in outdoor air</xs:documentation>
											</xs:annotation>
										</xs:enumeration>
										<xs:enumeration value="Exhaust">
											<xs:annotation>
												<xs:documentation>An Exhaust-only ventilation system that exhausts indoor air</xs:documentation>
											</xs:annotation>
										</xs:enumeration>
										<xs:enumeration value="HRV">
											<xs:annotation>
												<xs:documentation>A Heat Recovery Ventilator (HRV) is a Balanced System</xs:documentation>
											</xs:annotation>
										</xs:enumeration>
										<xs:enumeration value="ERV">
											<xs:annotation>
												<xs:documentation>An Energy Recovery Ventilator (ERV) is a Balanced System</xs:documentation>
											</xs:annotation>
										</xs:enumeration>
										<xs:enumeration value="CFIS">
											<xs:annotation>
												<xs:documentation>A Central Fan Integrated System (CFIS) or "Air Cycler" is a Supply ventilation system using the AHU to bring in and distribute outdoor air</xs:documentation>
											</xs:annotation>
										</xs:enumeration>
										<xs:enumeration value="hybrid"/>
										<xs:enumeration value="other"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element name="VentFanFlowRate">
								<xs:annotation>
									<xs:documentation>Vent fan flow rate in cfm</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:simpleContent>
										<xs:extension base="xs:float">
											<xs:attribute fixed="CFM" name="unit"> </xs:attribute>
										</xs:extension>
									</xs:simpleContent>
								</xs:complexType>
							</xs:element>
							<xs:element name="VentFanPower">
								<xs:annotation>
									<xs:documentation>Vent fan power in watts</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:simpleContent>
										<xs:extension base="xs:float">
											<xs:attribute fixed="watts" name="unit"> </xs:attribute>
										</xs:extension>
									</xs:simpleContent>
								</xs:complexType>
							</xs:element>
							<xs:element name="VentFanRunTime">
								<xs:annotation>
									<xs:documentation>Vent fan run time hours per day</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:simpleContent>
										<xs:extension base="xs:float">
											<xs:attribute fixed="hours per day" name="unit">
											</xs:attribute>
										</xs:extension>
									</xs:simpleContent>
								</xs:complexType>
							</xs:element>
						</xs:all>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="NumHVACMechVentSystems" type="xs:int" use="required"/>
			<xs:assert test="(@NumHVACMechVentSystems = count(System))"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="ServiceWaterHeatingSystems">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="System" minOccurs="1" maxOccurs="100">
					<xs:complexType>
						<xs:all>
							<xs:element name="Type">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:enumeration value="Storage"/>
										<xs:enumeration value="Nonstorage"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element name="RatingMetric">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:enumeration value="EF"/>
										<xs:enumeration value="UEF"/>
										<xs:enumeration value="CEF"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element name="RatingValue" type="xs:float">
								<xs:annotation>
									<xs:documentation/>
								</xs:annotation>
							</xs:element>
							<xs:element name="StorageCapacity">
								<xs:annotation>
									<xs:documentation>Storage capacity (Gallons)</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:simpleContent>
										<xs:extension base="xs:float">
											<xs:attribute fixed="Gallons" name="unit">
											</xs:attribute>
										</xs:extension>
									</xs:simpleContent>
								</xs:complexType>
							</xs:element>
							<xs:element name="PipeInsulation" type="xs:float">
								<xs:annotation>
									<xs:documentation>Pipe insulation RValue</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:all>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="NumServiceWaterHeatingSystems" type="xs:int" default="1"/>
			<xs:assert test="(@NumServiceWaterHeatingSystems = count(System))"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="SupplyDuctInsulation" type="xs:float">
		<xs:annotation>
			<xs:documentation>Supply duct insulation: </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="PerSupplyDuctCondSpace">
		<xs:annotation>
			<xs:documentation>Percent supply ducts in conditioned space </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:float">
					<xs:attribute default="%" name="unit">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="%"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="ReturnDuctInsulation" type="xs:float">
		<xs:annotation>
			<xs:documentation>Return duct insulation: </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="PerReturnDuctCondSpace">
		<xs:annotation>
			<xs:documentation>Percent return ducts in conditioned space </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:float">
					<xs:attribute default="%" name="unit">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="%"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="AirHandlerLocation">
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:enumeration value="Storage"/>
				<xs:enumeration value="Nonstorage"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="AboveGradeWalls">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Proposed">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Wall" minOccurs="1" maxOccurs="100">
								<xs:complexType>
									<xs:all>
										<xs:element name="Type" type="WallType"/>
										<xs:element ref="Area"/>
										<xs:element ref="RValue"/>
										<xs:element ref="SolarAbsorptance"/>
										<xs:element ref="Orientation"/>
										<xs:element ref="Emittance"/>
									</xs:all>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:attribute name="NumAboveGradeWalls" type="xs:int" default="1"/>
						<xs:assert test="(@NumAboveGradeWalls = count(Wall))"/>
					</xs:complexType>
				</xs:element>
				<xs:element name="Standard">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Wall" minOccurs="1" maxOccurs="100">
								<xs:complexType>
									<xs:all>
										<xs:element name="Type" type="WallType"/>
										<xs:element ref="Area"/>
										<xs:element ref="UFactor"/>
										<xs:element ref="Orientation"/>
									</xs:all>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:attribute name="NumAboveGradeWalls" type="xs:int" default="1"/>
						<xs:assert test="(@NumAboveGradeWalls = count(Wall))"/>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="BasementCrawlSpaceWalls">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Proposed">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Wall" minOccurs="0" maxOccurs="100">
								<xs:complexType>
									<xs:all>
										<xs:element name="Type" type="WallType"/>
										<xs:element ref="Area"/>
										<xs:element ref="RValue"/>
									</xs:all>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:attribute name="NumBasementCrawlSpaceWalls" type="xs:int" default="1"/>
						<xs:assert test="(@NumBasementCrawlSpaceWalls = count(Wall))"/>
					</xs:complexType>
				</xs:element>
				<xs:element name="Standard">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Wall" minOccurs="0" maxOccurs="100">
								<xs:complexType>
									<xs:all>
										<xs:element name="Type" type="WallType"/>
										<xs:element ref="Area"/>
										<xs:element ref="UFactor"/>
									</xs:all>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:attribute name="NumBasementCrawlSpaceWalls" type="xs:int" default="1"/>
						<xs:assert test="(@NumBasementCrawlSpaceWalls = count(Wall))"/>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="AboveGradeFloors">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Proposed">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Floor" minOccurs="0" maxOccurs="100">
								<xs:complexType>
									<xs:all>
										<xs:element name="Type">
											<xs:simpleType>
												<xs:restriction base="xs:string">
												<xs:enumeration value="Wood frame"/>
												<xs:enumeration value="Steel frame"/>
												<xs:enumeration value="Slab"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<xs:element ref="Area"/>
										<xs:element ref="RValue"/>
									</xs:all>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:attribute name="NumAboveGradeFloors" type="xs:int" default="1"/>
						<xs:assert test="(@NumAboveGradeFloors = count(Floor))"/>
					</xs:complexType>
				</xs:element>
				<xs:element name="Standard">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Floor" minOccurs="0" maxOccurs="100">
								<xs:complexType>
									<xs:all>
										<xs:element ref="Area"/>
										<xs:element ref="UFactor"/>
									</xs:all>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:attribute name="NumAboveGradeFloors" type="xs:int" default="1"/>
						<xs:assert test="(@NumAboveGradeFloors = count(Floor))"/>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="Ceilings">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Proposed">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Ceiling" minOccurs="1" maxOccurs="100">
								<xs:complexType>
									<xs:all>
										<xs:element name="Type" type="CeilingType"> </xs:element>
										<xs:element ref="Area"/>
										<xs:element ref="RValue"/>
									</xs:all>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:attribute name="NumCeilings" type="xs:int" default="1"/>
						<xs:assert test="(@NumCeilings = count(Ceiling))"/>
					</xs:complexType>
				</xs:element>
				<xs:element name="Standard">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Ceiling" minOccurs="1" maxOccurs="100">
								<xs:complexType>
									<xs:all>
										<xs:element ref="Area"/>
										<xs:element ref="UFactor"/>
									</xs:all>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:attribute name="NumCeilings" type="xs:int" default="1"/>
						<xs:assert test="(@NumCeilings = count(Ceiling))"/>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="Roofs">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Proposed">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Roof" minOccurs="1" maxOccurs="100">
								<xs:complexType>
									<xs:all>
										<xs:element name="Type">
											<xs:simpleType>
												<xs:restriction base="xs:string">
												<xs:enumeration value="Shingle"/>
												<xs:enumeration value="Metal"/>
												<xs:enumeration value="Tile"/>
												<xs:enumeration value="Built-up"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<xs:element ref="Area"/>
										<xs:element ref="RValue" minOccurs="0"/>
										<xs:element ref="SolarAbsorptance"/>
										<xs:element ref="Emittance"/>
									</xs:all>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:attribute name="NumRoofs" type="xs:int" default="1"/>
						<xs:assert test="(@NumRoofs = count(Roof))"/>
					</xs:complexType>
				</xs:element>
				<xs:element name="Standard">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Roof" minOccurs="1" maxOccurs="100">
								<xs:complexType>
									<xs:all>
										<xs:element ref="Area"/>
									</xs:all>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:attribute name="NumRoofs" type="xs:int" default="1"/>
						<xs:assert test="(@NumRoofs = count(Roof))"/>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="Attics">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Proposed">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Attic" minOccurs="0" maxOccurs="100">
								<xs:complexType>
									<xs:all>
										<xs:element name="Type">
											<xs:simpleType>
												<xs:restriction base="xs:string">
												<xs:enumeration value="Vented"/>
												<xs:enumeration value="Unvented"/>
												<xs:enumeration value="None"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<xs:element ref="Aperture"/>
									</xs:all>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:attribute name="NumAttics" type="xs:int" default="1"/>
						<xs:assert test="(@NumAttics = count(Attic))"/>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="Foundations">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Proposed">
					<xs:complexType>
						<xs:sequence>
							<xs:element ref="Foundation" minOccurs="0" maxOccurs="100"/>
						</xs:sequence>
						<xs:attribute name="NumFoundations" type="xs:int" default="1"/>
						<xs:assert test="(@NumFoundations = count(Foundation))"/>
					</xs:complexType>
				</xs:element>
				<xs:element name="Standard">
					<xs:complexType>
						<xs:sequence>
							<xs:element ref="Foundation" minOccurs="0" maxOccurs="100"/>
						</xs:sequence>
						<xs:attribute name="NumFoundations" type="xs:int" default="1"/>
						<xs:assert test="(@NumFoundations = count(Foundation))"/>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="OpaqueDoors">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Proposed">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Door" minOccurs="1" maxOccurs="100">
								<xs:complexType>
									<xs:all>
										<xs:element name="Type">
											<xs:simpleType>
												<xs:restriction base="xs:string">
												<xs:enumeration value="Insulated Metal"/>
												<xs:enumeration value="Uninsulated Metal"/>
												<xs:enumeration value="Wood"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<xs:element ref="Area"/>
										<xs:element ref="Orientation"/>
										<xs:element ref="UFactor"/>
									</xs:all>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:attribute name="NumDoors" type="xs:int" default="1"/>
						<xs:assert test="(@NumDoors = count(Door))"/>
					</xs:complexType>
				</xs:element>
				<xs:element name="Standard">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Door" minOccurs="1" maxOccurs="1">
								<xs:complexType>
									<xs:all>
										<xs:element ref="UFactor"/>
									</xs:all>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="Glazing">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Proposed">
					<xs:complexType>
						<xs:all>
							<xs:element ref="VGlazingArea"/>
							<xs:element ref="GlazingAreaPerCondFlArea"/>
							<xs:element ref="FrontHomeFaces"/>
							<xs:element ref="Windows" minOccurs="1" maxOccurs="100"> </xs:element>
						</xs:all>
					</xs:complexType>
				</xs:element>
				<xs:element name="Standard">
					<xs:complexType>
						<xs:all>
							<xs:element ref="VGlazingArea"/>
							<xs:element ref="GlazingAreaPerCondFlArea"/>
							<xs:element name="Window">
								<xs:complexType>
									<xs:all>
										<xs:element ref="UFactor"/>
										<xs:element ref="WindowSHGC"/>
									</xs:all>
								</xs:complexType>
							</xs:element>
						</xs:all>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="VFenestration">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Proposed">
					<xs:complexType>
						<xs:all>
							<xs:element ref="VFenestrationArea"/>
							<xs:element ref="VFenestrationAreaPerCondFlArea"/>
							<xs:element ref="FrontHomeFaces"/>
							<xs:element ref="Windows" minOccurs="0" maxOccurs="100"> </xs:element>
						</xs:all>
					</xs:complexType>
				</xs:element>
				<xs:element name="Standard">
					<xs:complexType>
						<xs:all>
							<xs:element ref="VFenestrationArea"/>
							<xs:element ref="VFenestrationAreaPerCondFlArea"/>
							<xs:element name="Window">
								<xs:complexType>
									<xs:all>
										<xs:element ref="UFactor"/>
										<xs:element ref="WindowSHGC"/>
									</xs:all>
								</xs:complexType>
							</xs:element>
						</xs:all>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="HeatingSystems">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Proposed">
					<xs:complexType>
						<xs:all>
							<xs:element ref="HVACHeatingSystems"/>
						</xs:all>
					</xs:complexType>
				</xs:element>
				<xs:element name="Standard">
					<xs:complexType>
						<xs:all>
							<xs:element ref="HVACHeatingSystems"/>
						</xs:all>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="CoolingSystems">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Proposed">
					<xs:complexType>
						<xs:all>
							<xs:element ref="HVACCoolingSystems"/>
						</xs:all>
					</xs:complexType>
				</xs:element>
				<xs:element name="Standard">
					<xs:complexType>
						<xs:all>
							<xs:element ref="HVACCoolingSystems"/>
						</xs:all>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="MechVentEnergy">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Proposed">
					<xs:complexType>
						<xs:all>
							<xs:element ref="AnnualVentFanEnergyUse"/>
						</xs:all>
					</xs:complexType>
				</xs:element>
				<xs:element name="Standard">
					<xs:complexType>
						<xs:all>
							<xs:element ref="AnnualVentFanEnergyUse"/>
						</xs:all>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="ServiceWaterHeating">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Proposed">
					<xs:complexType>
						<xs:all>
							<xs:element ref="ServiceWaterHeatingSystems"/>
						</xs:all>
					</xs:complexType>
				</xs:element>
				<xs:element name="Standard">
					<xs:complexType>
						<xs:all>
							<xs:element ref="ServiceWaterHeatingSystems"/>
						</xs:all>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="AnnualVentFanEnergyUse">
		<xs:annotation>
			<xs:documentation>
				Annual vent fan energy use 
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:float">
					<xs:attribute fixed="kwh/y" name="unit" type="xs:string"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="Foundation">
		<xs:complexType>
			<xs:all>
				<xs:element name="Type">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:enumeration value="Slab on grade"/>
							<xs:enumeration value="Basement"/>
							<xs:enumeration value="Crawlspace"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<xs:element name="ABWallArea">
					<xs:annotation>
						<xs:documentation>Above Grade wall Area: xxx ft2</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:float">
								<xs:attribute fixed="sq.ft." name="unit" type="xs:string"/>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="BGradeWallArea">
					<xs:annotation>
						<xs:documentation>Below Grade wall area: xxx ft2</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:float">
								<xs:attribute fixed="sq.ft." name="unit" type="xs:string"/>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
			</xs:all>
		</xs:complexType>
	</xs:element>
	<xs:element name="Windows">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Window" minOccurs="0" maxOccurs="100">
					<xs:complexType>
						<xs:all>
							<xs:element name="Type">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:enumeration value="Single pane"/>
										<xs:enumeration value="Double pane"/>
										<xs:enumeration value="Triple pane"/>
										<xs:enumeration value="Glazed block"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element name="FrameType">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:enumeration value="Metal"/>
										<xs:enumeration value="Metal with thermal break"/>
										<xs:enumeration value="Non-metal"/>
										<xs:enumeration value="Metal clad"/>
										<xs:enumeration value="Not Applicable"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element ref="UFactor"/>
							<xs:element ref="WindowSHGC"/>
							<xs:element ref="Orientation"/>
							<xs:element ref="Area"/>
							<xs:element name="ExShading">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:enumeration value="Yes"/>
										<xs:enumeration value="No"/>
										<xs:enumeration value="N/A"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element ref="OverhangDepth">
								<xs:annotation>
									<xs:documentation>
										Overhang Depth
									</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element ref="OverhangToTop">
								<xs:annotation>
									<xs:documentation>
										Overhang to top of Window
									</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element ref="OverhangToBottom">
								<xs:annotation>
									<xs:documentation>
										Overhang to bottom of window
									</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:all>
						<xs:assert
							test="((Type[.] != 'Glazed block') and (FrameType[.] != 'Not Applicable')) or ((Type[.] = 'Glazed block') and (FrameType[.] = 'Not Applicable'))"
							xerces:message="If window type is 'Glazed block' then frame type must be 'Not Applicable' otherwise please enter proper frame type."
						/>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="NumWindows" type="xs:int" default="1"/>
			<xs:assert test="(@NumWindows = count(Window))"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="VGlazingArea">
		<xs:annotation>
			<xs:documentation>Vertical glazing area</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:float">
					<xs:attribute fixed="sq.ft." name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="GlazingAreaPerCondFlArea">
		<xs:annotation>
			<xs:documentation>Vertical glazing as percent of conditioned floor  area</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:float">
					<xs:attribute fixed="%" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="VFenestrationArea">
		<xs:annotation>
			<xs:documentation>Vertical fenestration area</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:float">
					<xs:attribute fixed="sq.ft." name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="VFenestrationAreaPerCondFlArea">
		<xs:annotation>
			<xs:documentation>Vertical fenestration as percent of conditioned floor area</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:float">
					<xs:attribute fixed="%" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="Area">
		<xs:annotation>
			<xs:documentation>Area</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:float">
					<xs:attribute fixed="sq.ft." name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="Aperture">
		<xs:annotation>
			<xs:documentation>Aperture</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:float">
					<xs:attribute fixed="ft2 per 300 ft2 of ceiling area" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="Skylights">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Proposed">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Skylight" maxOccurs="100">
								<xs:complexType>
									<xs:all>
										<xs:element ref="Area"/>
										<xs:element ref="UFactor"/>
										<xs:element ref="SkylightSHGC"/>
									</xs:all>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:attribute name="NumSkylights" type="xs:int" default="1"/>
						<xs:assert test="(@NumSkylights = count(Skylight))"/>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="RValue" type="xs:float">
		<xs:annotation>
			<xs:documentation>RValue</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SolarAbsorptance" type="xs:float">
		<xs:annotation>
			<xs:documentation>Solar absorptance</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Emittance" type="xs:float">
		<xs:annotation>
			<xs:documentation>Emittance</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="UFactor" type="xs:float">
		<xs:annotation>
			<xs:documentation>UFactor</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ComplianceMetrics">
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:enumeration value="Annual Energy Cost"/>
				<xs:enumeration value="Source Energy Use"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="Orientation">
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:enumeration value="N"/>
				<xs:enumeration value="NE"/>
				<xs:enumeration value="E"/>
				<xs:enumeration value="SE"/>
				<xs:enumeration value="S"/>
				<xs:enumeration value="SW"/>
				<xs:enumeration value="W"/>
				<xs:enumeration value="NW"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="FrontHomeFaces">
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:enumeration value="N"/>
				<xs:enumeration value="NE"/>
				<xs:enumeration value="E"/>
				<xs:enumeration value="SE"/>
				<xs:enumeration value="S"/>
				<xs:enumeration value="SW"/>
				<xs:enumeration value="W"/>
				<xs:enumeration value="NW"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="SkylightSHGC" type="xs:float">
		<xs:annotation>
			<xs:documentation>Skylight SHGC</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ZERHVersion" type="ZERHVersionType">
		<xs:annotation>
			<xs:documentation>Zero Energy Rated Home (ZERH) version number.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="VersionNo" type="EnergyStarVersionType">
		<xs:annotation>
			<xs:documentation>EnergyStar version number.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="EnergyStarVersion" substitutionGroup="VersionNo">
		<xs:annotation>
			<xs:documentation>EnergyStar version number. This name can used instead of VersionNo</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="NextGenVersion">
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:enumeration value="NextGen v1.0">
					<xs:annotation>
						<xs:documentation>ENERGY STAR National NextGen Version 1.0</xs:documentation>
					</xs:annotation>
				</xs:enumeration>
				<xs:enumeration value="NextGen v1.1">
					<xs:annotation>
						<xs:documentation>ENERGY STAR National NextGen Version 1.1</xs:documentation>
					</xs:annotation>
				</xs:enumeration>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="WorstCase" type="xs:boolean" default="false"/>
	<xs:simpleType name="Currency">
		<xs:restriction base="xs:decimal">
			<xs:minExclusive value="0"/>
			<xs:fractionDigits value="2"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="state">
		<xs:restriction base="xs:string">
			<xs:enumeration value="AK"/>
			<xs:enumeration value="AL"/>
			<xs:enumeration value="AR"/>
			<xs:enumeration value="AL"/>
			<xs:enumeration value="AK"/>
			<xs:enumeration value="AR"/>
			<xs:enumeration value="AZ"/>
			<xs:enumeration value="CA"/>
			<xs:enumeration value="CO"/>
			<xs:enumeration value="CT"/>
			<xs:enumeration value="DC"/>
			<xs:enumeration value="DE"/>
			<xs:enumeration value="FL"/>
			<xs:enumeration value="GA"/>
			<xs:enumeration value="HI"/>
			<xs:enumeration value="ID"/>
			<xs:enumeration value="IL"/>
			<xs:enumeration value="IN"/>
			<xs:enumeration value="IA"/>
			<xs:enumeration value="KS"/>
			<xs:enumeration value="KY"/>
			<xs:enumeration value="LA"/>
			<xs:enumeration value="ME"/>
			<xs:enumeration value="MD"/>
			<xs:enumeration value="MA"/>
			<xs:enumeration value="MI"/>
			<xs:enumeration value="MN"/>
			<xs:enumeration value="MS"/>
			<xs:enumeration value="MO"/>
			<xs:enumeration value="MT"/>
			<xs:enumeration value="NE"/>
			<xs:enumeration value="NH"/>
			<xs:enumeration value="NV"/>
			<xs:enumeration value="NJ"/>
			<xs:enumeration value="NM"/>
			<xs:enumeration value="NY"/>
			<xs:enumeration value="NC"/>
			<xs:enumeration value="ND"/>
			<xs:enumeration value="OH"/>
			<xs:enumeration value="OK"/>
			<xs:enumeration value="OR"/>
			<xs:enumeration value="PA"/>
			<xs:enumeration value="PR"/>
			<xs:enumeration value="RI"/>
			<xs:enumeration value="SC"/>
			<xs:enumeration value="SD"/>
			<xs:enumeration value="TN"/>
			<xs:enumeration value="TX"/>
			<xs:enumeration value="UT"/>
			<xs:enumeration value="VA"/>
			<xs:enumeration value="VI"/>
			<xs:enumeration value="VT"/>
			<xs:enumeration value="WA"/>
			<xs:enumeration value="WV"/>
			<xs:enumeration value="WI"/>
			<xs:enumeration value="WY"/>
			<xs:enumeration value=""/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="WallType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Wood frame"/>
			<xs:enumeration value="Steel frame"/>
			<xs:enumeration value="Mass"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="CeilingType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Wood frame"/>
			<xs:enumeration value="Steel frame"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="VentRateType">
		<xs:union memberTypes="xs:float">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="Not Applicable"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:union>
	</xs:simpleType>
	<xs:simpleType name="DuctLeakageRateType">
		<xs:union memberTypes="xs:float">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="Home is Exempt from Duct Testing"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:union>
	</xs:simpleType>
	<xs:simpleType name="ChecklistResultType">
		<xs:union memberTypes="BasicChecklistResultType">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="Not Applicable"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:union>
	</xs:simpleType>
	<xs:simpleType name="BasicChecklistResultType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="PASSES"/>
			<xs:enumeration value="FAILS"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="PermitBasicChecklistResultType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="To be verified on certificate of occupancy documents"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="PermitChecklistResultType">
		<xs:union memberTypes="PermitBasicChecklistResultType">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="Not Applicable"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:union>
	</xs:simpleType>
	<xs:simpleType name="PermitSection402_4_2_1Type">
		<xs:union memberTypes="xs:float">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="Proposed Visual Inspection Option"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:union>
	</xs:simpleType>
	<xs:simpleType name="Section402_4_2_1Type">
		<xs:union memberTypes="xs:float">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="Visual Inspection Option Used"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:union>
	</xs:simpleType>
	<xs:simpleType name="MeasuredEnvelopLeakageType">
		<xs:union memberTypes="xs:float">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="Visual Inspection Option Used"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:union>
	</xs:simpleType>
	<xs:simpleType name="Section402_4_2_2Type">
		<xs:union memberTypes="BasicChecklistResultType">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="Testing Option Used"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:union>
	</xs:simpleType>
	<xs:simpleType name="Section403_2_2bType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Total leakage at rough-in with air handler installed"/>
			<xs:enumeration value="Total leakage at rough-in without air handler installed"/>
			<xs:enumeration value="Post-construction leakage to outdoors"/>
			<xs:enumeration value="Post-construction total leakage"/>
			<xs:enumeration value="Home is Exempt from Duct Testing"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="R403_3_3Type">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Total leakage at rough-in with air handler installed"/>
			<xs:enumeration value="Total leakage at rough-in without air handler installed"/>
			<xs:enumeration value="Post-construction total leakage"/>
			<xs:enumeration value="Home is Exempt from Duct Testing"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="DuctLeakageRateUnits2009">
		<xs:restriction base="xs:string">
			<xs:enumeration value="cfm/100 ft2 Total"/>
			<xs:enumeration value="cfm/100 ft2 To out"/>
		</xs:restriction>
	</xs:simpleType>


	<xs:simpleType name="EmailAddress">
		<xs:annotation>
			<xs:documentation/>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="[^@]+@[^\.]+\..+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="SelectDWCapacity">
		<xs:annotation>
			<xs:documentation/>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Standard"/>
			<xs:enumeration value="Compact"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="SelectNoShowersConnected">
		<xs:annotation>
			<xs:documentation/>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="One"/>
			<xs:enumeration value="Multiple"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="RevisionType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Confirmed Ratings"/>
			<xs:enumeration value="Projected Ratings"/>
			<xs:enumeration value="IECC2009 Permit"/>
			<xs:enumeration value="IECC2009 Certificate"/>
			<xs:enumeration value="IECC2018 Permit"/>
			<xs:enumeration value="IECC2018 Certificate"/>
			<xs:enumeration value="HERS H2O"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="VerifierType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Rater of Record verification"/>
			<xs:enumeration value="RFI verifications"/>
			<xs:enumeration value="HERS Modeler verifications"/>
			<xs:enumeration value="Duct Testing verification"/>
			<xs:enumeration value="Pre-drywall inspection verification"/>
			<xs:enumeration value="HVAC Grading verification"/>
			<xs:enumeration value="HERS H2O verification"/>
			<xs:enumeration value="Energy Code verification"/>
			<xs:enumeration value="IECC Certificate"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="EnergyStarVersionType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="USv3.0">
				<xs:annotation>
					<xs:documentation>National version 3.0</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="USv3.1">
				<xs:annotation>
					<xs:documentation>National version 3.1</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="USv3.2">
				<xs:annotation>
					<xs:documentation>National version 3.2</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="USv4.0">
				<xs:annotation>
					<xs:documentation>National version 4.0</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CAv3.0">
				<xs:annotation>
					<xs:documentation>California version 3.0</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CAv3.1">
				<xs:annotation>
					<xs:documentation>California version 3.1</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CAv3.2">
				<xs:annotation>
					<xs:documentation>California version 3.2</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CAv3.3">
				<xs:annotation>
					<xs:documentation>California version 3.3</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CAv4.0">
				<xs:annotation>
					<xs:documentation>ENERGY STAR California Version 4.0</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FLv3.0">
				<xs:annotation>
					<xs:documentation>Florida version 3.0</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FLv3.1">
				<xs:annotation>
					<xs:documentation>Florida version 3.1</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="GHPv3.0">
				<xs:annotation>
					<xs:documentation>Guam, Hawaii and the Northan Mariana Islands version 3.0</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PRVIv3.0">
				<xs:annotation>
					<xs:documentation>Puerto Rico and US Virgin Islands version 3.0</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="WAv3.2">
				<xs:annotation>
					<xs:documentation>Washington State version 3.2</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MFUSv1">
				<xs:annotation>
					<xs:documentation>National MFNC version 1</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MFUSv1.1">
				<xs:annotation>
					<xs:documentation>National MFNC version 1.1</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MFUSv1.2">
				<xs:annotation>
					<xs:documentation>National MFNC version 1.2</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MFUSv4.0">
				<xs:annotation>
					<xs:documentation>National MFNC version 4.0</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CaribbeanMFNCv1">
				<xs:annotation>
					<xs:documentation>Caribbean MFNC version 1.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MFCAv1.2">
				<xs:annotation>
					<xs:documentation>California MFNC version 1.2</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MFCAv1.3">
				<xs:annotation>
					<xs:documentation>California MFNC version 1.3</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MFCAv4.0">
				<xs:annotation>
					<xs:documentation>California MFNC version 4.0</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MFWAv1.2">
				<xs:annotation>
					<xs:documentation>Washington State + Oregon MFNC version 1.2</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ZERHVersionType">
		<xs:annotation>
			<xs:documentation>Enter DOE ZERH version number</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="ZERHv1.8">
				<xs:annotation>
					<xs:documentation>National version 1, revision 08</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ZERHv1.8CA">
				<xs:annotation>
					<xs:documentation>California version 1, revision 08</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SFZERHv2">
				<xs:annotation>
					<xs:documentation>National Single Family ZERH version 2</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MFZERHv2">
				<xs:annotation>
					<xs:documentation>National Multifamily ZERH version 2</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SFZERHv2CA">
				<xs:annotation>
					<xs:documentation>California Single Family ZERH version 2</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MFZERHv2CA">
				<xs:annotation>
					<xs:documentation>California Multifamily ZERH version 2</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>

	<xs:element name="Provider">
		<xs:complexType>
			<xs:all>
				<xs:element name="Name" type="xs:string"/>
				<xs:element ref="ProviderID"/>
				<xs:element name="ProviderEmail" type="EmailAddress" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Enter the provider's e-mail address</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:all>
		</xs:complexType>
	</xs:element>
	<xs:element name="ProviderID">
		<xs:simpleType>
			<xs:annotation>
				<xs:documentation>ProviderID in the form XXXX-XXX</xs:documentation>
			</xs:annotation>
			<xs:restriction base="xs:string">
				<xs:pattern value="[0-9]{4}[-][0-9]{3}"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="PermitID">
		<xs:simpleType>
			<xs:annotation>
				<xs:documentation>Permit ID in the form XXXXXX Check format</xs:documentation>
			</xs:annotation>
			<xs:restriction base="xs:string">
				<xs:pattern value="[A-Z0-9]{24}"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="ReportDateCompleted" type="xs:date">
		<xs:annotation>
			<xs:documentation>Date Completed in YYYY-MM-DD format</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="RegistryID">
		<xs:simpleType>
			<xs:annotation>
				<xs:documentation>9-digit Numeric RegistryID</xs:documentation>
			</xs:annotation>
			<xs:restriction base="xs:string">
				<xs:pattern value="[0-9]{9}"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="ReportNo">
		<xs:simpleType>
			<xs:annotation>
				<xs:documentation>ReportNo returned by RESNET. Check format</xs:documentation>
			</xs:annotation>
			<xs:restriction base="xs:string">
				<xs:pattern value="[A-Z0-9]{24}"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="SiteRatingDate" type="FormattedDate">
		<xs:annotation>
			<xs:documentation>Enter date H2O Rating Site visit was completed.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="RESNETHERSIndexID" type="xs:integer" nillable="true">
		<xs:annotation>
			<xs:documentation>If Home is HERS Rated, enter HERS Index Registration ID here.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="H2OID">
		<xs:annotation>
			<xs:documentation>If there an existing HERS H2O ID, enter it here.</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:pattern value="(H2O[0-9]{9})?"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="NumberOfFloors" type="xs:nonNegativeInteger">
		<xs:annotation>
			<xs:documentation>Entry must be an integer</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Basement" type="xs:boolean">
		<xs:annotation>
			<xs:documentation>Select answer from pull-down </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="PressureTankPsiLimit" type="xs:boolean">
		<xs:annotation>
			<xs:documentation>Select 'Yes' from pull-down if pressure tank installed and set ≤ 90 psi</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="PressureRegulatorPsiLimit" type="xs:boolean">
		<xs:annotation>
			<xs:documentation>Select 'Yes' from pull-down if pressure regulating valve installed upstream of fixtures and pressure test ≤ 90</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DocumentationPsi" type="xs:boolean">
		<xs:annotation>
			<xs:documentation>Select 'Yes' from pull-down if written documentation from water supplier that pressure ≤ 90</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="MeasuredPressure">
		<xs:annotation>
			<xs:documentation>Enter static water gage reading (psig) measured at the indoor fixture outlet on the lowest floor closest to the water service entry</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:decimal">
					<xs:attribute fixed="psig" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="WaterSoftener" type="xs:boolean">
		<xs:annotation>
			<xs:documentation>Select answer from pull-down </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="FlushVolumeMarker" type="xs:boolean">
		<xs:annotation>
			<xs:documentation>Select answer from pull-down </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="NoSingleFlushToilets" type="xs:nonNegativeInteger">
		<xs:annotation>
			<xs:documentation>Enter the number of single-flush toilets</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="NoDualFlushToilets" type="xs:nonNegativeInteger">
		<xs:annotation>
			<xs:documentation>Enter the number of dual-flush toilets</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SingleFlushVolume">
		<xs:annotation>
			<xs:documentation>Enter average gallons per flush (gpf) of all single-flush toilets </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:decimal">
					<xs:attribute fixed="gpf" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="DualFlushVolume">
		<xs:annotation>
			<xs:documentation>Enter average gallons per flush (gpf) of all dual-flush toilets </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:decimal">
					<xs:attribute fixed="gpf" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="NonWaterConsuming" type="xs:boolean">
		<xs:annotation>
			<xs:documentation>Select 'Yes' from pull-down if NonWaterConsuming toilets present</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="NoNonWaterToilets" type="xs:nonNegativeInteger">
		<xs:annotation>
			<xs:documentation>Enter the number of NonWaterConsuming toilets</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ShowerHeadFlowRate">
		<xs:annotation>
			<xs:documentation>Enter average gallons per minute (gpm) flow rate of all shower heads. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:decimal">
					<xs:attribute fixed="gpm" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="LavatoryFaucetEfficiency" type="SelectLavatoryFaucetEfficiency">
		<xs:annotation>
			<xs:documentation>Select 'Standard' or 'Low-flow' from pull-down </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="KitchenSinkFaucetFlowRate">
		<xs:annotation>
			<xs:documentation>Enter gallons per minute (gpm) flow rate of kitchen sink</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:decimal">
					<xs:attribute name="unit" fixed="gpm"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="DWMake" type="xs:string">
		<xs:annotation>
			<xs:documentation>Per Dishwasher specifications (cut sheet)</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DWModel" type="xs:string">
		<xs:annotation>
			<xs:documentation>Per Dishwasher specifications (cut sheet)</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DWCapacity" type="SelectDWCapacity">
		<xs:annotation>
			<xs:documentation>Select answer from pull-down as labeled on Energy Guide Label</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DWGallonsPerCycle" type="xs:decimal" nillable="true">
		<xs:annotation>
			<xs:documentation>Enter gallons per cycle from CCMS database </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DWLabelEnergyRating" nillable="true">
		<xs:annotation>
			<xs:documentation>kWh per year (from label)</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:integer">
					<xs:attribute fixed="kWh/y" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="DWElectricHotWaterCost" nillable="true">
		<xs:annotation>
			<xs:documentation>$ per year (from label)</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:decimal">
					<xs:attribute fixed="$/y" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="DWGasHotWaterCosts" nillable="true">
		<xs:annotation>
			<xs:documentation>$ per year (from label)</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:decimal">
					<xs:attribute fixed="$/y" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="DWElectricPrice" nillable="true">
		<xs:annotation>
			<xs:documentation>$/kWh (from bottom of label)</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:decimal">
					<xs:attribute fixed="$/kWh" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="DWGasPrice" nillable="true">
		<xs:annotation>
			<xs:documentation>$/therm (from bottom of label)</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:decimal">
					<xs:attribute fixed="$/therm" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="DWWashLoadsPerWeek" type="xs:nonNegativeInteger" nillable="true">
		<xs:annotation>
			<xs:documentation>Integer (from bottom of label)</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="CWMake" type="xs:string">
		<xs:annotation>
			<xs:documentation>per specifications</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="CWModel" type="xs:string">
		<xs:annotation>
			<xs:documentation>per specifications</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="CWCapacity">
		<xs:annotation>
			<xs:documentation>cu.ft (from label)</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:integer">
					<xs:attribute default="cu.ft" name="unit">
						<xs:simpleType>
							<xs:annotation>
								<xs:documentation/>
							</xs:annotation>
							<xs:restriction base="xs:string">
								<xs:enumeration value="cu.ft"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="CWIntegratedWaterFactor" type="xs:decimal">
		<xs:annotation>
			<xs:documentation>from CCMS database</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="CWIMEF" type="xs:integer" nillable="true">
		<xs:annotation>
			<xs:documentation>from CCMS database</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="CWLabelEnergyRating" nillable="true">
		<xs:annotation>
			<xs:documentation>kWh per year (from label)</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:integer">
					<xs:attribute fixed="kWh/y" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="CWElectricHotWaterCost" nillable="true">
		<xs:annotation>
			<xs:documentation>$ per year (from label)</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:decimal">
					<xs:attribute fixed="$/y" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="CWGasHotWaterCosts" nillable="true">
		<xs:annotation>
			<xs:documentation>$ per year (from label)</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:decimal">
					<xs:attribute fixed="$/y" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="CWElectricPrice" nillable="true">
		<xs:annotation>
			<xs:documentation>$/kWh (from bottom of label)</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:decimal">
					<xs:attribute fixed="$/kWh" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="CWGasPrice" nillable="true">
		<xs:annotation>
			<xs:documentation>$/kWh (from bottom of label)</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:decimal">
					<xs:attribute fixed="$/therm" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="CWWashLoadsPerWeek" type="xs:nonNegativeInteger" nillable="true">
		<xs:annotation>
			<xs:documentation>Integer (from bottom of label)</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="HWSystemPipeLength">
		<xs:annotation>
			<xs:documentation>Enter length in linear feet of hot water piping (PipL) per requirements of Section 4.2.2.5.2.11, ANSI/RESNET/ICC 301-2019</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:decimal">
					<xs:attribute fixed="ft" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="HWPipeInsulated" type="xs:boolean">
		<xs:annotation>
			<xs:documentation>Enter length in linear feet of hot water piping (PipL) per requirements of Section 4.2.2.5.2.11, ANSI/RESNET/ICC 301-2019</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="HWRecirculation" type="xs:boolean">
		<xs:annotation>
			<xs:documentation>Select 'Yes' from pull-down if hot water recirculation system installed</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DrainWaterHeatRecovery" type="xs:boolean">
		<xs:annotation>
			<xs:documentation>Select answer from pull-down based on requirements of Section 4.2.2.5.2.11.1, ANSI/RESNET/ICC 301-2019</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="NoShowersConnected" type="SelectNoShowersConnected">
		<xs:annotation>
			<xs:documentation>Select answer from pull-down based on requirements of Section 4.2.2.5.2.11.1, ANSI/RESNET/ICC 301-2019</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="EqualFlow" type="xs:boolean">
		<xs:annotation>
			<xs:documentation>Select answer from pull-down based on requirements of Section 4.2.2.5.2.11.1, ANSI/RESNET/ICC 301-2019</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="CSADWHREff" type="xs:decimal">
		<xs:annotation>
			<xs:documentation>Enter Drain Water Heat Recovery (DWHR) efficiency percentage in accordance with CSA 55.1</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="LotArea">
		<xs:annotation>
			<xs:documentation>Enter entire square feet area of the Lot where the rated home is located. Can typically be obtained from a site plan. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:decimal">
					<xs:attribute fixed="sq.ft." name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="PadFootprintArea">
		<xs:annotation>
			<xs:documentation>Enter measured square feet of home pad footprint area</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:decimal">
					<xs:attribute fixed="sq.ft." name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="HardscapeArea">
		<xs:annotation>
			<xs:documentation>Enter measured square feet area of hardscaping (e.g. driveways, sidewalks, patios or any area not receiving supplemental irrigation)</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:decimal">
					<xs:attribute fixed="sq.ft." name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="TotalAvailableArea">
		<xs:annotation>
			<xs:documentation>Calculated in accordance with Section 5.3, Standard 850</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:decimal">
					<xs:attribute fixed="sq.ft." name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="FrontArea">
		<xs:annotation>
			<xs:documentation>Enter measured square feet of the home front-facing area (or 'Total Available Area' if finished landscape for the entire yard)</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:decimal">
					<xs:attribute fixed="sq.ft." name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="BackArea">
		<xs:annotation>
			<xs:documentation>Calculated as TotalAvailableArea - FrontArea</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:decimal">
					<xs:attribute fixed="sq.ft." name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="IsBackAreaImproved" type="xs:boolean">
		<xs:annotation>
			<xs:documentation>Is the Back area improved in accordance with Section 5.3, Standard 850?</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="FrontIrrigationArea" nillable="true">
		<xs:annotation>
			<xs:documentation>Enter ONLY the FrontIrrigationArea. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:decimal">
					<xs:attribute fixed="sq.ft." name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="BackIrrigationArea">
		<xs:annotation>
			<xs:documentation>IF Back area is improved, enter BackIrrigationArea OR if there is no BackIrrigationArea, enter 0.001</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:decimal">
					<xs:attribute fixed="sq.ft." form="unqualified" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="TotalIrrigationArea">
		<xs:annotation>
			<xs:documentation>Calculated in accordance with Section 5.3, Standard 850</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:decimal">
					<xs:attribute fixed="sq.ft." form="unqualified" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="PoolOrSpa" type="xs:boolean">
		<xs:annotation>
			<xs:documentation>Select 'Yes' from pull-down if pool or spa is present</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="IrrigationSystem" type="xs:boolean">
		<xs:annotation>
			<xs:documentation>Select 'Yes' from pull-down if automatic irrigation system installed?</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ProfessionIrrAudit" type="xs:boolean">
		<xs:annotation>
			<xs:documentation>Select 'Yes' from pull-down if inspection by Certified Professional</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="IrrWeatherControl" type="xs:boolean">
		<xs:annotation>
			<xs:documentation>Select 'Yes' from pull-down if weather-based irrigation controllers or approved soil moisture sensor-based controller</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="UseRICI" type="xs:boolean">
		<xs:annotation>
			<xs:documentation>Select 'Yes' from pull-down if Residential Irrigation Capacity Index (RICI) is to be used</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="RICIZoneFlowRates" type="xs:decimal">
		<xs:annotation>
			<xs:documentation>Enter the sum of all irrigation system flow rates to use RICI credits</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="H2OPrice">
		<xs:annotation>
			<xs:documentation>Enter water cost in dollars per hundred cubic feet (1 CCF = 748.05 gallons)</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="Currency">
					<xs:attribute name="unit" fixed="$/CCF"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="WSPressureLossTests" type="xs:boolean" nillable="true">
		<xs:annotation>
			<xs:documentation>Pressure-loss test on all water supplies detects no leaks</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="WSLeakFreeHotWater" type="xs:boolean" nillable="true">
		<xs:annotation>
			<xs:documentation>Free of visible leaks from hot water delivery system</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="WSLeakFreeToilets" type="xs:boolean" nillable="true">
		<xs:annotation>
			<xs:documentation>Free of visible leaks from toilet(s), as determined through visual assessment and by conducting a dye tablet test in each toilet to ensure the flapper is not leaking</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="WSLeakFreeBathroomFaucets" type="xs:boolean" nillable="true">
		<xs:annotation>
			<xs:documentation>Free of visible leaks from bathroom faucet(s)</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="WSLeakFreeShowerheads" type="xs:boolean" nillable="true">
		<xs:annotation>
			<xs:documentation>Free of visible leaks from showerhead(s)</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="WSLeakFreeBathroomTubs" type="xs:boolean" nillable="true">
		<xs:annotation>
			<xs:documentation>Free of visible leaks from bathroom tub faucet(s), i.e., tub spout(s), when showerhead(s) is activated, as determined through visual assessment after showerhead has been activated for one minute</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="WSLeakFreeKitchenFaucets" type="xs:boolean" nillable="true">
		<xs:annotation>
			<xs:documentation>Free of visible leaks from kitchen and other sink faucet(s)</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="WSLeakFreeOtherFixtures" type="xs:boolean" nillable="true">
		<xs:annotation>
			<xs:documentation>Free of visible leaks from other fixtures or appliances (e.g., clothes washers, dishwashers, hose bibs, irrigation systems) at point of use or point of connection to water distribution system</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="WSToiletsLabeled" type="xs:boolean" nillable="true">
		<xs:annotation>
			<xs:documentation>WaterSense labeled</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="WSBathroomSinkFaucetsLabeled" type="xs:boolean" nillable="true">
		<xs:annotation>
			<xs:documentation>WaterSense labeled</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="WSShowerheadsLabeled" type="xs:boolean" nillable="true">
		<xs:annotation>
			<xs:documentation>WaterSense labeled</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="AnnualReferenceH2OUse">
		<xs:annotation>
			<xs:documentation>gal per year</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:decimal">
					<xs:attribute fixed="gal/y" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="AnnualRatedH2OUse">
		<xs:annotation>
			<xs:documentation>gal per year</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:decimal">
					<xs:attribute fixed="gal/y" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="AnnualH2OSaved">
		<xs:annotation>
			<xs:documentation>gal per year</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:decimal">
					<xs:attribute fixed="gal/y" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="AnnualH2OCostSavings">
		<xs:annotation>
			<xs:documentation>$ per year</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="Currency">
					<xs:attribute fixed="$/y" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="IndoorWaterRatingIndex" type="xs:integer"/>
	<xs:element name="OutdoorWaterRatingIndex" type="xs:integer"/>
	<xs:element name="OverallWaterRatingIndex" type="xs:integer"/>
	<xs:element name="EstimatedIndoorDailyUse">
		<xs:annotation>
			<xs:documentation>gal per day</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:decimal">
					<xs:attribute fixed="gal/day" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="EstimatedIndoorDailySavings">
		<xs:annotation>
			<xs:documentation>gal per day</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:decimal">
					<xs:attribute fixed="gal/day" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="EstimatedOutdoorDailyUse">
		<xs:annotation>
			<xs:documentation>gal per day</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:decimal">
					<xs:attribute fixed="gal/day" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="EstimatedOutdoorDailySavings">
		<xs:annotation>
			<xs:documentation>gal per day</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:decimal">
					<xs:attribute fixed="gal/day" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="WaterServicePressure">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="PressureTankPsiLimit"/>
				<xs:element ref="PressureRegulatorPsiLimit"/>
				<xs:element ref="DocumentationPsi"/>
				<xs:element ref="MeasuredPressure"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="Toilets">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="FlushVolumeMarker"/>
				<xs:element ref="NoSingleFlushToilets"/>
				<xs:element ref="NoDualFlushToilets"/>
				<xs:element ref="SingleFlushVolume"/>
				<xs:element ref="DualFlushVolume"/>
				<xs:element ref="NonWaterConsuming"/>
				<xs:element ref="NoNonWaterToilets"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="ClothesWasher">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="CWMake"/>
				<xs:element ref="CWModel"/>
				<xs:element ref="CWCapacity"/>
				<xs:element ref="CWIntegratedWaterFactor"/>
				<xs:element ref="CWIMEF" minOccurs="0"/>
				<xs:element ref="CWLabelEnergyRating" minOccurs="0"/>
				<xs:element ref="CWElectricHotWaterCost" minOccurs="0"/>
				<xs:element ref="CWGasHotWaterCosts" minOccurs="0"/>
				<xs:element ref="CWElectricPrice" minOccurs="0"/>
				<xs:element ref="CWGasPrice" minOccurs="0"/>
				<xs:element ref="CWWashLoadsPerWeek" minOccurs="0"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="Dishwasher">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="DWMake"/>
				<xs:element ref="DWModel"/>
				<xs:element ref="DWCapacity"/>
				<xs:element ref="DWGallonsPerCycle" minOccurs="0"/>
				<xs:element ref="DWLabelEnergyRating" minOccurs="0"/>
				<xs:element ref="DWElectricHotWaterCost" minOccurs="0"/>
				<xs:element ref="DWGasHotWaterCosts" minOccurs="0"/>
				<xs:element ref="DWElectricPrice" minOccurs="0"/>
				<xs:element ref="DWGasPrice" minOccurs="0"/>
				<xs:element ref="DWWashLoadsPerWeek" minOccurs="0"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="AssemblyUFactor" type="xs:float"> </xs:element>
	<xs:element name="ContinuousInsulation" type="xs:float"> </xs:element>
	<xs:element name="CavityInsulation" type="xs:float"> </xs:element>
	<xs:element name="Location">
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:enumeration value="Between Cond and Ambient"/>
				<xs:enumeration value="Exposed Exterior"/>
				<xs:enumeration value="Garage"/>
				<xs:enumeration value="Vented Crawl"/>
				<xs:enumeration value="Attic"/>
				<xs:enumeration value="Unconditioned Basement"/>
				<xs:enumeration value="Enclosed Crawl"/>
				<xs:enumeration value="Btw uncond bsmt_ambient"/>
				<xs:enumeration value="Btw uncond bsmt_garage"/>
				<xs:enumeration value="Btw uncond bsmt_open crawl"/>
				<xs:enumeration value="Btw enclosed crawl_ambient"/>
				<xs:enumeration value="Btw enclosed crawl_garage"/>
				<xs:enumeration value="Btw enclosed crawl_open crawl"/>
				<xs:enumeration value="Adiabatic"/>
				<xs:enumeration value="Btw cond crawl_ambient"/>
				<xs:enumeration value="Btw cond crawl_garage"/>
				<xs:enumeration value="Conditioned Space"/>
				<xs:enumeration value="Sealed Attic"/>
				<xs:enumeration value="Vaulted Roof"/>
				<xs:enumeration value="Uncond Above Ground Room"/>
				<xs:enumeration value="Raised Floor"/>
				<xs:enumeration value="Btw cond crawl_open crawl"/>
				<xs:enumeration value="Btw cond crawl_enclosed crawl"/>
				<xs:enumeration value="Btw cond crawl_uncond bsmt"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="FramingFactor">
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:decimal">
					<xs:attribute fixed="%" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="InsulationGrade">
		<xs:simpleType>
			<xs:restriction base="xs:integer">
				<xs:enumeration value="1"/>
				<xs:enumeration value="2"/>
				<xs:enumeration value="3"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>


	<xs:element name="OverhangDepth">
		<xs:annotation>
			<xs:documentation>
				Overhang Depth
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:float">
					<xs:attribute fixed="ft" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="OverhangToTop">
		<xs:annotation>
			<xs:documentation>
				Overhang to top of Window
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:float">
					<xs:attribute fixed="ft" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="OverhangToBottom">
		<xs:annotation>
			<xs:documentation>
				Overhang to bottom of window
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:float">
					<xs:attribute fixed="ft" name="unit"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>

	<xs:simpleType name="FormattedDate">
		<xs:annotation>
			<xs:documentation/>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern
				value="(((0?[1-9]|1[012])\/(0?[1-9]|1\d|2[0-8])|(0?[13456789]|1[012])\/(29|30)|(0?[13578]|1[02])\/31)\/(19|[2-9]\d)\d{2}|0?2\/29\/((19|[2-9]\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00)))"
			/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="SelectLavatoryFaucetEfficiency">
		<xs:annotation>
			<xs:documentation/>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Standard"/>
			<xs:enumeration value="Low-flow"/>
		</xs:restriction>
	</xs:simpleType>



</xs:schema>
